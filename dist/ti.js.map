{"version":3,"file":"ti.js","mappings":"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","sources":["webpack://ti/./src/parse/tibasic.peggy","webpack://ti/./src/common/types.js","webpack://ti/./src/parse/pegutil.js","webpack://ti/webpack/bootstrap","webpack://ti/webpack/runtime/compat get default export","webpack://ti/webpack/runtime/define property getters","webpack://ti/webpack/runtime/hasOwnProperty shorthand","webpack://ti/webpack/runtime/make namespace object","webpack://ti/./src/inject/loader.js","webpack://ti/./src/inject/web/looper.web.js","webpack://ti/./src/common/core.js","webpack://ti/./src/common/signal.js","webpack://ti/./src/parse/parser.js","webpack://ti/./src/evaluate/operation.js","webpack://ti/./src/evaluate/expression.js","webpack://ti/./src/evaluate/assignment.js","webpack://ti/./src/evaluate/iolib.js","webpack://ti/./src/evaluate/statement.js","webpack://ti/./src/run/daemon.js","webpack://ti/./src/run/runtime.js","webpack://ti/./src/index.js","webpack://ti/./src/inject/web/loader.web.js"],"sourcesContent":["// Generated by Peggy 2.0.1.\n//\n// https://peggyjs.org/\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  // istanbul ignore next Check is a necessary evil to support older environments\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = \"SyntaxError\";\n  return self;\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || \" \";\n  if (str.length > targetLength) { return str; }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\n\npeg$SyntaxError.prototype.format = function(sources) {\n  var str = \"Error: \" + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var loc = this.location.source + \":\" + s.line + \":\" + s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd(\"\", s.line.toString().length, ' ');\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      var hatLen = (last - s.column) || 1;\n      str += \"\\n --> \" + loc + \"\\n\"\n          + filler + \" |\\n\"\n          + s.line + \" | \" + line + \"\\n\"\n          + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ')\n          + peg$padEnd(\"\", hatLen, \"^\");\n    } else {\n      str += \"\\n at \" + loc;\n    }\n  }\n  return str;\n};\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n\n  var peg$startRuleFunctions = { Start: peg$parseStart };\n  var peg$startRuleFunction = peg$parseStart;\n\n  var peg$c0 = \")\";\n  var peg$c1 = \"&theta\";\n  var peg$c2 = \"Str\";\n  var peg$c3 = \"&L\";\n  var peg$c4 = \"&list\";\n  var peg$c5 = \"(\";\n  var peg$c6 = \"&E\";\n  var peg$c7 = \".\";\n  var peg$c8 = \"\\\"\";\n  var peg$c9 = \"Ans\";\n  var peg$c10 = \"getKey\";\n  var peg$c11 = \"{\";\n  var peg$c12 = \"}\";\n  var peg$c13 = \"&-\";\n  var peg$c14 = \"*\";\n  var peg$c15 = \"/\";\n  var peg$c16 = \"+\";\n  var peg$c17 = \"-\";\n  var peg$c18 = \"=\";\n  var peg$c19 = \"!=\";\n  var peg$c20 = \">=\";\n  var peg$c21 = \">\";\n  var peg$c22 = \"<=\";\n  var peg$c23 = \"<\";\n  var peg$c24 = \" and \";\n  var peg$c25 = \" or \";\n  var peg$c26 = \" xor \";\n  var peg$c27 = \",\";\n  var peg$c28 = \"->\";\n  var peg$c29 = \"If \";\n  var peg$c30 = \"Then\";\n  var peg$c31 = \"Else\";\n  var peg$c32 = \"For(\";\n  var peg$c33 = \"While \";\n  var peg$c34 = \"Repeat \";\n  var peg$c35 = \"End\";\n  var peg$c36 = \"Pause\";\n  var peg$c37 = \"Lbl \";\n  var peg$c38 = \"Goto \";\n  var peg$c39 = \"IS>(\";\n  var peg$c40 = \"DS<(\";\n  var peg$c41 = \"Menu(\";\n  var peg$c42 = \"prgm\";\n  var peg$c43 = \"Return\";\n  var peg$c44 = \"Stop\";\n  var peg$c45 = \"DelVar \";\n  var peg$c46 = \"GraphStyle(\";\n  var peg$c47 = \"OpenLib(\";\n  var peg$c48 = \"ExecLib(\";\n  var peg$c49 = \"Input \";\n  var peg$c50 = \"Prompt \";\n  var peg$c51 = \"Disp \";\n  var peg$c52 = \"DispGraph\";\n  var peg$c53 = \"DispTable\";\n  var peg$c54 = \"Output(\";\n  var peg$c55 = \"ClrHome\";\n  var peg$c56 = \"ClrTable\";\n  var peg$c57 = \"GetCalc(\";\n  var peg$c58 = \"Get(\";\n  var peg$c59 = \"Send(\";\n\n  var peg$r0 = /^[A-Z]/;\n  var peg$r1 = /^[A-Z0-9]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[1-6]/;\n  var peg$r4 = /^[+\\-]/;\n  var peg$r5 = /^[^\"]/;\n\n  var peg$e0 = peg$anyExpectation();\n  var peg$e1 = peg$classExpectation([[\"A\", \"Z\"]], false, false);\n  var peg$e2 = peg$classExpectation([[\"A\", \"Z\"], [\"0\", \"9\"]], false, false);\n  var peg$e3 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e4 = peg$literalExpectation(\")\", false);\n  var peg$e5 = peg$literalExpectation(\"&theta\", false);\n  var peg$e6 = peg$literalExpectation(\"Str\", false);\n  var peg$e7 = peg$literalExpectation(\"&L\", false);\n  var peg$e8 = peg$classExpectation([[\"1\", \"6\"]], false, false);\n  var peg$e9 = peg$literalExpectation(\"&list\", false);\n  var peg$e10 = peg$literalExpectation(\"(\", false);\n  var peg$e11 = peg$classExpectation([\"+\", \"-\"], false, false);\n  var peg$e12 = peg$literalExpectation(\"&E\", false);\n  var peg$e13 = peg$literalExpectation(\".\", false);\n  var peg$e14 = peg$classExpectation([\"\\\"\"], true, false);\n  var peg$e15 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e16 = peg$literalExpectation(\"Ans\", false);\n  var peg$e17 = peg$literalExpectation(\"getKey\", false);\n  var peg$e18 = peg$literalExpectation(\"{\", false);\n  var peg$e19 = peg$literalExpectation(\"}\", false);\n  var peg$e20 = peg$literalExpectation(\"&-\", false);\n  var peg$e21 = peg$literalExpectation(\"*\", false);\n  var peg$e22 = peg$literalExpectation(\"/\", false);\n  var peg$e23 = peg$literalExpectation(\"+\", false);\n  var peg$e24 = peg$literalExpectation(\"-\", false);\n  var peg$e25 = peg$literalExpectation(\"=\", false);\n  var peg$e26 = peg$literalExpectation(\"!=\", false);\n  var peg$e27 = peg$literalExpectation(\">=\", false);\n  var peg$e28 = peg$literalExpectation(\">\", false);\n  var peg$e29 = peg$literalExpectation(\"<=\", false);\n  var peg$e30 = peg$literalExpectation(\"<\", false);\n  var peg$e31 = peg$literalExpectation(\" and \", false);\n  var peg$e32 = peg$literalExpectation(\" or \", false);\n  var peg$e33 = peg$literalExpectation(\" xor \", false);\n  var peg$e34 = peg$literalExpectation(\",\", false);\n  var peg$e35 = peg$literalExpectation(\"->\", false);\n  var peg$e36 = peg$literalExpectation(\"If \", false);\n  var peg$e37 = peg$literalExpectation(\"Then\", false);\n  var peg$e38 = peg$literalExpectation(\"Else\", false);\n  var peg$e39 = peg$literalExpectation(\"For(\", false);\n  var peg$e40 = peg$literalExpectation(\"While \", false);\n  var peg$e41 = peg$literalExpectation(\"Repeat \", false);\n  var peg$e42 = peg$literalExpectation(\"End\", false);\n  var peg$e43 = peg$literalExpectation(\"Pause\", false);\n  var peg$e44 = peg$literalExpectation(\"Lbl \", false);\n  var peg$e45 = peg$literalExpectation(\"Goto \", false);\n  var peg$e46 = peg$literalExpectation(\"IS>(\", false);\n  var peg$e47 = peg$literalExpectation(\"DS<(\", false);\n  var peg$e48 = peg$literalExpectation(\"Menu(\", false);\n  var peg$e49 = peg$literalExpectation(\"prgm\", false);\n  var peg$e50 = peg$literalExpectation(\"Return\", false);\n  var peg$e51 = peg$literalExpectation(\"Stop\", false);\n  var peg$e52 = peg$literalExpectation(\"DelVar \", false);\n  var peg$e53 = peg$literalExpectation(\"GraphStyle(\", false);\n  var peg$e54 = peg$literalExpectation(\"OpenLib(\", false);\n  var peg$e55 = peg$literalExpectation(\"ExecLib(\", false);\n  var peg$e56 = peg$literalExpectation(\"Input \", false);\n  var peg$e57 = peg$literalExpectation(\"Prompt \", false);\n  var peg$e58 = peg$literalExpectation(\"Disp \", false);\n  var peg$e59 = peg$literalExpectation(\"DispGraph\", false);\n  var peg$e60 = peg$literalExpectation(\"DispTable\", false);\n  var peg$e61 = peg$literalExpectation(\"Output(\", false);\n  var peg$e62 = peg$literalExpectation(\"ClrHome\", false);\n  var peg$e63 = peg$literalExpectation(\"ClrTable\", false);\n  var peg$e64 = peg$literalExpectation(\"GetCalc(\", false);\n  var peg$e65 = peg$literalExpectation(\"Get(\", false);\n  var peg$e66 = peg$literalExpectation(\"Send(\", false);\n\n  var peg$f0 = function() { return true };\n  var peg$f1 = function() { return text(); };\n  var peg$f2 = function() { return text(); };\n  var peg$f3 = function() { return 'THETA' };\n  var peg$f4 = function() { return text(); };\n  var peg$f5 = function(number) { return 'List' + number; };\n  var peg$f6 = function() { return 'List' + text().substring(5); };\n  var peg$f7 = function(name) { return { type: types.VARIABLE, name } };\n  var peg$f8 = function(name) { return { type: types.STRINGVARIABLE, name } };\n  var peg$f9 = function(name) { return { type: types.LISTVARIABLE, name, custom: false } };\n  var peg$f10 = function(name) { return { type: types.LISTVARIABLE, name, custom: true } };\n  var peg$f11 = function(list, index) { return { type: types.LISTINDEX, list, index } };\n  var peg$f12 = function(integer, fraction, exponent) { \r\n    return { type: types.NUMBER, integer, fraction, exponent }\r\n  };\n  var peg$f13 = function(fraction, exponent) { \r\n    return { type: types.NUMBER, fraction, exponent }\r\n  };\n  var peg$f14 = function(integer, exponent) { \r\n    return { type: types.NUMBER, integer, exponent }\r\n  };\n  var peg$f15 = function(chars) { return { type: types.STRING, chars } };\n  var peg$f16 = function() { return { type: types.ANS } };\n  var peg$f17 = function() { return { type: types.GetKey } };\n  var peg$f18 = function(head, tail) { return util.buildList(head, tail); };\n  var peg$f19 = function(operator, argument) { return { type: types.UNARY, operator, argument } };\n  var peg$f20 = function(operator, argument) { return { type: types.UNARY, operator, argument } };\n  var peg$f21 = function(head, tail, end) { return util.buildImplicitBinaryExpression(head, tail, end); };\n  var peg$f22 = function(head, tail, end) { return util.buildImplicitBinaryExpression(head, tail, end); };\n  var peg$f23 = function(head, tail) { return util.buildBinaryExpression(head, tail); };\n  var peg$f24 = function(head, tail) { return util.buildBinaryExpression(head, tail); };\n  var peg$f25 = function(head, tail) { return util.buildBinaryExpression(head, tail); };\n  var peg$f26 = function(head, tail) { return util.buildBinaryExpression(head, tail); };\n  var peg$f27 = function() { return true };\n  var peg$f28 = function() { return { type: types.EmptyStatement } };\n  var peg$f29 = function(value) { return { type: types.ValueStatement, value }};\n  var peg$f30 = function(value, assignable) { return { type: types.AssignmentStatement, value, assignable }};\n  var peg$f31 = function(value, extra) { return { type: types.IfStatement, value, extra }};\n  var peg$f32 = function(extra) { return { type: types.ThenStatement, extra }};\n  var peg$f33 = function(extra) { return { type: types.ElseStatement, extra }};\n  var peg$f34 = function(variable, start, end, step, args, extra) { return { type: types.ForLoop, variable, start, end, step, args, extra }};\n  var peg$f35 = function(value, extra) { return { type: types.WhileLoop, value, extra }};\n  var peg$f36 = function(value, extra) { return { type: types.RepeatLoop, value, extra }};\n  var peg$f37 = function(extra) { return { type: types.EndStatement, extra }};\n  var peg$f38 = function() { return { type: types.PauseStatement }};\n  var peg$f39 = function(location) { return { type: types.LabelStatement, location }};\n  var peg$f40 = function(location) { return { type: types.GotoStatement, location }};\n  var peg$f41 = function(variable, end) { return { type: types.IncrementSkip, variable, end }};\n  var peg$f42 = function(variable, end) { return { type: types.DecrementSkip, variable, end }};\n  var peg$f43 = function(title, options) { return util.buildMenuStatement(title, options); };\n  var peg$f44 = function(name) { return { type: types.ProgramStatement, name }};\n  var peg$f45 = function() { return { type: types.ReturnStatement }};\n  var peg$f46 = function() { return { type: types.StopStatement }};\n  var peg$f47 = function(variable) { return { type: types.DelVarStatement, variable }};\n  var peg$f48 = function(equation, style) { return { type: types.GraphStyleStatement, equation, style }};\n  var peg$f49 = function(name) { return { type: types.OpenLibStatement, name }};\n  var peg$f50 = function(name) { return { type: types.ExecLibStatement, name }};\n  var peg$f51 = function(text, variable) { return { type: types.Input, text, variable } };\n  var peg$f52 = function(variable) { return { type: types.Prompt, variable } };\n  var peg$f53 = function(value) { return { type: types.Display, value } };\n  var peg$f54 = function() { return { type: types.DispGraph } };\n  var peg$f55 = function() { return { type: types.DispTable } };\n  var peg$f56 = function(row, column, value) { return { type: types.Output, row, column, value } };\n  var peg$f57 = function() { return { type: types.ClrHome } };\n  var peg$f58 = function() { return { type: types.ClrTable } };\n  var peg$f59 = function(variable, portflag) { return { type: types.GetCalc, variable, portflag } };\n  var peg$f60 = function(variable) { return { type: types.Get, variable } };\n  var peg$f61 = function(variable) { return { type: types.Send, variable } };\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$maxFailPos = 0;\n  var peg$maxFailExpected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n\n    return {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseStart() {\n    var s0;\n\n    s0 = peg$parseStatement();\n\n    return s0;\n  }\n\n  function peg$parseSourceCharacter() {\n    var s0;\n\n    if (input.length > peg$currPos) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e0); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseAlpha() {\n    var s0;\n\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e1); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseAlphaNum() {\n    var s0;\n\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e2); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDigit() {\n    var s0;\n\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e3); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseExtraCharacters() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseSourceCharacter();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseSourceCharacter();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f0();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOptionalEndParen() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 41) {\n      s0 = peg$c0;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e4); }\n    }\n    if (s0 === peg$FAILED) {\n      s0 = null;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLocation() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseAlphaNum();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlphaNum();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f1();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseProgramName() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = peg$parseAlpha();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlphaNum();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseAlphaNum();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseAlphaNum();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseAlphaNum();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = peg$parseAlphaNum();\n      if (s6 === peg$FAILED) {\n        s6 = null;\n      }\n      s7 = peg$parseAlphaNum();\n      if (s7 === peg$FAILED) {\n        s7 = null;\n      }\n      s8 = peg$parseAlphaNum();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f2();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericVariableIdentifier() {\n    var s0, s1;\n\n    s0 = peg$parseAlpha();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c1) {\n        s1 = peg$c1;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e5); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f3();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseStringVariableIdentifier() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c2) {\n      s1 = peg$c2;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseDigit();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f4();\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseListVariableIdentifier() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c3) {\n      s1 = peg$c3;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e7); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (peg$r3.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e8); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f5(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCustomListVariableIdentifier() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e9); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlpha();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAlphaNum();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$parseAlphaNum();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        s5 = peg$parseAlphaNum();\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s6 = peg$parseAlphaNum();\n        if (s6 === peg$FAILED) {\n          s6 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f6();\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericVariable() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseNumericVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f7(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseStringVariable() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseStringVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f8(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseListVariable() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseListVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f9(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseCustomListVariableIdentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f10(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVariable() {\n    var s0;\n\n    s0 = peg$parseStringVariable();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNumericVariable();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseListVariable();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseListIndex() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseListVariable();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c5;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e10); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseLogicalExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOptionalEndParen();\n          peg$savedPos = s0;\n          s0 = peg$f11(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAssignable() {\n    var s0;\n\n    s0 = peg$parseListIndex();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseVariable();\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseDigit();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseDigit();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSignedInteger() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$r4.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e11); }\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parseInteger();\n    if (s3 !== peg$FAILED) {\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentIndicator() {\n    var s0;\n\n    if (input.substr(peg$currPos, 2) === peg$c6) {\n      s0 = peg$c6;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e12); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentPart() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponentIndicator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseSignedInteger();\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericLiteral() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseInteger();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c7;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e13); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseInteger();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$parseExponentPart();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f12(s1, s3, s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e13); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseInteger();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExponentPart();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f13(s2, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseInteger();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseExponentPart();\n          if (s2 === peg$FAILED) {\n            s2 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f14(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacter() {\n    var s0;\n\n    if (peg$r5.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e14); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacterString() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseCharacter();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseCharacter();\n    }\n    s0 = input.substring(s0, peg$currPos);\n\n    return s0;\n  }\n\n  function peg$parseStringLiteral() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e15); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseCharacterString();\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s3 = peg$c8;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e15); }\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f15(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnswer() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c9) {\n      s1 = peg$c9;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e16); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f16();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseGetKey() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c10) {\n      s1 = peg$c10;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e17); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f17();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseToken() {\n    var s0;\n\n    s0 = peg$parseAnswer();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseGetKey();\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenLiteral() {\n    var s0;\n\n    s0 = peg$parseToken();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAssignable();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseStringLiteral();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseListExpression() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c11;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e18); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseArgumentExpression();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseArgumentExpression();\n        }\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s4 = peg$c12;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e19); }\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f18(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenExpression() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$parseTokenLiteral();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c5;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e10); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseLogicalExpression();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c0;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e4); }\n          }\n          if (s3 !== peg$FAILED) {\n            s0 = s2;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseListExpression();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryOperator() {\n    var s0;\n\n    if (input.substr(peg$currPos, 2) === peg$c13) {\n      s0 = peg$c13;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e20); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenUnaryExpression() {\n    var s0, s1, s2;\n\n    s0 = peg$parseTokenExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryOperator();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseTokenUnaryExpression();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f19(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryExpression() {\n    var s0, s1, s2;\n\n    s0 = peg$parseTokenUnaryExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNumericLiteral();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseUnaryOperator();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseUnaryExpression();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f20(s1, s2);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseImplicitMultiplicativeExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseTokenUnaryExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseUnaryExpression();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseTokenUnaryExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseUnaryExpression();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseTokenUnaryExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      s3 = peg$parseUnaryExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f21(s1, s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryExpression();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseTokenUnaryExpression();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseUnaryExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseTokenUnaryExpression();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseUnaryExpression();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        s3 = peg$parseTokenUnaryExpression();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f22(s1, s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseUnaryExpression();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeOperator() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s0 = peg$c14;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e21); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s0 = peg$c15;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e22); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseImplicitMultiplicativeExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseMultiplicativeOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseImplicitMultiplicativeExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseMultiplicativeOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseImplicitMultiplicativeExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f23(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveOperator() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c16;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e23); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c17;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e24); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseMultiplicativeExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseAdditiveOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseMultiplicativeExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseAdditiveOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseMultiplicativeExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f24(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestOperator() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s0 = peg$c18;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e25); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c19) {\n        s0 = peg$c19;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e26); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c20) {\n          s0 = peg$c20;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e27); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s0 = peg$c21;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e28); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c22) {\n              s0 = peg$c22;\n              peg$currPos += 2;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e29); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 60) {\n                s0 = peg$c23;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$e30); }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseAdditiveExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseTestOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseAdditiveExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseTestOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseAdditiveExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f25(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLogicalOperator() {\n    var s0;\n\n    if (input.substr(peg$currPos, 5) === peg$c24) {\n      s0 = peg$c24;\n      peg$currPos += 5;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e31); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 4) === peg$c25) {\n        s0 = peg$c25;\n        peg$currPos += 4;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e32); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c26) {\n          s0 = peg$c26;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e33); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLogicalExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseLogicalOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseTestExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseLogicalOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseTestExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f26(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseArgumentExpression() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s1 = peg$c27;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e34); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrefixArgumentExpression() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLogicalExpression();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s2 = peg$c27;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e34); }\n      }\n      if (s2 !== peg$FAILED) {\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExtraArguments() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseArgumentExpression();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseArgumentExpression();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f27();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseEmptyStatement() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    s2 = peg$parseSourceCharacter();\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = undefined;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f28();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseValueStatement() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLogicalExpression();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f29(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseAssignment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLogicalExpression();\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c28) {\n        s2 = peg$c28;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e35); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAssignable();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f30(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIfStatement() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c29) {\n      s1 = peg$c29;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e36); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f31(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseThen() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c30) {\n      s1 = peg$c30;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e37); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f32(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseElse() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c31) {\n      s1 = peg$c31;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e38); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f33(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFor() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c32) {\n      s1 = peg$c32;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e39); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseArgumentExpression();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseArgumentExpression();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = peg$parseExtraArguments();\n      if (s6 === peg$FAILED) {\n        s6 = null;\n      }\n      s7 = peg$parseOptionalEndParen();\n      s8 = peg$parseExtraCharacters();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f34(s2, s3, s4, s5, s6, s8);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseWhile() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c33) {\n      s1 = peg$c33;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e40); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f35(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseRepeat() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c34) {\n      s1 = peg$c34;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e41); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f36(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEnd() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c35) {\n      s1 = peg$c35;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e42); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f37(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePause() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c36) {\n      s1 = peg$c36;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e43); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f38();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseLabel() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c37) {\n      s1 = peg$c37;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e44); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f39(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGoto() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c38) {\n      s1 = peg$c38;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e45); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f40(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIncrementSkip() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c39) {\n      s1 = peg$c39;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e46); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f41(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDecrementSkip() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c40) {\n      s1 = peg$c40;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e47); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f42(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMenu() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c41) {\n      s1 = peg$c41;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e48); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s5 = peg$c27;\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e34); }\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$parseStringLiteral();\n        if (s6 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s7 = peg$c27;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e34); }\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parseLocation();\n            if (s8 !== peg$FAILED) {\n              s5 = [s5, s6, s7, s8];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c27;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e34); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseStringLiteral();\n          if (s6 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s7 = peg$c27;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e34); }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseLocation();\n              if (s8 !== peg$FAILED) {\n                s5 = [s5, s6, s7, s8];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f43(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseProgram() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c42) {\n      s1 = peg$c42;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e49); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f44(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseReturn() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c43) {\n      s1 = peg$c43;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e50); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f45();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseStop() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c44) {\n      s1 = peg$c44;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e51); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f46();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDelVar() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c45) {\n      s1 = peg$c45;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e52); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f47(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGraphStyle() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 11) === peg$c46) {\n      s1 = peg$c46;\n      peg$currPos += 11;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e53); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f48(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOpenLib() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 8) === peg$c47) {\n      s1 = peg$c47;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e54); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOptionalEndParen();\n        peg$savedPos = s0;\n        s0 = peg$f49(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExecLib() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 8) === peg$c48) {\n      s1 = peg$c48;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e55); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOptionalEndParen();\n        peg$savedPos = s0;\n        s0 = peg$f50(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCtlStatement() {\n    var s0;\n\n    s0 = peg$parseIfStatement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseThen();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseElse();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFor();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseWhile();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseRepeat();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseEnd();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsePause();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseLabel();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseGoto();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseIncrementSkip();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parseDecrementSkip();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parseMenu();\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parseProgram();\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$parseReturn();\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$parseStop();\n                                  if (s0 === peg$FAILED) {\n                                    s0 = peg$parseDelVar();\n                                    if (s0 === peg$FAILED) {\n                                      s0 = peg$parseGraphStyle();\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$parseOpenLib();\n                                        if (s0 === peg$FAILED) {\n                                          s0 = peg$parseExecLib();\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInput() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c49) {\n      s1 = peg$c49;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e56); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsePrefixArgumentExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseVariable();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f51(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrompt() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c50) {\n      s1 = peg$c50;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e57); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f52(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDisplay() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c51) {\n      s1 = peg$c51;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e58); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f53(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDispGraph() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 9) === peg$c52) {\n      s1 = peg$c52;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e59); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f54();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDispTable() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 9) === peg$c53) {\n      s1 = peg$c53;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e60); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f55();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOutput() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c54) {\n      s1 = peg$c54;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e61); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseArgumentExpression();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f56(s2, s3, s4);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseClrHome() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c55) {\n      s1 = peg$c55;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e62); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f57();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseClrTable() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 8) === peg$c56) {\n      s1 = peg$c56;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e63); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f58();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseGetCalc() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 8) === peg$c57) {\n      s1 = peg$c57;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e64); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f59(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGet() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c58) {\n      s1 = peg$c58;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e65); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f60(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSend() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c59) {\n      s1 = peg$c59;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e66); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f61(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIoStatement() {\n    var s0;\n\n    s0 = peg$parseInput();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePrompt();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseDisplay();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseDispGraph();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseDispTable();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseOutput();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseClrHome();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseClrTable();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseGetCalc();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseGet();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseSend();\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseStatement() {\n    var s0;\n\n    s0 = peg$parseEmptyStatement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAssignment();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseCtlStatement();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseIoStatement();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseValueStatement();\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n\r\n  const types = require ('../common/types');\r\n  const util = require ('./pegutil');\r\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n","// types\r\n// =====\r\n\r\n// ----- Errors -----\r\n\r\nexport const ti = 'ti'\r\nexport const lib = 'lib'\r\nexport const SyntaxError = 'SyntaxError'\r\n\r\n// ----- Values -----\r\n\r\nexport const NUMBER = 'number'\r\nexport const LIST = 'list'\r\nexport const STRING = 'string'\r\n\r\n// ----- Tokens -----\r\n\r\nexport const ANS = 'ans'\r\nexport const GetKey = 'GetKey'\r\n\r\n// ----- Variables -----\r\n\r\nexport const VARIABLE = 'variable'\r\nexport const STRINGVARIABLE = 'stringVariable'\r\nexport const LISTVARIABLE = 'listVariable'\r\nexport const LISTINDEX = 'listIndex'\r\n\r\n// ----- Expressions -----\r\n\r\nexport const BINARY = 'binary'\r\nexport const UNARY = 'unary'\r\n\r\n// ----- Statements -----\r\n\r\nexport const EmptyStatement = 'empty'\r\nexport const ValueStatement = 'value'\r\nexport const AssignmentStatement = 'assign'\r\n\r\n// ----- CTL -----\r\n\r\nexport const IfStatement = 'IfStatement'\r\nexport const ThenStatement = 'ThenStatement'\r\nexport const ElseStatement = 'ElseStatement'\r\nexport const ForLoop = 'ForLoop'\r\nexport const WhileLoop = 'WhileLoop'\r\nexport const RepeatLoop = 'RepeatLoop'\r\nexport const EndStatement = 'EndStatement'\r\nexport const PauseStatement = 'PauseStatement'\r\nexport const LabelStatement = 'LabelStatement'\r\nexport const GotoStatement = 'GotoStatement'\r\nexport const IncrementSkip = 'IncrementSkip'\r\nexport const DecrementSkip = 'DecrementSkip'\r\nexport const MenuStatement = 'MenuStatement'\r\nexport const ProgramStatement = 'ProgramStatement'\r\nexport const ReturnStatement = 'ReturnStatement'\r\nexport const StopStatement = 'StopStatement'\r\nexport const DelVarStatement = 'DelVarStatement'\r\nexport const GraphStyleStatement = 'GraphStyleStatement'\r\nexport const OpenLibStatement = 'OpenLibStatement'\r\nexport const ExecLibStatement = 'ExecLibStatement'\r\n\r\n// ----- I/O -----\r\n\r\nexport const Input = 'Input'\r\nexport const Prompt = 'Prompt'\r\nexport const Display = 'display'\r\nexport const DispGraph = 'DispGraph'\r\nexport const DispTable = 'DispTable'\r\nexport const Output = 'Output'\r\nexport const ClrHome = 'ClrHome'\r\nexport const ClrTable = 'ClrTable'\r\nexport const GetCalc = 'GetCalc'\r\nexport const Get = 'Get'\r\nexport const Send = 'Send'\r\n","// pegutil\r\n// =======\r\n\r\nimport * as types from '../common/types'\r\n\r\nexport function buildBinaryExpression (head, tail) {\r\n  return tail.reduce(function (result, element) {\r\n\r\n    return {\r\n      type: types.BINARY,\r\n      operator: element[0],\r\n      left: result,\r\n      right: element[1]\r\n    }\r\n  }, head)\r\n}\r\n\r\nexport function buildImplicitBinaryExpression (head, tail, end) {\r\n  \r\n  const list = tail.flat()\r\n  if (end !== null) {\r\n    list.push(end)\r\n  }\r\n  return list.reduce(function (result, element) {\r\n    return {\r\n      type: types.BINARY,\r\n      operator: '*',\r\n      left: result,\r\n      right: element\r\n    }\r\n  }, head)\r\n}\r\n\r\nexport function buildMenuStatement (title, options) {\r\n  const choices = options.map(function (element) {\r\n    return {\r\n      option: element[1],\r\n      location: element[3]\r\n    }\r\n  })\r\n  return {\r\n    type: types.MenuStatement,\r\n    title,\r\n    choices\r\n  }\r\n}\r\n\r\nexport function buildList (head, tail) {\r\n  return {\r\n    type: types.LIST,\r\n    elements: [head].concat(tail)\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// inject\r\n// ===========\r\n\r\nexport const LOOPER = 'looper'\r\n\r\nconst map = new Map()\r\nconst callbacks = new Map()\r\n\r\nexport function set(name, value) {\r\n    map[name] = value\r\n    callbacks[name].forEach(callback => callback(value))\r\n}\r\n\r\nexport function subscribe(name, callback) {\r\n    if (!callbacks.has(name)) {\r\n        callbacks[name] = []\r\n    }\r\n    callbacks[name].push(callback)\r\n    if (map.has(name)) {\r\n        callback(map[name])\r\n    }\r\n}\r\n\r\nexport function unsubscribe(name, callback) {\r\n    if (!callbacks.has(name)) {\r\n        return\r\n    }\r\n    const array = callbacks[name].push(callback)\r\n    const index = array.indexOf(callback)\r\n    if (index === -1) { \r\n        return\r\n    }\r\n    array.splice(index, 1)\r\n}","// looper.web\r\n// ===========\r\n\r\nexport function postMessage(message, targetOrigin, transfer) {\r\n    return window.postMessage(message, targetOrigin, transfer)\r\n}\r\n\r\nexport function addEventListener(type, listener, useCapture) {\r\n    return window.addEventListener(type, listener, useCapture)\r\n}\r\n\r\nexport function removeEventListener(type, listener, useCapture) {\r\n    return window.removeEventListener(type, listener, useCapture)\r\n}\r\n\r\nexport function source() {\r\n    return window\r\n}\r\n","// core\r\n// ====\r\n\r\nimport * as types from './types'\r\n\r\nfunction error (type, code, hideSource = false) {\r\n  return {\r\n    type: type,\r\n    code: code,\r\n    hideSource: hideSource\r\n  }\r\n}\r\n\r\nfunction tiError (code, hideSource = false) {\r\n  return error(types.ti, code, hideSource)\r\n}\r\n\r\nexport const DataTypeError = tiError('DATA TYPE')\r\nexport const SyntaxError = tiError('SYNTAX')\r\nexport const UndefinedError = tiError('UNDEFINED')\r\nexport const LabelError = tiError('LABEL')\r\nexport const ArgumentError = tiError('ARGUMENT')\r\nexport const DimMismatchError = tiError('DIM MISMATCH')\r\nexport const DivideByZeroError = tiError('DIVIDE BY 0')\r\nexport const InvalidDimError = tiError('INVALID DIM')\r\nexport const DomainError = tiError('DOMAIN')\r\n\r\nexport function libError (code, hideSource = false) {\r\n  return error(types.lib, code, hideSource)\r\n}\r\n\r\nexport const UnimplementedError = libError('unimplemented')\r\n\r\nexport function newMem () {\r\n  return {\r\n    vars: {},\r\n    ans: newFloat()\r\n  }\r\n}\r\n\r\nexport function newFloat (value = 0) {\r\n  return { type: types.NUMBER, float: value }\r\n}\r\n\r\nexport const ONE = newFloat(1)\r\n\r\nexport const MINUSONE = newFloat(-1)\r\n","// signal\r\n// ======\r\n\r\nexport const YIELD = 'yield'\r\nexport const DONE = 'done'\r\nexport const FAULTED = 'faulted'\r\nexport const SUSPEND = 'suspend'\r\n","// parser\r\n// ======\r\n\r\nimport * as types from '../common/types'\r\nimport peggyParser from './tibasic.peggy'\r\n\r\nexport function parse (source, options = {}) {\r\n  if (source === undefined) {\r\n    throw new Error('Undefined source!')\r\n  }\r\n\r\n  const sourceMap = options.sourceMap || 'inline'\r\n\r\n  // TODO:\r\n  // * Allow multiple statements per line with ':'\r\n  const sourceLines = source.split(/\\r?\\n/)\r\n  const parsedLines = sourceLines.map(s => {\r\n    let parsedLine\r\n    try {\r\n      parsedLine = peggyParser.parse(s)\r\n    } catch (error) {\r\n      if (error.name === 'SyntaxError') {\r\n        parsedLine = { type: 'SyntaxError' }\r\n      } else {\r\n        throw error\r\n      }\r\n    }\r\n    if (sourceMap === 'inline') {\r\n      parsedLine.source = s\r\n    }\r\n    return parsedLine\r\n  })\r\n\r\n  return parsedLines\r\n}\r\n\r\nexport function parseExpression (source) {\r\n  if (source === undefined) {\r\n    throw new Error('Undefined source!')\r\n  }\r\n\r\n  const sourceLines = source.split(/\\r?\\n/)\r\n  if (sourceLines.Length > 1) {\r\n    throw new Error('Too many lines for an expression')\r\n  }\r\n  const sourceLine = sourceLines[0]\r\n  let parsedLine\r\n  try {\r\n    parsedLine = peggyParser.parse(sourceLine)\r\n  } catch (error) {\r\n    if (error.name !== 'SyntaxError') {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  return parsedLine !== undefined && parsedLine.type === types.ValueStatement ? parsedLine.value : { type: 'SyntaxError' }\r\n}\r\n","// operation\r\n// =========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\n\r\nexport function isTruthy (value) {\r\n  if (value.type === types.NUMBER) {\r\n    return value.float !== 0\r\n  }\r\n  throw core.DataTypeError\r\n}\r\n\r\nexport function assignVariable (mem, variable, value) {\r\n  if (variable.type === types.STRINGVARIABLE) {\r\n    if (value.type !== types.STRING) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else if (variable.type === types.VARIABLE) {\r\n    if (value.type !== types.NUMBER) {\r\n      return\r\n    }\r\n  } else if (variable.type === types.LISTVARIABLE) {\r\n    if (value.type !== types.LIST) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else if (variable.type === types.LISTINDEX) {\r\n    if (value.type !== types.LIST) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else {\r\n    throw core.libError('unexpected variable type')\r\n  }\r\n  mem.vars[variable.name] = value\r\n}\r\n\r\nexport function deleteVariable (mem, variable) {\r\n  delete mem.vars[variable.name]\r\n}\r\n\r\nexport function hasVariable (mem, variable) {\r\n  return variable.name in mem.vars\r\n}\r\n\r\nexport function assignAns (mem, value) {\r\n  mem.ans = value\r\n}\r\n\r\nexport function binaryOperation (left, operator, right) {\r\n  return {\r\n    type: types.BINARY,\r\n    operator,\r\n    left,\r\n    right\r\n  }\r\n}\r\n\r\nexport function resolveNumber (value) {\r\n  let str = ''\r\n  if (value.integer !== undefined && value.integer !== null) {\r\n    str += value.integer\r\n  }\r\n  if (value.fraction !== undefined && value.fraction !== null) {\r\n    str += '.' + value.fraction\r\n  }\r\n  if (value.exponent !== undefined && value.exponent !== null) {\r\n    str += 'e' + value.exponent\r\n  }\r\n  return parseFloat(str)\r\n}\r\n\r\nexport function variableToString (variable) {\r\n  let str = variable.name\r\n  switch (variable.type) {\r\n    case types.VARIABLE:\r\n    case types.STRINGVARIABLE:\r\n      break\r\n    case types.LISTVARIABLE:\r\n      str = str.substring(4)\r\n      if (!variable.custom) {\r\n        str = `&L${str}`\r\n      }\r\n      break\r\n    default:\r\n      throw core.libError('unexpected variable tostring')\r\n  }\r\n  return str\r\n}\r\n\r\nexport function valueToString (value, strict = false) {\r\n  if (strict && value.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  let str = ''\r\n  switch (value.type) {\r\n    case types.NUMBER:\r\n      str = value.float.toString()\r\n      if (str.startsWith('0.')) {\r\n        str = str.substring(1)\r\n      }\r\n      break\r\n    case types.STRING:\r\n      str = value.chars\r\n      break\r\n    case types.LIST:\r\n      str = '{' + value.elements.map(e => valueToString(e)).join(' ') + '}'\r\n      break\r\n    default:\r\n      throw core.libError('unexpected value tostring')\r\n  }\r\n  return str\r\n}\r\n\r\nexport function parseDigit (str) {\r\n  if (str === undefined || str === null || str === '' || str.length > 1) {\r\n    return\r\n  }\r\n  const digit = str.charCodeAt(0) - '0'.charCodeAt(0)\r\n  if (digit < 0 || digit > 9) {\r\n    return\r\n  }\r\n  return digit\r\n}\r\n","// expression\r\n// ==========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\nimport * as operation from './operation'\r\n\r\nexport function evaluate (value, mem) {\r\n  const behavior = expressionOf[value.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected value')\r\n  }\r\n  return behavior(value, mem)\r\n}\r\n\r\nconst expressionOf = {}\r\n\r\n// ----- Expressions -----\r\n\r\nexpressionOf[types.SyntaxError] = (value, mem) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\n// ----- Values -----\r\n\r\nexpressionOf[types.NUMBER] = (value, mem) => {\r\n  if (value.float !== undefined) {\r\n    return value\r\n  }\r\n  return {\r\n    type: types.NUMBER,\r\n    float: operation.resolveNumber(value)\r\n  }\r\n}\r\n\r\nexpressionOf[types.STRING] = (value, mem) => {\r\n  return value\r\n}\r\n\r\nexpressionOf[types.LIST] = (value, mem) => {\r\n  if (value.resolved === true) {\r\n    return value\r\n  }\r\n  return {\r\n    type: types.LIST,\r\n    elements: value.elements.map(function (element) {\r\n      const result = evaluate(element, mem)\r\n      if (result.type !== types.NUMBER) {\r\n        // TODO: a list of lists should be a syntax error\r\n        // However, a list of list variables should still be a data type error\r\n        // Distinguishing them here is hard - should be done in grammar?\r\n        throw core.DataTypeError\r\n      }\r\n      return result\r\n    }),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Variables -----\r\n\r\nexpressionOf[types.VARIABLE] = (value, mem) => {\r\n  let result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    result = mem.vars[value.name] = core.newFloat()\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.STRINGVARIABLE] = (value, mem) => {\r\n  const result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    throw core.UndefinedError\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.LISTVARIABLE] = (value, mem) => {\r\n  const result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    throw core.UndefinedError\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.LISTINDEX] = (value, mem) => {\r\n  const list = evaluate(value.list, mem)\r\n  const index = evaluate(value.index, mem)\r\n  if (index.type !== types.NUMBER) {\r\n    throw core.InvalidDimError\r\n  }\r\n  if (index.float < 1 || index.float > list.elements.length) {\r\n    throw core.InvalidDimError\r\n  }\r\n  return {\r\n    type: types.NUMBER,\r\n    float: list.elements[index.float - 1].float\r\n  }\r\n}\r\n\r\n// ----- Tokens -----\r\n\r\nexpressionOf[types.ANS] = (value, mem) => {\r\n  return mem.ans\r\n}\r\n\r\nexpressionOf[types.GetKey] = (value, mem) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- Operators -----\r\n\r\nexpressionOf[types.UNARY] = (value, mem) => {\r\n  const argument = evaluate(value.argument, mem)\r\n  const behavior = unaryOf[argument.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected unary argument')\r\n  }\r\n  return behavior(value.operator, argument)\r\n}\r\n\r\nexpressionOf[types.BINARY] = (value, mem) => {\r\n  const left = evaluate(value.left, mem)\r\n  const right = evaluate(value.right, mem)\r\n  const behavior = binaryOf[left.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected binary left')\r\n  }\r\n  return behavior(value.operator, left, right)\r\n}\r\n\r\n// ----- Unary -----\r\n\r\nconst unaryOf = {}\r\n\r\nunaryOf[types.NUMBER] = (operator, argument) => {\r\n  return { type: types.NUMBER, float: applyUnaryOperation(operator, argument.float) }\r\n}\r\n\r\nunaryOf[types.STRING] = (operator, argument) => {\r\n  throw core.DataTypeError\r\n}\r\n\r\nunaryOf[types.LIST] = (operator, argument) => {\r\n  return {\r\n    type: types.LIST,\r\n    elements: argument.elements.map(e => ({ type: types.NUMBER, float: applyUnaryOperation(operator, e.float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Binary -----\r\n\r\nconst binaryOf = {}\r\n\r\nbinaryOf[types.NUMBER] = (operator, left, right) => {\r\n  if (right.type !== types.NUMBER) {\r\n    if (right.type === types.LIST) {\r\n      return applyBinaryOperationListAndNumber(operator, right, left)\r\n    }\r\n    throw core.DataTypeError\r\n  }\r\n  return { type: types.NUMBER, float: applyBinaryOperation(operator, left.float, right.float) }\r\n}\r\n\r\nbinaryOf[types.STRING] = (operator, left, right) => {\r\n  if (right.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (['+'].includes(operator)) {\r\n    return { type: types.STRING, chars: applyBinaryOperation(operator, left.chars, right.chars) }\r\n  }\r\n  if (['=', '!='].includes(operator)) {\r\n    return { type: types.NUMBER, float: applyBinaryOperation(operator, left.chars, right.chars) }\r\n  }\r\n  throw core.DataTypeError\r\n}\r\n\r\nbinaryOf[types.LIST] = (operator, left, right) => {\r\n  if (right.type !== types.LIST) {\r\n    if (right.type === types.NUMBER) {\r\n      return applyBinaryOperationListAndNumber(operator, left, right)\r\n    }\r\n    throw core.DataTypeError\r\n  }\r\n  if (left.elements.length !== right.elements.length) {\r\n    throw core.DimMismatchError\r\n  }\r\n  return {\r\n    type: types.LIST,\r\n    elements: left.elements.map((e, i) => ({ type: types.NUMBER, float: applyBinaryOperation(operator, e.float, right.elements[i].float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Helper -----\r\n\r\nfunction applyBinaryOperationListAndNumber (operator, list, number) {\r\n  return {\r\n    type: types.LIST,\r\n    elements: list.elements.map((e, i) => ({ type: types.NUMBER, float: applyBinaryOperation(operator, e.float, number.float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\nfunction applyUnaryOperation (operator, x) {\r\n  switch (operator) {\r\n    case '&-': return x * -1\r\n    default: throw core.libError('unexpected unary operator')\r\n  }\r\n}\r\n\r\nfunction applyBinaryOperation (operator, x, y) {\r\n  if (operator === '/' && y === 0) {\r\n    throw core.DivideByZeroError\r\n  }\r\n  switch (operator) {\r\n    case '+': return x + y\r\n    case '-': return x - y\r\n    case '*': return x * y\r\n    case '/': return x / y\r\n    case '=': return x === y ? 1 : 0\r\n    case '!=': return x !== y ? 1 : 0\r\n    case '>=': return x >= y ? 1 : 0\r\n    case '>': return x > y ? 1 : 0\r\n    case '<=': return x <= y ? 1 : 0\r\n    case '<': return x < y ? 1 : 0\r\n    case ' and ': return x && y ? 1 : 0\r\n    case ' or ': return x || y ? 1 : 0\r\n    case ' xor ': return (!x && y) || (x && !y) ? 1:0\r\n    default: throw core.libError('unexpected binary operator')\r\n  }\r\n}\r\n","// assignment\r\n// ==========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\nimport * as expression from './expression'\r\n\r\nexport function evaluate (assignable, value, mem) {\r\n  const behavior = assignmentOf[assignable.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected assignable type')\r\n  }\r\n  return behavior(assignable, value, mem)\r\n}\r\n\r\nconst assignmentOf = {}\r\n\r\n// ----- Statements -----\r\n\r\nassignmentOf[types.VARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.NUMBER) {\r\n    return\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.STRINGVARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.LISTVARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.LIST) {\r\n    throw core.DataTypeError\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.LISTINDEX] = (assignable, value, mem) => {\r\n  const list = expression.evaluate(assignable.list, mem)\r\n  const index = expression.evaluate(assignable.index, mem)\r\n  if (index.type !== types.NUMBER) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (index.float < 1 || index.float > list.elements.length) {\r\n    throw core.InvalidDimError\r\n  }\r\n  mem.vars[assignable.list.name].elements[index.float - 1] = value\r\n}\r\n","// iolib\r\n// =====\r\n\r\nimport * as types from '../common/types'\r\n\r\nconst enterkey = 13\r\n\r\nexport function elemOutput(elem) {\r\n  return (value, newline) => {\r\n    setTimeout(() => {\r\n      let result = elem.val() + value\r\n      if (newline) {\r\n        result += '\\n'\r\n      }\r\n      elem.val(result)\r\n    }, 0)\r\n  }\r\n}\r\n\r\nexport function stdout (value, options = {}, newline = true) {\r\n  if (options.output === undefined) {\r\n    console.log(value)\r\n    return\r\n  }\r\n  options.output(value, newline);\r\n}\r\n\r\nexport function stderr (ex, options = {}) {\r\n  if ((ex.type === types.ti && !options.includeErrors) ||\r\n      (ex.type === types.lib && !options.includeLibErrors)) {\r\n    console.log(ex)\r\n    return\r\n  }\r\n  let value = ''\r\n  if (ex.type === types.ti) {\r\n    value += 'ERR:'\r\n  } else if (ex.type === types.lib) {\r\n    value += 'Error: '\r\n  } else {\r\n    value += 'Unexpected: '\r\n  }\r\n  value += ex.code\r\n  if (options.includeLineNumbers && ex.source !== undefined && ex.source.index !== undefined) {\r\n    value += ` on line ${ex.source.index}`\r\n  }\r\n  if (options.includeSource && ex.source !== undefined && ex.source.line !== undefined) {\r\n    value += ` :${ex.source.line}`\r\n  }\r\n  stdout(value, options)\r\n}\r\n\r\nexport function onStdin (callback, options = {}) {\r\n  if (options.stdin !== undefined && options.stdin !== '' && options.stdinQueue === undefined) {\r\n    options.stdinQueue = options.stdin.split('\\n').reverse()\r\n  }\r\n  if (options.stdinQueue !== undefined) {\r\n    setTimeout(() => {\r\n      const result = options.stdinQueue.pop()\r\n      if (callback(result) === true) {\r\n        onStdin(callback, options)\r\n      }\r\n    }, 0)\r\n    return\r\n  }\r\n  if (options.input === undefined) {\r\n    setTimeout(() => {\r\n      if (callback(prompt('Input?')) === true) {\r\n        onStdin(callback, options)\r\n      }\r\n    }, 100)\r\n    return\r\n  }\r\n  setTimeout(() => options.input.val(''), 0)\r\n  options.input.on('keypress', e => {\r\n    if (e.keyCode === enterkey) {\r\n      const result = options.input.val()\r\n      setTimeout(() => options.input.val(''), 0)\r\n      if (callback(result) !== true) {\r\n        options.input.off('keypress')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport function cleanup (options = {}) {\r\n  if (options.input !== undefined) {\r\n    options.input.off('keypress')\r\n  }\r\n}\r\n","// statement\r\n// =========\r\n\r\nimport * as core from '../common/core'\r\nimport * as signal from '../common/signal'\r\nimport * as types from '../common/types'\r\nimport * as parser from '../parse/parser'\r\nimport * as operation from './operation'\r\nimport * as expression from './expression'\r\nimport * as assignment from './assignment'\r\nimport * as iolib from './iolib'\r\n\r\nexport function evaluate (line, state) {\r\n  const behavior = statementOf[line.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected')\r\n  }\r\n  return behavior(line, state)\r\n}\r\n\r\nconst statementOf = {}\r\n\r\n// ----- Statements -----\r\n\r\nstatementOf[types.EmptyStatement] = (line, state) => {\r\n  // do nothing\r\n}\r\n\r\nstatementOf[types.AssignmentStatement] = (line, state) => {\r\n  const value = expression.evaluate(line.value, state.mem)\r\n  assignment.evaluate(line.assignable, value, state.mem)\r\n  operation.assignAns(state.mem, value)\r\n}\r\n\r\nstatementOf[types.ValueStatement] = (line, state) => {\r\n  operation.assignAns(state.mem, expression.evaluate(line.value, state.mem))\r\n}\r\n\r\nstatementOf[types.SyntaxError] = (line, state) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\n// ----- CTL -----\r\n\r\nstatementOf[types.IfStatement] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.ifResult = operation.isTruthy(expression.evaluate(line.value, state.mem))\r\n}\r\n\r\nstatementOf[types.ThenStatement] = (line, state) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\nstatementOf[types.ElseStatement] = (line, state) => {\r\n  if (state.blockStack.length === 0) {\r\n    throw core.SyntaxError\r\n  }\r\n  if (state.lines[state.blockStack.pop()].type === types.ThenStatement) {\r\n    state.blockStack.push(state.i)\r\n    state.falsyStackHeight = state.blockStack.length\r\n  } else {\r\n    throw core.SyntaxError\r\n  }\r\n}\r\n\r\nstatementOf[types.ForLoop] = (line, state) => {\r\n  if (line.variable === null || line.start === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  operation.assignVariable(state.mem, line.variable, expression.evaluate(line.start, state.mem))\r\n  state.blockStack.push(state.i)\r\n  if (!operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '<=', line.end), state.mem))) {\r\n    state.falsyStackHeight = state.blockStack.length\r\n  }\r\n}\r\n\r\nstatementOf[types.WhileLoop] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.blockStack.push(state.i)\r\n  if (!operation.isTruthy(expression.evaluate(line.value, state.mem))) {\r\n    state.falsyStackHeight = state.blockStack.length\r\n  }\r\n}\r\n\r\nstatementOf[types.RepeatLoop] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.blockStack.push(state.i)\r\n}\r\n\r\nstatementOf[types.EndStatement] = (line, state) => {\r\n  if (state.blockStack.length === 0) {\r\n    throw core.SyntaxError\r\n  }\r\n  const source = state.blockStack.pop()\r\n  const sourceLine = state.lines[source]\r\n  if (sourceLine.type === types.ForLoop ||\r\n              sourceLine.type === types.WhileLoop ||\r\n              sourceLine.type === types.RepeatLoop) {\r\n    if (sourceLine.type === types.ForLoop) {\r\n      increment(state.mem, sourceLine.variable, sourceLine.step !== null ? sourceLine.step : core.ONE)\r\n      if (operation.isTruthy(expression.evaluate(operation.binaryOperation(sourceLine.variable, '<=', sourceLine.end), state.mem))) {\r\n        state.blockStack.push(source)\r\n        state.i = source\r\n      }\r\n    } else if (operation.isTruthy(expression.evaluate(sourceLine.value, state.mem))) {\r\n      state.blockStack.push(source)\r\n      state.i = source\r\n    }\r\n  } else if (sourceLine.type === types.ThenStatement ||\r\n                  sourceLine.type === types.ElseStatement) {\r\n    // empty\r\n  } else {\r\n    throw core.libError(`impossibleEndFrom'${sourceLine.type}`)\r\n  }\r\n}\r\n\r\nstatementOf[types.PauseStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.LabelStatement] = (line, state) => {\r\n}\r\n\r\nstatementOf[types.GotoStatement] = (line, state) => {\r\n  state.searchLabel = line.location\r\n  state.i = -1\r\n}\r\n\r\nstatementOf[types.IncrementSkip] = (line, state) => {\r\n  if (line.variable === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  increment(state.mem, line.variable, core.ONE)\r\n  state.incrementDecrementResult = operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '<=', line.end), state.mem))\r\n}\r\n\r\nstatementOf[types.DecrementSkip] = (line, state) => {\r\n  if (line.variable === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  increment(state.mem, line.variable, core.MINUSONE)\r\n  state.incrementDecrementResult = operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '>=', line.end), state.mem))\r\n}\r\n\r\nstatementOf[types.MenuStatement] = (line, state) => {\r\n  if (line.title === null || line.choices.length === 0 || line.choices.length > 7) {\r\n    throw core.ArgumentError\r\n  }\r\n  iolib.stdout(operation.valueToString(expression.evaluate(line.title, state.mem), true), state.io)\r\n  line.choices.forEach((choice, idx) => {\r\n    iolib.stdout(`${idx + 1}:${operation.valueToString(choice.option)}`, state.io)\r\n  })\r\n  iolib.onStdin(input => {\r\n    const digit = operation.parseDigit(input)\r\n    if (digit === undefined || digit === 0 || digit > line.choices.length) {\r\n      return true\r\n    }\r\n    state.searchLabel = line.choices[digit - 1].location\r\n    state.i = 0\r\n    state.resume()\r\n  }, state.io)\r\n  return signal.SUSPEND\r\n}\r\n\r\nstatementOf[types.ProgramStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ReturnStatement] = (line, state) => {\r\n  // TODO interaction with subprograms\r\n  return signal.DONE\r\n}\r\n\r\nstatementOf[types.StopStatement] = (line, state) => {\r\n  return signal.DONE\r\n}\r\n\r\nstatementOf[types.DelVarStatement] = (line, state) => {\r\n  if (line.variable === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  operation.deleteVariable(state.mem, line.variable)\r\n}\r\n\r\nstatementOf[types.GraphStyleStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.OpenLibStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ExecLibStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- I/O -----\r\n\r\nstatementOf[types.Display] = (line, state) => {\r\n  if (line.value !== null) {\r\n    iolib.stdout(operation.valueToString(expression.evaluate(line.value, state.mem)), state.io)\r\n  }\r\n}\r\n\r\nstatementOf[types.Input] = (line, state) => {\r\n  if (line.variable === null) {\r\n    if (line.text !== null) {\r\n      throw core.ArgumentError\r\n    }\r\n    throw core.UnimplementedError\r\n  }\r\n  let text = '?'\r\n  if (line.text !== null) {\r\n    text = operation.valueToString(expression.evaluate(line.text, state.mem), true)\r\n  }\r\n  return getInput(text, line.variable, state, true)\r\n}\r\n\r\nstatementOf[types.Prompt] = (line, state) => {\r\n  if (line.variable === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  const text = operation.variableToString(line.variable)\r\n  return getInput(`${text}=?`, line.variable, state, false)\r\n}\r\n\r\nstatementOf[types.DispGraph] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.DispTable] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Output] = (line, state) => {\r\n  if (line.row === null || line.column === null || line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  const row = expression.evaluate(line.row, state.mem)\r\n  const column = expression.evaluate(line.column, state.mem)\r\n  if (row.type !== types.NUMBER || column.type !== types.NUMBER) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (row.float < 1 || row.float > state.rows || column.float < 1 || column.float > state.columns) {\r\n    throw core.DomainError\r\n  }\r\n  // TODO: respect rows and columns\r\n  iolib.stdout(operation.valueToString(expression.evaluate(line.value, state.mem)), state.io)\r\n}\r\n\r\nstatementOf[types.ClrHome] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ClrTable] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.GetCalc] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Get] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Send] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- Helpers -----\r\n\r\nfunction increment (mem, variable, step) {\r\n  if (!operation.hasVariable(mem, variable)) {\r\n    throw core.UndefinedError\r\n  }\r\n  operation.assignVariable(mem, variable, expression.evaluate({\r\n    type: types.BINARY,\r\n    operator: '+',\r\n    left: variable,\r\n    right: step\r\n  }, mem), mem)\r\n}\r\n\r\nfunction getInput (text, variable, state, allowStringLiterals) {\r\n  iolib.stdout(text, state.io, false)\r\n  iolib.onStdin(input => {\r\n    if (input === null || input === undefined || input === '') {\r\n      return true\r\n    }\r\n    state.resume(() => {\r\n      iolib.stdout(input, state.io)\r\n\r\n      let value\r\n      if (variable.type === types.STRINGVARIABLE && allowStringLiterals) {\r\n        value = { type: types.STRING, chars: input }\r\n      } else {\r\n        value = expression.evaluate(parser.parseExpression(input), state.mem)\r\n      }\r\n\r\n      // special case where a prompt for a numerical variable is interpreted as a list variable\r\n      if (variable.type === types.VARIABLE && value.type === types.LIST) {\r\n        variable = { type: types.LISTVARIABLE, name: `List${variable.name}`, custom: true }\r\n      }\r\n\r\n      operation.assignVariable(state.mem, variable, value)\r\n    })\r\n  }, state.io)\r\n  return signal.SUSPEND\r\n}\r\n","// daemon\r\n// ======\r\n\r\nimport * as signal from '../common/signal'\r\nimport * as loader from '../inject/loader'\r\n\r\nconst loopMessageName = 'daemon-loop'\r\nconst exceptionName = 'daemon-exception'\r\nconst minimumDelay = 0.001 // 1 microsecond\r\nconst tasks = {}\r\nconst exceptions = []\r\nlet running = false\r\nlet nextTaskId = 0\r\nconst maxExceptions = 1000\r\n\r\nlet looper = undefined\r\n\r\nfunction updateLooper(value) {\r\n  if (typeof looper !== 'undefined') {\r\n    looper.removeEventListener('message', handleMessage, true)\r\n    looper.removeEventListener('message', handleException, true)\r\n  }\r\n  \r\n  looper = value\r\n\r\n  looper.addEventListener('message', handleMessage, true)\r\n  looper.addEventListener('message', handleException, true)\r\n}\r\n\r\nloader.subscribe(loader.LOOPER, updateLooper);\r\n\r\nconst eventTarget = document.createTextNode(null)\r\n\r\nfunction fireEvent (name) {\r\n  const event = new Event(name)\r\n  eventTarget.dispatchEvent(event)\r\n}\r\n\r\nfunction startIfNeeded () {\r\n  if (running === false) {\r\n    running = true\r\n    fireEvent('start')\r\n    looper.postMessage(loopMessageName, '*')\r\n  }\r\n}\r\n\r\nfunction createTask (func, delay, runOnce) {\r\n  const taskId = nextTaskId++\r\n\r\n  console.debug(`[Task ${taskId}] Start`)\r\n\r\n  tasks[taskId] = {\r\n    func: func,\r\n    delay: Math.max(delay, minimumDelay),\r\n    lastRun: undefined,\r\n    runOnce: runOnce,\r\n    stopOnException: true,\r\n    suspended: false\r\n  }\r\n\r\n  startIfNeeded()\r\n  return taskId\r\n}\r\n\r\nfunction resumeTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Resume`)\r\n\r\n  if (!(taskId in tasks)) {\r\n    console.debug(tasks)\r\n    throw new Error(`Error resuming: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = false\r\n  startIfNeeded()\r\n};\r\n\r\nfunction suspendTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Suspend`)\r\n\r\n  if (!(taskId in tasks)) {\r\n    throw new Error(`Error suspending: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = true\r\n};\r\n\r\nfunction deleteTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Stop`)\r\n  delete tasks[taskId]\r\n};\r\n\r\nfunction handleMessage (event) {\r\n  if (!(event.source === looper && event.data === loopMessageName)) {\r\n    return\r\n  }\r\n\r\n  event.stopPropagation()\r\n\r\n  const time = performance.now()\r\n  const taskIds = Object.keys(tasks)\r\n  let runningTaskCount = 0\r\n  let suspendedTaskCount = 0\r\n\r\n  taskIds.forEach(taskId => {\r\n    const task = tasks[taskId]\r\n\r\n    let runs\r\n    if (task.suspended === true) {\r\n      runs = 0\r\n      suspendedTaskCount += 1\r\n    } else {\r\n      runningTaskCount += 1\r\n\r\n      if (task.lastRun === undefined || task.runOnce) {\r\n        runs = 1\r\n      } else {\r\n        const timeSinceRun = time - task.lastRun\r\n        runs = Math.floor(timeSinceRun / task.delay)\r\n      }\r\n    }\r\n\r\n    if (runs > 0) {\r\n      task.lastRun = time\r\n    }\r\n\r\n    for (let i = 0; i < runs; i++) {\r\n      let result\r\n\r\n      try {\r\n        result = task.func()\r\n      } catch (ex) {\r\n        result = signal.FAULTED\r\n\r\n        if (exceptions.length < maxExceptions) {\r\n          exceptions.push(ex)\r\n          looper.postMessage(exceptionName, '*')\r\n        }\r\n      }\r\n\r\n      if (result === signal.DONE ||\r\n                task.runOnce ||\r\n                (task.stopOnException && result === signal.FAULTED)) {\r\n        deleteTask(taskId)\r\n        runningTaskCount -= 1\r\n        break\r\n      }\r\n\r\n      if (result === signal.SUSPEND) {\r\n        suspendTask(taskId)\r\n        runningTaskCount -= 1\r\n        suspendedTaskCount += 1\r\n        break\r\n      }\r\n\r\n      if (result === signal.YIELD) {\r\n        break\r\n      }\r\n    }\r\n  })\r\n\r\n  if (runningTaskCount === 0) {\r\n    running = false\r\n    if (suspendedTaskCount > 0) {\r\n      fireEvent('suspend')\r\n    } else {\r\n      fireEvent('stop')\r\n    }\r\n  } else {\r\n    looper.postMessage(loopMessageName, '*')\r\n  }\r\n};\r\n\r\nfunction handleException (event) {\r\n  if (!(event.source === looper && event.data === exceptionName)) {\r\n    return\r\n  }\r\n\r\n  if (exceptions.length > 0) {\r\n    throw exceptions.pop()\r\n  }\r\n}\r\n\r\nexport function setTinyInterval (func, delay) {\r\n  return createTask(func, delay)\r\n}\r\n\r\nexport function clearTinyInterval (tinyIntervalID) {\r\n  deleteTask(tinyIntervalID)\r\n}\r\n\r\nexport function resumeTinyInterval (tinyIntervalID) {\r\n  resumeTask(tinyIntervalID)\r\n}\r\n\r\nexport function setTinyTimeout (func, delay) {\r\n  return createTask(func, delay, true)\r\n}\r\n\r\nexport function clearTinyTimeout (tinyTimeoutID) {\r\n  deleteTask(tinyTimeoutID)\r\n}\r\n\r\nexport const on = eventTarget.addEventListener.bind(eventTarget)\r\nexport const off = eventTarget.removeEventListener.bind(eventTarget)\r\n// export const dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget)\r\n","// runtime\r\n// =======\r\n\r\nimport * as core from '../common/core'\r\nimport * as signal from '../common/signal'\r\nimport * as types from '../common/types'\r\nimport * as statement from '../evaluate/statement'\r\nimport * as iolib from '../evaluate/iolib'\r\nimport * as daemon from './daemon'\r\n\r\nexport function run (lines, options = {}) {\r\n  let sourceLines = []\r\n  if (options.source !== undefined) {\r\n    if (Array.isArray(options.source)) {\r\n      sourceLines = options.source\r\n    } else {\r\n      sourceLines = options.source.split(/\\r?\\n/)\r\n    }\r\n  }\r\n\r\n  let frequencyMs = 1\r\n  if (options.frequencyMs !== undefined) {\r\n    frequencyMs = options.frequencyMs\r\n  }\r\n\r\n  let outputCallback = options.outputCallback\r\n  if (options.elem !== undefined) {\r\n    outputCallback = iolib.elemOutput(options.elem)\r\n  }\r\n\r\n  const state = {\r\n    mem: core.newMem(),\r\n\r\n    resume: undefined,\r\n    resumeCallback: undefined,\r\n\r\n    debug: options.debug === true,\r\n    sourceLines: sourceLines,\r\n\r\n    searchLabel: undefined,\r\n    ifResult: undefined,\r\n    incrementDecrementResult: undefined,\r\n\r\n    maximumLines: 50,\r\n    linesRun: 0,\r\n\r\n    blockStack: [],\r\n    falsyStackHeight: undefined,\r\n    falsyBlockPreviousIf: undefined,\r\n\r\n    i: 0,\r\n    lines: lines,\r\n\r\n    callback: options.callback,\r\n    frequencyMs: frequencyMs,\r\n\r\n    status: 'pending',\r\n\r\n    rows: 8,\r\n    columns: 16,\r\n\r\n    io: {\r\n      output: outputCallback,\r\n      input: options.input,\r\n      stdin: options.stdin,\r\n      includeErrors: options.includeErrors === undefined || options.includeErrors === true,\r\n      includeLibErrors: options.includeLibErrors === undefined || options.includeLibErrors === true,\r\n      includeLineNumbers: options.includeLineNumbers === undefined || options.includeLineNumbers === true,\r\n      includeSource: options.includeSource === undefined || options.includeSource === true\r\n    }\r\n  }\r\n\r\n  const taskId = daemon.setTinyInterval(() => runLoop(state), state.frequencyMs)\r\n  state.resume = (callback) => {\r\n    state.resumeCallback = callback\r\n    daemon.resumeTinyInterval(taskId)\r\n  }\r\n\r\n  return {\r\n    getStatus: () => state.status,\r\n    isActive: () => state.status === 'pending' || state.status === 'running',\r\n    stop: () => {\r\n      iolib.cleanup(state.io)\r\n      daemon.clearTinyInterval(taskId)\r\n    }\r\n  }\r\n}\r\n\r\nfunction runLoop (state) {\r\n  let result\r\n\r\n  try {\r\n    state.status = 'running'\r\n    result = runLine(state)\r\n  } catch (ex) {\r\n    state.status = 'faulted'\r\n\r\n    if (ex.type === undefined) {\r\n      throw ex\r\n    }\r\n\r\n    if (state.i < state.lines.length && ex.hideSource !== true) {\r\n      let source = state.lines[state.i].source\r\n      if (state.sourceLines !== undefined) {\r\n        source = state.sourceLines[state.i]\r\n      }\r\n      ex.source = {\r\n        index: state.i,\r\n        line: source\r\n      }\r\n    }\r\n\r\n    iolib.stderr(ex, state.io)\r\n    result = signal.DONE\r\n  }\r\n\r\n  if (result === signal.DONE) {\r\n    if (state.status !== 'faulted') {\r\n      state.status = 'done'\r\n    }\r\n\r\n    if (state.callback !== undefined) {\r\n      setTimeout(state.callback, 0)\r\n    }\r\n  } else {\r\n    state.i += 1\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction runLine (state) {\r\n  if (state.debug) {\r\n    console.debug({\r\n      Line: state.i,\r\n      searchLabel: state.searchLabel,\r\n      ifResult: state.ifResult,\r\n      blockStack: state.blockStack,\r\n      falsyStackHeight: state.falsyStackHeight,\r\n      falsyBlockPreviousIf: state.falsyBlockPreviousIf,\r\n      source: state.source,\r\n      mem: state.mem\r\n    })\r\n  }\r\n\r\n  if (state.resumeCallback !== undefined) {\r\n    state.resumeCallback()\r\n    state.resumeCallback = undefined\r\n  }\r\n\r\n  if (state.i >= state.lines.length) {\r\n    if (state.searchLabel !== undefined) {\r\n      throw core.LabelError\r\n    }\r\n\r\n    if (state.ifResult !== undefined || state.incrementDecrementResult !== undefined) {\r\n      throw core.SyntaxError\r\n    }\r\n\r\n    if (state.debug) {\r\n      console.debug(state.mem)\r\n    }\r\n\r\n    return signal.DONE\r\n  }\r\n\r\n  state.linesRun++\r\n\r\n  if (state.linesRun >= state.maximumLines) {\r\n    throw core.libError('maxlines')\r\n  }\r\n\r\n  const line = state.lines[state.i]\r\n  const type = line.type\r\n\r\n  // ----- scan for end -----\r\n\r\n  if (state.falsyStackHeight !== undefined) {\r\n    const lastBlockIndex = state.blockStack[state.blockStack.length - 1]\r\n    const lastBlock = state.lines[lastBlockIndex]\r\n\r\n    if (type === types.EndStatement ||\r\n      (type === types.ElseStatement && lastBlock.type === types.ThenStatement)) {\r\n      state.blockStack.pop()\r\n\r\n      if (state.blockStack.length < state.falsyStackHeight) {\r\n        state.falsyStackHeight = undefined\r\n      }\r\n    }\r\n\r\n    if (type === types.ForLoop ||\r\n      type === types.RepeatLoop ||\r\n      type === types.WhileLoop ||\r\n      (type === types.ThenStatement && state.falsyBlockPreviousIf === true) ||\r\n      (type === types.ElseStatement && lastBlock.type === types.ThenStatement)) {\r\n      state.blockStack.push(state.i)\r\n    }\r\n\r\n    state.falsyBlockPreviousIf = type === types.IfStatement\r\n    return\r\n  }\r\n\r\n  state.falsyBlockPreviousIf = undefined\r\n\r\n  // ----- search for label -----\r\n\r\n  if (state.searchLabel !== undefined) {\r\n    if (type === types.LabelStatement && line.location === state.searchLabel) {\r\n      state.searchLabel = undefined\r\n    }\r\n\r\n    return\r\n  }\r\n\r\n  // ----- check if result -----\r\n\r\n  if (state.ifResult !== undefined) {\r\n    const ifResultFalse = state.ifResult !== true\r\n    state.ifResult = undefined\r\n\r\n    if (type === types.ThenStatement) {\r\n      state.blockStack.push(state.i)\r\n\r\n      if (ifResultFalse) {\r\n        state.falsyStackHeight = state.blockStack.length\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    if (ifResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- check incrementDecrementResult -----\r\n\r\n  if (state.incrementDecrementResult !== undefined) {\r\n    const incrementDecrementResultFalse = state.incrementDecrementResult !== true\r\n    state.incrementDecrementResult = undefined\r\n\r\n    if (incrementDecrementResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- normal execution -----\r\n\r\n  if (line.extra === true) {\r\n    throw core.SyntaxError\r\n  }\r\n  if (line.args === true) {\r\n    throw core.ArgumentError\r\n  }\r\n\r\n  return statement.evaluate(line, state)\r\n}\r\n","// entry point\r\n// ==================\r\n\r\nimport * as webLoader from './inject/web/loader.web'\r\n\r\nwebLoader.init()\r\n\r\nexport { run } from './run/runtime'\r\nexport { on } from './run/daemon'\r\nexport { parse } from './parse/parser'\r\n\r\nexport function exec (source, callback) {\r\n    const lines = ti.parse(source)\r\n    const program = ti.run(lines, {\r\n        outputCallback: callback,\r\n    })\r\n}","// loader.web\r\n// ===========\r\n\r\nimport * as loader from '../loader'\r\nimport * as looper from './looper.web'\r\n\r\nexport function init() {\r\n    loader.set(loader.LOOPER, looper)\r\n}"],"names":["peg$SyntaxError","message","expected","found","location","self","Error","call","this","Object","setPrototypeOf","prototype","name","peg$padEnd","str","targetLength","padString","length","repeat","slice","child","parent","C","constructor","peg$subclass","format","sources","k","src","source","text","split","s","start","loc","line","column","e","end","filler","toString","hatLen","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","parts","map","part","Array","isArray","classEscape","inverted","join","any","other","description","hex","ch","charCodeAt","toUpperCase","replace","describeExpectation","type","i","j","descriptions","sort","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$source","undefined","grammarSource","peg$startRuleFunctions","Start","peg$parseStart","peg$startRuleFunction","peg$c1","peg$c4","peg$c10","peg$c24","peg$c25","peg$c26","peg$c27","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$r5","peg$e0","peg$e1","peg$classExpectation","peg$e2","peg$e3","peg$e4","peg$literalExpectation","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$e40","peg$e41","peg$e42","peg$e43","peg$e44","peg$e45","peg$e46","peg$e47","peg$e48","peg$e49","peg$e50","peg$e51","peg$e52","peg$e53","peg$e54","peg$e55","peg$e56","peg$e57","peg$e58","peg$e59","peg$e60","peg$e61","peg$e62","peg$e63","peg$e64","peg$e65","peg$e66","peg$currPos","peg$savedPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","push","s0","s1","s2","peg$parseSourceCharacter","types","EmptyStatement","peg$parseEmptyStatement","s3","value","assignable","peg$parseLogicalExpression","substr","peg$parseAssignable","AssignmentStatement","peg$parseAssignment","extra","peg$parseExtraCharacters","IfStatement","peg$parseIfStatement","ThenStatement","peg$parseThen","ElseStatement","peg$parseElse","s4","s5","s6","s8","variable","step","args","peg$parseVariable","peg$parseArgumentExpression","peg$parseExtraArguments","peg$parseOptionalEndParen","ForLoop","peg$parseFor","WhileLoop","peg$parseWhile","RepeatLoop","peg$parseRepeat","EndStatement","peg$parseEnd","PauseStatement","peg$parsePause","peg$parseLocation","LabelStatement","peg$parseLabel","GotoStatement","peg$parseGoto","IncrementSkip","peg$parseIncrementSkip","DecrementSkip","peg$parseDecrementSkip","s7","peg$parseStringLiteral","title","util","buildMenuStatement","peg$f43","peg$parseMenu","peg$parseProgramName","ProgramStatement","peg$parseProgram","ReturnStatement","peg$parseReturn","StopStatement","peg$parseStop","DelVarStatement","peg$parseDelVar","equation","style","GraphStyleStatement","peg$parseGraphStyle","OpenLibStatement","peg$parseOpenLib","ExecLibStatement","peg$parseExecLib","peg$parseCtlStatement","peg$parsePrefixArgumentExpression","Input","peg$f51","peg$parseInput","Prompt","peg$parsePrompt","Display","peg$parseDisplay","DispGraph","peg$parseDispGraph","DispTable","peg$parseDispTable","row","Output","peg$parseOutput","ClrHome","peg$parseClrHome","ClrTable","peg$parseClrTable","portflag","GetCalc","peg$parseGetCalc","Get","peg$parseGet","Send","peg$parseSend","peg$parseIoStatement","ValueStatement","peg$parseValueStatement","peg$parseStatement","charAt","peg$parseAlpha","test","peg$parseAlphaNum","peg$parseDigit","peg$parseStringVariable","peg$parseStringVariableIdentifier","STRINGVARIABLE","peg$parseListVariable","peg$parseListVariableIdentifier","LISTVARIABLE","custom","peg$parseCustomListVariableIdentifier","peg$f10","peg$parseNumericVariableIdentifier","VARIABLE","peg$parseNumericVariable","list","index","LISTINDEX","peg$parseListIndex","peg$parseInteger","peg$parseExponentPart","peg$parseExponentIndicator","peg$parseSignedInteger","peg$parseCharacter","chars","peg$parseCharacterString","STRING","peg$parseTokenLiteral","ANS","peg$parseAnswer","GetKey","peg$parseGetKey","peg$parseToken","peg$parseUnaryOperator","peg$parseTokenUnaryExpression","operator","argument","head","tail","buildList","peg$parseListExpression","peg$parseTokenExpression","UNARY","peg$parseUnaryExpression","integer","fraction","exponent","NUMBER","peg$f13","peg$f14","peg$parseNumericLiteral","peg$parseImplicitMultiplicativeExpression","buildImplicitBinaryExpression","peg$f22","peg$parseMultiplicativeOperator","peg$parseMultiplicativeExpression","buildBinaryExpression","peg$parseAdditiveOperator","peg$parseAdditiveExpression","peg$parseTestOperator","peg$parseTestExpression","peg$parseLogicalOperator","ti","lib","LIST","BINARY","MenuStatement","reduce","result","element","left","right","flat","choices","option","elements","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","defineProperty","enumerable","get","obj","prop","hasOwnProperty","r","Symbol","toStringTag","LOOPER","Map","callbacks","postMessage","targetOrigin","transfer","window","addEventListener","listener","useCapture","removeEventListener","error","code","hideSource","tiError","DataTypeError","UndefinedError","LabelError","ArgumentError","DimMismatchError","DivideByZeroError","InvalidDimError","DomainError","libError","UnimplementedError","newFloat","float","ONE","MINUSONE","DONE","FAULTED","SUSPEND","sourceMap","parsedLines","parsedLine","isTruthy","assignVariable","mem","vars","assignAns","ans","binaryOperation","resolveNumber","parseFloat","valueToString","strict","startsWith","evaluate","behavior","expressionOf","resolved","unaryOf","binaryOf","applyUnaryOperation","applyBinaryOperationListAndNumber","number","applyBinaryOperation","x","y","includes","assignmentOf","stdout","newline","output","console","log","onStdin","callback","stdin","stdinQueue","reverse","setTimeout","val","on","keyCode","off","prompt","pop","statementOf","increment","getInput","state","allowStringLiterals","io","resume","sourceLines","Length","sourceLine","ifResult","blockStack","lines","falsyStackHeight","searchLabel","incrementDecrementResult","forEach","choice","idx","digit","rows","columns","loopMessageName","exceptionName","tasks","exceptions","looper","running","nextTaskId","handleMessage","handleException","has","eventTarget","document","createTextNode","fireEvent","event","Event","dispatchEvent","startIfNeeded","suspendTask","taskId","debug","suspended","deleteTask","data","stopPropagation","time","performance","now","taskIds","keys","runningTaskCount","suspendedTaskCount","task","runs","lastRun","runOnce","timeSinceRun","Math","floor","delay","func","ex","stopOnException","bind","run","frequencyMs","outputCallback","elem","resumeCallback","maximumLines","linesRun","falsyBlockPreviousIf","status","includeErrors","includeLibErrors","includeLineNumbers","includeSource","Line","lastBlockIndex","lastBlock","ifResultFalse","incrementDecrementResultFalse","runLine","runLoop","max","createTask","resumeTask","getStatus","isActive","stop","exec"],"sourceRoot":""}