{"version":3,"sources":["webpack://ti/webpack/bootstrap","webpack://ti/./src/common/types.js","webpack://ti/./src/parse/tibasic.pegjs","webpack://ti/./src/parse/pegutil.js","webpack://ti/./src/common/core.js","webpack://ti/./src/parse/parser.js","webpack://ti/./src/evaluate/operation.js","webpack://ti/./src/evaluate/expression.js","webpack://ti/./src/evaluate/assignment.js","webpack://ti/./src/evaluate/iolib.js","webpack://ti/./src/evaluate/statement.js","webpack://ti/./src/common/signal.js","webpack://ti/./src/run/daemon.js","webpack://ti/./src/run/runtime.js","webpack://ti/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ti","lib","SyntaxError","NUMBER","LIST","STRING","ANS","GetKey","VARIABLE","STRINGVARIABLE","LISTVARIABLE","LISTINDEX","BINARY","UNARY","EmptyStatement","ValueStatement","AssignmentStatement","IfStatement","ThenStatement","ElseStatement","ForLoop","WhileLoop","RepeatLoop","EndStatement","PauseStatement","LabelStatement","GotoStatement","IncrementSkip","DecrementSkip","MenuStatement","ProgramStatement","ReturnStatement","StopStatement","DelVarStatement","GraphStyleStatement","OpenLibStatement","ExecLibStatement","Input","Prompt","Display","DispGraph","DispTable","Output","ClrHome","ClrTable","GetCalc","Get","Send","peg$SyntaxError","message","expected","found","location","this","Error","captureStackTrace","child","parent","C","constructor","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","escapedParts","parts","map","part","Array","isArray","classEscape","inverted","any","end","other","description","not","describeExpectation","hex","ch","charCodeAt","toString","toUpperCase","replace","type","j","descriptions","sort","length","slice","join","describeExpected","describeFound","parse","input","options","undefined","peg$result","peg$FAILED","peg$startRuleFunctions","Start","peg$parseStart","peg$startRuleFunction","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$r5","peg$e0","peg$e1","peg$classExpectation","peg$e2","peg$e3","peg$e4","peg$literalExpectation","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$e40","peg$e41","peg$e42","peg$e43","peg$e44","peg$e45","peg$e46","peg$e47","peg$e48","peg$e49","peg$e50","peg$e51","peg$e52","peg$e53","peg$e54","peg$e55","peg$e56","peg$e57","peg$e58","peg$e59","peg$e60","peg$e61","peg$e62","peg$e63","peg$e64","peg$e65","peg$e66","peg$f1","peg$f17","operator","argument","types","peg$f18","head","tail","util","buildImplicitBinaryExpression","peg$f19","buildBinaryExpression","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$expected","startRule","substring","ignoreCase","peg$computePosDetails","pos","details","peg$VALIDFILENAME","filename","peg$computeLocation","startPos","endPos","loc","startPosDetails","start","offset","endPosDetails","peg$begin","push","variants","peg$expect","top","peg$buildStructuredError","s0","s1","s2","peg$parseSourceCharacter","invert","pop","e","apply","peg$end","peg$parseEmptyStatement","s3","peg$parseLogicalExpression","rule$expects","substr","peg$parseAssignable","assignable","peg$parseAssignment","peg$parseExtraCharacters","extra","peg$parseIfStatement","peg$parseThen","peg$parseElse","s4","s5","s6","s8","peg$parseVariable","peg$parseArgumentExpression","peg$parseExtraArguments","peg$parseOptionalEndParen","variable","step","args","peg$parseFor","peg$parseWhile","peg$parseRepeat","peg$parseEnd","peg$parsePause","peg$parseLocation","peg$f31","peg$parseLabel","peg$f32","peg$parseGoto","peg$parseIncrementSkip","peg$parseDecrementSkip","s7","peg$parseStringLiteral","title","buildMenuStatement","peg$f35","peg$parseMenu","peg$parseProgramName","peg$parseProgram","peg$parseReturn","peg$parseStop","peg$parseDelVar","equation","style","peg$parseGraphStyle","peg$parseOpenLib","peg$parseExecLib","peg$parseCtlStatement","peg$parsePrefixArgumentExpression","peg$f43","peg$parseInput","peg$parsePrompt","peg$parseDisplay","peg$parseDispGraph","peg$parseDispTable","row","peg$parseOutput","peg$parseClrHome","peg$parseClrTable","portflag","peg$parseGetCalc","peg$parseGet","peg$parseSend","peg$parseIoStatement","peg$parseValueStatement","peg$parseStatement","charAt","peg$parseAlpha","test","peg$parseAlphaNum","peg$parseDigit","peg$parseCustomListVariableIdentifier","peg$parseNumericVariable","peg$parseNumericVariableIdentifier","peg$parseStringVariable","peg$parseStringVariableIdentifier","peg$parseListVariable","peg$parseListVariableIdentifier","custom","peg$f8","peg$parseListIndex","list","index","peg$parseInteger","peg$parseExponentPart","peg$parseExponentIndicator","peg$parseSignedInteger","peg$parseNumericLiteral","integer","fraction","exponent","peg$f11","peg$f12","peg$parseCharacter","chars","peg$parseCharacterString","peg$parseAnswer","peg$parseGetKey","peg$parseTokenLiteral","peg$parseToken","peg$parseListExpression","buildList","peg$parseUnaryOperator","peg$parseTokenUnaryExpression","peg$parseTokenExpression","peg$parseUnaryExpression","peg$parseImplicitMultiplicativeExpression","peg$parseMultiplicativeOperator","peg$parseMultiplicativeExpression","peg$parseAdditiveOperator","peg$parseAdditiveExpression","peg$parseTestOperator","peg$parseTestExpression","peg$parseLogicalOperator","failPos","peg$buildError","reduce","result","element","left","right","flat","choices","option","elements","concat","error","code","hideSource","tiError","DataTypeError","UndefinedError","LabelError","ArgumentError","DimMismatchError","DivideByZeroError","InvalidDimError","DomainError","libError","UnimplementedError","newFloat","float","ONE","MINUSONE","source","sourceMap","split","parsedLine","isTruthy","assignVariable","mem","vars","assignAns","ans","binaryOperation","resolveNumber","str","parseFloat","valueToString","strict","startsWith","evaluate","behavior","expressionOf","resolved","unaryOf","binaryOf","applyUnaryOperation","applyBinaryOperationListAndNumber","number","applyBinaryOperation","x","y","includes","assignmentOf","stdout","newline","output","console","log","onStdin","callback","stdin","stdinQueue","reverse","setTimeout","val","on","keyCode","off","prompt","statementOf","increment","getInput","state","allowStringLiterals","io","resume","sourceLines","Length","sourceLine","ifResult","blockStack","lines","falsyStackHeight","searchLabel","incrementDecrementResult","forEach","choice","idx","digit","rows","columns","tasks","exceptions","running","nextTaskId","eventTarget","document","createTextNode","fireEvent","event","Event","dispatchEvent","startIfNeeded","window","postMessage","createTask","func","delay","runOnce","taskId","debug","Math","max","lastRun","stopOnException","suspended","suspendTask","deleteTask","resumeTinyInterval","tinyIntervalID","resumeTask","addEventListener","data","stopPropagation","time","performance","now","taskIds","keys","runningTaskCount","suspendedTaskCount","task","runs","timeSinceRun","floor","ex","removeEventListener","run","frequencyMs","outputCallback","elem","resumeCallback","maximumLines","linesRun","falsyBlockPreviousIf","status","includeErrors","includeLibErrors","includeLineNumbers","includeSource","Line","lastBlockIndex","lastBlock","ifResultFalse","incrementDecrementResultFalse","runLine","runLoop","getStatus","isActive","stop","exec"],"mappings":"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","file":"ti.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","// types\r\n// =====\r\n\r\n// ----- Errors -----\r\n\r\nexport const ti = 'ti'\r\nexport const lib = 'lib'\r\nexport const SyntaxError = 'SyntaxError'\r\n\r\n// ----- Values -----\r\n\r\nexport const NUMBER = 'number'\r\nexport const LIST = 'list'\r\nexport const STRING = 'string'\r\n\r\n// ----- Tokens -----\r\n\r\nexport const ANS = 'ans'\r\nexport const GetKey = 'GetKey'\r\n\r\n// ----- Variables -----\r\n\r\nexport const VARIABLE = 'variable'\r\nexport const STRINGVARIABLE = 'stringVariable'\r\nexport const LISTVARIABLE = 'listVariable'\r\nexport const LISTINDEX = 'listIndex'\r\n\r\n// ----- Expressions -----\r\n\r\nexport const BINARY = 'binary'\r\nexport const UNARY = 'unary'\r\n\r\n// ----- Statements -----\r\n\r\nexport const EmptyStatement = 'empty'\r\nexport const ValueStatement = 'value'\r\nexport const AssignmentStatement = 'assign'\r\n\r\n// ----- CTL -----\r\n\r\nexport const IfStatement = 'IfStatement'\r\nexport const ThenStatement = 'ThenStatement'\r\nexport const ElseStatement = 'ElseStatement'\r\nexport const ForLoop = 'ForLoop'\r\nexport const WhileLoop = 'WhileLoop'\r\nexport const RepeatLoop = 'RepeatLoop'\r\nexport const EndStatement = 'EndStatement'\r\nexport const PauseStatement = 'PauseStatement'\r\nexport const LabelStatement = 'LabelStatement'\r\nexport const GotoStatement = 'GotoStatement'\r\nexport const IncrementSkip = 'IncrementSkip'\r\nexport const DecrementSkip = 'DecrementSkip'\r\nexport const MenuStatement = 'MenuStatement'\r\nexport const ProgramStatement = 'ProgramStatement'\r\nexport const ReturnStatement = 'ReturnStatement'\r\nexport const StopStatement = 'StopStatement'\r\nexport const DelVarStatement = 'DelVarStatement'\r\nexport const GraphStyleStatement = 'GraphStyleStatement'\r\nexport const OpenLibStatement = 'OpenLibStatement'\r\nexport const ExecLibStatement = 'ExecLibStatement'\r\n\r\n// ----- I/O -----\r\n\r\nexport const Input = 'Input'\r\nexport const Prompt = 'Prompt'\r\nexport const Display = 'display'\r\nexport const DispGraph = 'DispGraph'\r\nexport const DispTable = 'DispTable'\r\nexport const Output = 'Output'\r\nexport const ClrHome = 'ClrHome'\r\nexport const ClrTable = 'ClrTable'\r\nexport const GetCalc = 'GetCalc'\r\nexport const Get = 'Get'\r\nexport const Send = 'Send'\r\n","// Generated by PEG.js v0.11.0-master.0b102d2, https://pegjs.org/\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = \"SyntaxError\";\n\n  // istanbul ignore next\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    },\n\n    not: function(expectation) {\n      return \"not \" + describeExpectation(expectation.expected);\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n\n  var peg$startRuleFunctions = { Start: peg$parseStart };\n  var peg$startRuleFunction = peg$parseStart;\n\n  var peg$c0 = \")\";\n  var peg$c1 = \"&theta\";\n  var peg$c2 = \"Str\";\n  var peg$c3 = \"&L\";\n  var peg$c4 = \"&list\";\n  var peg$c5 = \"(\";\n  var peg$c6 = \"&E\";\n  var peg$c7 = \".\";\n  var peg$c8 = \"\\\"\";\n  var peg$c9 = \"Ans\";\n  var peg$c10 = \"getKey\";\n  var peg$c11 = \"{\";\n  var peg$c12 = \"}\";\n  var peg$c13 = \"&-\";\n  var peg$c14 = \"*\";\n  var peg$c15 = \"/\";\n  var peg$c16 = \"+\";\n  var peg$c17 = \"-\";\n  var peg$c18 = \"=\";\n  var peg$c19 = \"!=\";\n  var peg$c20 = \">=\";\n  var peg$c21 = \">\";\n  var peg$c22 = \"<=\";\n  var peg$c23 = \"<\";\n  var peg$c24 = \" and \";\n  var peg$c25 = \" or \";\n  var peg$c26 = \" xor \";\n  var peg$c27 = \",\";\n  var peg$c28 = \"->\";\n  var peg$c29 = \"If \";\n  var peg$c30 = \"Then\";\n  var peg$c31 = \"Else\";\n  var peg$c32 = \"For(\";\n  var peg$c33 = \"While \";\n  var peg$c34 = \"Repeat \";\n  var peg$c35 = \"End\";\n  var peg$c36 = \"Pause\";\n  var peg$c37 = \"Lbl \";\n  var peg$c38 = \"Goto \";\n  var peg$c39 = \"IS>(\";\n  var peg$c40 = \"DS<(\";\n  var peg$c41 = \"Menu(\";\n  var peg$c42 = \"prgm\";\n  var peg$c43 = \"Return\";\n  var peg$c44 = \"Stop\";\n  var peg$c45 = \"DelVar \";\n  var peg$c46 = \"GraphStyle(\";\n  var peg$c47 = \"OpenLib(\";\n  var peg$c48 = \"ExecLib(\";\n  var peg$c49 = \"Input \";\n  var peg$c50 = \"Prompt \";\n  var peg$c51 = \"Disp \";\n  var peg$c52 = \"DispGraph\";\n  var peg$c53 = \"DispTable\";\n  var peg$c54 = \"Output(\";\n  var peg$c55 = \"ClrHome\";\n  var peg$c56 = \"ClrTable\";\n  var peg$c57 = \"GetCalc(\";\n  var peg$c58 = \"Get(\";\n  var peg$c59 = \"Send(\";\n\n  var peg$r0 = /^[A-Z]/;\n  var peg$r1 = /^[A-Z0-9]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[1-6]/;\n  var peg$r4 = /^[+\\-]/;\n  var peg$r5 = /^[^\"]/;\n\n  var peg$e0 = peg$anyExpectation();\n  var peg$e1 = peg$classExpectation([[\"A\", \"Z\"]], false, false);\n  var peg$e2 = peg$classExpectation([[\"A\", \"Z\"], [\"0\", \"9\"]], false, false);\n  var peg$e3 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e4 = peg$literalExpectation(\")\", false);\n  var peg$e5 = peg$literalExpectation(\"&theta\", false);\n  var peg$e6 = peg$literalExpectation(\"Str\", false);\n  var peg$e7 = peg$literalExpectation(\"&L\", false);\n  var peg$e8 = peg$classExpectation([[\"1\", \"6\"]], false, false);\n  var peg$e9 = peg$literalExpectation(\"&list\", false);\n  var peg$e10 = peg$literalExpectation(\"(\", false);\n  var peg$e11 = peg$classExpectation([\"+\", \"-\"], false, false);\n  var peg$e12 = peg$literalExpectation(\"&E\", false);\n  var peg$e13 = peg$literalExpectation(\".\", false);\n  var peg$e14 = peg$classExpectation([\"\\\"\"], true, false);\n  var peg$e15 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e16 = peg$literalExpectation(\"Ans\", false);\n  var peg$e17 = peg$literalExpectation(\"getKey\", false);\n  var peg$e18 = peg$literalExpectation(\"{\", false);\n  var peg$e19 = peg$literalExpectation(\"}\", false);\n  var peg$e20 = peg$literalExpectation(\"&-\", false);\n  var peg$e21 = peg$literalExpectation(\"*\", false);\n  var peg$e22 = peg$literalExpectation(\"/\", false);\n  var peg$e23 = peg$literalExpectation(\"+\", false);\n  var peg$e24 = peg$literalExpectation(\"-\", false);\n  var peg$e25 = peg$literalExpectation(\"=\", false);\n  var peg$e26 = peg$literalExpectation(\"!=\", false);\n  var peg$e27 = peg$literalExpectation(\">=\", false);\n  var peg$e28 = peg$literalExpectation(\">\", false);\n  var peg$e29 = peg$literalExpectation(\"<=\", false);\n  var peg$e30 = peg$literalExpectation(\"<\", false);\n  var peg$e31 = peg$literalExpectation(\" and \", false);\n  var peg$e32 = peg$literalExpectation(\" or \", false);\n  var peg$e33 = peg$literalExpectation(\" xor \", false);\n  var peg$e34 = peg$literalExpectation(\",\", false);\n  var peg$e35 = peg$literalExpectation(\"->\", false);\n  var peg$e36 = peg$literalExpectation(\"If \", false);\n  var peg$e37 = peg$literalExpectation(\"Then\", false);\n  var peg$e38 = peg$literalExpectation(\"Else\", false);\n  var peg$e39 = peg$literalExpectation(\"For(\", false);\n  var peg$e40 = peg$literalExpectation(\"While \", false);\n  var peg$e41 = peg$literalExpectation(\"Repeat \", false);\n  var peg$e42 = peg$literalExpectation(\"End\", false);\n  var peg$e43 = peg$literalExpectation(\"Pause\", false);\n  var peg$e44 = peg$literalExpectation(\"Lbl \", false);\n  var peg$e45 = peg$literalExpectation(\"Goto \", false);\n  var peg$e46 = peg$literalExpectation(\"IS>(\", false);\n  var peg$e47 = peg$literalExpectation(\"DS<(\", false);\n  var peg$e48 = peg$literalExpectation(\"Menu(\", false);\n  var peg$e49 = peg$literalExpectation(\"prgm\", false);\n  var peg$e50 = peg$literalExpectation(\"Return\", false);\n  var peg$e51 = peg$literalExpectation(\"Stop\", false);\n  var peg$e52 = peg$literalExpectation(\"DelVar \", false);\n  var peg$e53 = peg$literalExpectation(\"GraphStyle(\", false);\n  var peg$e54 = peg$literalExpectation(\"OpenLib(\", false);\n  var peg$e55 = peg$literalExpectation(\"ExecLib(\", false);\n  var peg$e56 = peg$literalExpectation(\"Input \", false);\n  var peg$e57 = peg$literalExpectation(\"Prompt \", false);\n  var peg$e58 = peg$literalExpectation(\"Disp \", false);\n  var peg$e59 = peg$literalExpectation(\"DispGraph\", false);\n  var peg$e60 = peg$literalExpectation(\"DispTable\", false);\n  var peg$e61 = peg$literalExpectation(\"Output(\", false);\n  var peg$e62 = peg$literalExpectation(\"ClrHome\", false);\n  var peg$e63 = peg$literalExpectation(\"ClrTable\", false);\n  var peg$e64 = peg$literalExpectation(\"GetCalc(\", false);\n  var peg$e65 = peg$literalExpectation(\"Get(\", false);\n  var peg$e66 = peg$literalExpectation(\"Send(\", false);\n\n  var peg$f0 = function() { return true };\n  var peg$f1 = function() { return text(); };\n  var peg$f2 = function() { return 'THETA' };\n  var peg$f3 = function(number) { return 'List' + number; };\n  var peg$f4 = function() { return 'List' + text().substring(5); };\n  var peg$f5 = function(name) { return { type: types.VARIABLE, name } };\n  var peg$f6 = function(name) { return { type: types.STRINGVARIABLE, name } };\n  var peg$f7 = function(name) { return { type: types.LISTVARIABLE, name, custom: false } };\n  var peg$f8 = function(name) { return { type: types.LISTVARIABLE, name, custom: true } };\n  var peg$f9 = function(list, index) { return { type: types.LISTINDEX, list, index } };\n  var peg$f10 = function(integer, fraction, exponent) { \r\n      return { type: types.NUMBER, integer, fraction, exponent }\r\n    };\n  var peg$f11 = function(fraction, exponent) { \r\n      return { type: types.NUMBER, fraction, exponent }\r\n    };\n  var peg$f12 = function(integer, exponent) { \r\n      return { type: types.NUMBER, integer, exponent }\r\n    };\n  var peg$f13 = function(chars) { return { type: types.STRING, chars } };\n  var peg$f14 = function() { return { type: types.ANS } };\n  var peg$f15 = function() { return { type: types.GetKey } };\n  var peg$f16 = function(head, tail) { return util.buildList(head, tail); };\n  var peg$f17 = function(operator, argument) { return { type: types.UNARY, operator, argument } };\n  var peg$f18 = function(head, tail, end) { return util.buildImplicitBinaryExpression(head, tail, end); };\n  var peg$f19 = function(head, tail) { return util.buildBinaryExpression(head, tail); };\n  var peg$f20 = function() { return { type: types.EmptyStatement } };\n  var peg$f21 = function(value) { return { type: types.ValueStatement, value }};\n  var peg$f22 = function(value, assignable) { return { type: types.AssignmentStatement, value, assignable }};\n  var peg$f23 = function(value, extra) { return { type: types.IfStatement, value, extra }};\n  var peg$f24 = function(extra) { return { type: types.ThenStatement, extra }};\n  var peg$f25 = function(extra) { return { type: types.ElseStatement, extra }};\n  var peg$f26 = function(variable, start, end, step, args, extra) { return { type: types.ForLoop, variable, start, end, step, args, extra }};\n  var peg$f27 = function(value, extra) { return { type: types.WhileLoop, value, extra }};\n  var peg$f28 = function(value, extra) { return { type: types.RepeatLoop, value, extra }};\n  var peg$f29 = function(extra) { return { type: types.EndStatement, extra }};\n  var peg$f30 = function() { return { type: types.PauseStatement }};\n  var peg$f31 = function(location) { return { type: types.LabelStatement, location }};\n  var peg$f32 = function(location) { return { type: types.GotoStatement, location }};\n  var peg$f33 = function(variable, end) { return { type: types.IncrementSkip, variable, end }};\n  var peg$f34 = function(variable, end) { return { type: types.DecrementSkip, variable, end }};\n  var peg$f35 = function(title, options) { return util.buildMenuStatement(title, options); };\n  var peg$f36 = function(name) { return { type: types.ProgramStatement, name }};\n  var peg$f37 = function() { return { type: types.ReturnStatement }};\n  var peg$f38 = function() { return { type: types.StopStatement }};\n  var peg$f39 = function(variable) { return { type: types.DelVarStatement, variable }};\n  var peg$f40 = function(equation, style) { return { type: types.GraphStyleStatement, equation, style }};\n  var peg$f41 = function(name) { return { type: types.OpenLibStatement, name }};\n  var peg$f42 = function(name) { return { type: types.ExecLibStatement, name }};\n  var peg$f43 = function(text, variable) { return { type: types.Input, text, variable } };\n  var peg$f44 = function(variable) { return { type: types.Prompt, variable } };\n  var peg$f45 = function(value) { return { type: types.Display, value } };\n  var peg$f46 = function() { return { type: types.DispGraph } };\n  var peg$f47 = function() { return { type: types.DispTable } };\n  var peg$f48 = function(row, column, value) { return { type: types.Output, row, column, value } };\n  var peg$f49 = function() { return { type: types.ClrHome } };\n  var peg$f50 = function() { return { type: types.ClrTable } };\n  var peg$f51 = function(variable, portflag) { return { type: types.GetCalc, variable, portflag } };\n  var peg$f52 = function(variable) { return { type: types.Get, variable } };\n  var peg$f53 = function(variable) { return { type: types.Send, variable } };\n\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$expected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return [peg$savedPos, peg$currPos];\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  var peg$VALIDFILENAME = typeof options.filename === \"string\" && options.filename.length > 0;\n  function peg$computeLocation(startPos, endPos) {\n    var loc = {};\n\n    if ( peg$VALIDFILENAME ) loc.filename = options.filename;\n\n    var startPosDetails = peg$computePosDetails(startPos);\n    loc.start = {\n      offset: startPos,\n      line: startPosDetails.line,\n      column: startPosDetails.column\n    };\n\n    var endPosDetails = peg$computePosDetails(endPos);\n    loc.end = {\n      offset: endPos,\n      line: endPosDetails.line,\n      column: endPosDetails.column\n    };\n\n    return loc;\n  }\n\n  function peg$begin() {\n    peg$expected.push({ pos: peg$currPos, variants: [] });\n  }\n\n  function peg$expect(expected) {\n    var top = peg$expected[peg$expected.length - 1];\n\n    if (peg$currPos < top.pos) { return; }\n\n    if (peg$currPos > top.pos) {\n      top.pos = peg$currPos;\n      top.variants = [];\n    }\n\n    top.variants.push(expected);\n  }\n\n  function peg$end(invert) {\n    var expected = peg$expected.pop();\n    var top = peg$expected[peg$expected.length - 1];\n    var variants = expected.variants;\n\n    if (top.pos !== expected.pos) { return; }\n\n    if (invert) {\n      variants = variants.map(function(e) {\n        return e.type === \"not\" ? e.expected : { type: \"not\", expected: e };\n      });\n    }\n\n    Array.prototype.push.apply(top.variants, variants);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$buildError() {\n    var expected = peg$expected[0];\n    var failPos = expected.pos;\n\n    return peg$buildStructuredError(\n      expected.variants,\n      failPos < input.length ? input.charAt(failPos) : null,\n      failPos < input.length\n        ? peg$computeLocation(failPos, failPos + 1)\n        : peg$computeLocation(failPos, failPos)\n    );\n  }\n\n  function peg$parseStart() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseStatement();\n\n    return s0;\n  }\n\n  function peg$parseSourceCharacter() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e0);\n    if (input.length > peg$currPos) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAlpha() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e1);\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAlphaNum() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e2);\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDigit() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e3);\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExtraCharacters() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseSourceCharacter();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseSourceCharacter();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f0();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOptionalEndParen() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e4);\n    if (input.charCodeAt(peg$currPos) === 41) {\n      s0 = peg$c0;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = null;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLocation() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAlphaNum();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlphaNum();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f1();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseProgramName() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAlpha();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlphaNum();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseAlphaNum();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseAlphaNum();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseAlphaNum();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = peg$parseAlphaNum();\n      if (s6 === peg$FAILED) {\n        s6 = null;\n      }\n      s7 = peg$parseAlphaNum();\n      if (s7 === peg$FAILED) {\n        s7 = null;\n      }\n      s8 = peg$parseAlphaNum();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f1();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericVariableIdentifier() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseAlpha();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e5);\n      if (input.substr(peg$currPos, 6) === peg$c1) {\n        s1 = peg$c1;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f2();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseStringVariableIdentifier() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e6);\n    if (input.substr(peg$currPos, 3) === peg$c2) {\n      s1 = peg$c2;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseDigit();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f1();\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseListVariableIdentifier() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e7);\n    if (input.substr(peg$currPos, 2) === peg$c3) {\n      s1 = peg$c3;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e8);\n      if (peg$r3.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f3(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCustomListVariableIdentifier() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e9);\n    if (input.substr(peg$currPos, 5) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlpha();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAlphaNum();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$parseAlphaNum();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        s5 = peg$parseAlphaNum();\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s6 = peg$parseAlphaNum();\n        if (s6 === peg$FAILED) {\n          s6 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f4();\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseNumericVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f5(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseStringVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseStringVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f6(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseListVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseListVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f7(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseCustomListVariableIdentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f8(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVariable() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseStringVariable();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNumericVariable();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseListVariable();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseListIndex() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseListVariable();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e10);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c5;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseLogicalExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOptionalEndParen();\n          peg$savedPos = s0;\n          s0 = peg$f9(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAssignable() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseListIndex();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseVariable();\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseDigit();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseDigit();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSignedInteger() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    rule$expects(peg$e11);\n    if (peg$r4.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parseInteger();\n    if (s3 !== peg$FAILED) {\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentIndicator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e12);\n    if (input.substr(peg$currPos, 2) === peg$c6) {\n      s0 = peg$c6;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentPart() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponentIndicator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseSignedInteger();\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericLiteral() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseInteger();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e13);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c7;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseInteger();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$parseExponentPart();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f10(s1, s3, s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e13);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseInteger();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExponentPart();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f11(s2, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseInteger();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseExponentPart();\n          if (s2 === peg$FAILED) {\n            s2 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f12(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacter() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e14);\n    if (peg$r5.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacterString() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseCharacter();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseCharacter();\n    }\n    s0 = input.substring(s0, peg$currPos);\n\n    return s0;\n  }\n\n  function peg$parseStringLiteral() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e15);\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseCharacterString();\n      rule$expects(peg$e15);\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s3 = peg$c8;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f13(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnswer() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e16);\n    if (input.substr(peg$currPos, 3) === peg$c9) {\n      s1 = peg$c9;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f14();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseGetKey() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e17);\n    if (input.substr(peg$currPos, 6) === peg$c10) {\n      s1 = peg$c10;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f15();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseToken() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseAnswer();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseGetKey();\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenLiteral() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseToken();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAssignable();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseStringLiteral();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseListExpression() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e18);\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c11;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseArgumentExpression();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseArgumentExpression();\n        }\n        rule$expects(peg$e19);\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s4 = peg$c12;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f16(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenExpression() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenLiteral();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e10);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c5;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseLogicalExpression();\n        if (s2 !== peg$FAILED) {\n          rule$expects(peg$e4);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c0;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s0 = s2;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseListExpression();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e20);\n    if (input.substr(peg$currPos, 2) === peg$c13) {\n      s0 = peg$c13;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenUnaryExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryOperator();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseTokenUnaryExpression();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f17(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenUnaryExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNumericLiteral();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseUnaryOperator();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseUnaryExpression();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f17(s1, s2);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseImplicitMultiplicativeExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTokenUnaryExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseUnaryExpression();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseTokenUnaryExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseUnaryExpression();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseTokenUnaryExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      s3 = peg$parseUnaryExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f18(s1, s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryExpression();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseTokenUnaryExpression();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseUnaryExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseTokenUnaryExpression();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseUnaryExpression();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        s3 = peg$parseTokenUnaryExpression();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f18(s1, s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseUnaryExpression();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e21);\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s0 = peg$c14;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e22);\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s0 = peg$c15;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseImplicitMultiplicativeExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseMultiplicativeOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseImplicitMultiplicativeExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseMultiplicativeOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseImplicitMultiplicativeExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e23);\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c16;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e24);\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c17;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseMultiplicativeExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseAdditiveOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseMultiplicativeExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseAdditiveOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseMultiplicativeExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e25);\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s0 = peg$c18;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e26);\n      if (input.substr(peg$currPos, 2) === peg$c19) {\n        s0 = peg$c19;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        rule$expects(peg$e27);\n        if (input.substr(peg$currPos, 2) === peg$c20) {\n          s0 = peg$c20;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          rule$expects(peg$e28);\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s0 = peg$c21;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            rule$expects(peg$e29);\n            if (input.substr(peg$currPos, 2) === peg$c22) {\n              s0 = peg$c22;\n              peg$currPos += 2;\n            } else {\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              rule$expects(peg$e30);\n              if (input.charCodeAt(peg$currPos) === 60) {\n                s0 = peg$c23;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAdditiveExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseTestOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseAdditiveExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseTestOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseAdditiveExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLogicalOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e31);\n    if (input.substr(peg$currPos, 5) === peg$c24) {\n      s0 = peg$c24;\n      peg$currPos += 5;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e32);\n      if (input.substr(peg$currPos, 4) === peg$c25) {\n        s0 = peg$c25;\n        peg$currPos += 4;\n      } else {\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        rule$expects(peg$e33);\n        if (input.substr(peg$currPos, 5) === peg$c26) {\n          s0 = peg$c26;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLogicalExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseLogicalOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseTestExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseLogicalOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseTestExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseArgumentExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e34);\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s1 = peg$c27;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrefixArgumentExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseLogicalExpression();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e34);\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s2 = peg$c27;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExtraArguments() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseArgumentExpression();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseArgumentExpression();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f0();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseEmptyStatement() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$begin();\n    s2 = peg$parseSourceCharacter();\n    peg$end(true);\n    if (s2 === peg$FAILED) {\n      s1 = undefined;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f20();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseValueStatement() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseLogicalExpression();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f21(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseAssignment() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseLogicalExpression();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e35);\n      if (input.substr(peg$currPos, 2) === peg$c28) {\n        s2 = peg$c28;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAssignable();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f22(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIfStatement() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e36);\n    if (input.substr(peg$currPos, 3) === peg$c29) {\n      s1 = peg$c29;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f23(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseThen() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e37);\n    if (input.substr(peg$currPos, 4) === peg$c30) {\n      s1 = peg$c30;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f24(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseElse() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e38);\n    if (input.substr(peg$currPos, 4) === peg$c31) {\n      s1 = peg$c31;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f25(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFor() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e39);\n    if (input.substr(peg$currPos, 4) === peg$c32) {\n      s1 = peg$c32;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseArgumentExpression();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseArgumentExpression();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = peg$parseExtraArguments();\n      if (s6 === peg$FAILED) {\n        s6 = null;\n      }\n      s7 = peg$parseOptionalEndParen();\n      s8 = peg$parseExtraCharacters();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f26(s2, s3, s4, s5, s6, s8);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseWhile() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e40);\n    if (input.substr(peg$currPos, 6) === peg$c33) {\n      s1 = peg$c33;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f27(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseRepeat() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e41);\n    if (input.substr(peg$currPos, 7) === peg$c34) {\n      s1 = peg$c34;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f28(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEnd() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e42);\n    if (input.substr(peg$currPos, 3) === peg$c35) {\n      s1 = peg$c35;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f29(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePause() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e43);\n    if (input.substr(peg$currPos, 5) === peg$c36) {\n      s1 = peg$c36;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f30();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseLabel() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e44);\n    if (input.substr(peg$currPos, 4) === peg$c37) {\n      s1 = peg$c37;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f31(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGoto() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e45);\n    if (input.substr(peg$currPos, 5) === peg$c38) {\n      s1 = peg$c38;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f32(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIncrementSkip() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e46);\n    if (input.substr(peg$currPos, 4) === peg$c39) {\n      s1 = peg$c39;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f33(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDecrementSkip() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e47);\n    if (input.substr(peg$currPos, 4) === peg$c40) {\n      s1 = peg$c40;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f34(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMenu() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e48);\n    if (input.substr(peg$currPos, 5) === peg$c41) {\n      s1 = peg$c41;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$currPos;\n      rule$expects(peg$e34);\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s5 = peg$c27;\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$parseStringLiteral();\n        if (s6 !== peg$FAILED) {\n          rule$expects(peg$e34);\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s7 = peg$c27;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parseLocation();\n            if (s8 !== peg$FAILED) {\n              s5 = [s5, s6, s7, s8];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$currPos;\n        rule$expects(peg$e34);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c27;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseStringLiteral();\n          if (s6 !== peg$FAILED) {\n            rule$expects(peg$e34);\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s7 = peg$c27;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseLocation();\n              if (s8 !== peg$FAILED) {\n                s5 = [s5, s6, s7, s8];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f35(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseProgram() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e49);\n    if (input.substr(peg$currPos, 4) === peg$c42) {\n      s1 = peg$c42;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f36(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseReturn() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e50);\n    if (input.substr(peg$currPos, 6) === peg$c43) {\n      s1 = peg$c43;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f37();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseStop() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e51);\n    if (input.substr(peg$currPos, 4) === peg$c44) {\n      s1 = peg$c44;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f38();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDelVar() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e52);\n    if (input.substr(peg$currPos, 7) === peg$c45) {\n      s1 = peg$c45;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f39(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGraphStyle() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e53);\n    if (input.substr(peg$currPos, 11) === peg$c46) {\n      s1 = peg$c46;\n      peg$currPos += 11;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f40(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOpenLib() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e54);\n    if (input.substr(peg$currPos, 8) === peg$c47) {\n      s1 = peg$c47;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOptionalEndParen();\n        peg$savedPos = s0;\n        s0 = peg$f41(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExecLib() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e55);\n    if (input.substr(peg$currPos, 8) === peg$c48) {\n      s1 = peg$c48;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOptionalEndParen();\n        peg$savedPos = s0;\n        s0 = peg$f42(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCtlStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseIfStatement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseThen();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseElse();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFor();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseWhile();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseRepeat();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseEnd();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsePause();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseLabel();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseGoto();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseIncrementSkip();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parseDecrementSkip();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parseMenu();\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parseProgram();\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$parseReturn();\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$parseStop();\n                                  if (s0 === peg$FAILED) {\n                                    s0 = peg$parseDelVar();\n                                    if (s0 === peg$FAILED) {\n                                      s0 = peg$parseGraphStyle();\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$parseOpenLib();\n                                        if (s0 === peg$FAILED) {\n                                          s0 = peg$parseExecLib();\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInput() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e56);\n    if (input.substr(peg$currPos, 6) === peg$c49) {\n      s1 = peg$c49;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsePrefixArgumentExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseVariable();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f43(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrompt() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e57);\n    if (input.substr(peg$currPos, 7) === peg$c50) {\n      s1 = peg$c50;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f44(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDisplay() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e58);\n    if (input.substr(peg$currPos, 5) === peg$c51) {\n      s1 = peg$c51;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f45(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDispGraph() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e59);\n    if (input.substr(peg$currPos, 9) === peg$c52) {\n      s1 = peg$c52;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f46();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDispTable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e60);\n    if (input.substr(peg$currPos, 9) === peg$c53) {\n      s1 = peg$c53;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f47();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOutput() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e61);\n    if (input.substr(peg$currPos, 7) === peg$c54) {\n      s1 = peg$c54;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseArgumentExpression();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f48(s2, s3, s4);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseClrHome() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e62);\n    if (input.substr(peg$currPos, 7) === peg$c55) {\n      s1 = peg$c55;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f49();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseClrTable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e63);\n    if (input.substr(peg$currPos, 8) === peg$c56) {\n      s1 = peg$c56;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f50();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseGetCalc() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e64);\n    if (input.substr(peg$currPos, 8) === peg$c57) {\n      s1 = peg$c57;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f51(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGet() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e65);\n    if (input.substr(peg$currPos, 4) === peg$c58) {\n      s1 = peg$c58;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f52(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSend() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e66);\n    if (input.substr(peg$currPos, 5) === peg$c59) {\n      s1 = peg$c59;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f53(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIoStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseInput();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePrompt();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseDisplay();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseDispGraph();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseDispTable();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseOutput();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseClrHome();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseClrTable();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseGetCalc();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseGet();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseSend();\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseEmptyStatement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAssignment();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseCtlStatement();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseIoStatement();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseValueStatement();\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n\r\n    const types = require ('../common/types');\r\n    const util = require ('./pegutil');\r\n\n\n  peg$begin();\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$expect(peg$endExpectation());\n    }\n\n    throw peg$buildError();\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n","// pegutil\r\n// =======\r\n\r\nimport * as types from '../common/types'\r\n\r\nexport function buildBinaryExpression (head, tail) {\r\n  return tail.reduce(function (result, element) {\r\n\r\n    return {\r\n      type: types.BINARY,\r\n      operator: element[0],\r\n      left: result,\r\n      right: element[1]\r\n    }\r\n  }, head)\r\n}\r\n\r\nexport function buildImplicitBinaryExpression (head, tail, end) {\r\n  \r\n  const list = tail.flat()\r\n  if (end !== null) {\r\n    list.push(end)\r\n  }\r\n  return list.reduce(function (result, element) {\r\n    return {\r\n      type: types.BINARY,\r\n      operator: '*',\r\n      left: result,\r\n      right: element\r\n    }\r\n  }, head)\r\n}\r\n\r\nexport function buildMenuStatement (title, options) {\r\n  const choices = options.map(function (element) {\r\n    return {\r\n      option: element[1],\r\n      location: element[3]\r\n    }\r\n  })\r\n  return {\r\n    type: types.MenuStatement,\r\n    title,\r\n    choices\r\n  }\r\n}\r\n\r\nexport function buildList (head, tail) {\r\n  return {\r\n    type: types.LIST,\r\n    elements: [head].concat(tail)\r\n  }\r\n}\r\n","// core\r\n// ====\r\n\r\nimport * as types from './types'\r\n\r\nfunction error (type, code, hideSource = false) {\r\n  return {\r\n    type: type,\r\n    code: code,\r\n    hideSource: hideSource\r\n  }\r\n}\r\n\r\nfunction tiError (code, hideSource = false) {\r\n  return error(types.ti, code, hideSource)\r\n}\r\n\r\nexport const DataTypeError = tiError('DATA TYPE')\r\nexport const SyntaxError = tiError('SYNTAX')\r\nexport const UndefinedError = tiError('UNDEFINED')\r\nexport const LabelError = tiError('LABEL')\r\nexport const ArgumentError = tiError('ARGUMENT')\r\nexport const DimMismatchError = tiError('DIM MISMATCH')\r\nexport const DivideByZeroError = tiError('DIVIDE BY 0')\r\nexport const InvalidDimError = tiError('INVALID DIM')\r\nexport const DomainError = tiError('DOMAIN')\r\n\r\nexport function libError (code, hideSource = false) {\r\n  return error(types.lib, code, hideSource)\r\n}\r\n\r\nexport const UnimplementedError = libError('unimplemented')\r\n\r\nexport function newMem () {\r\n  return {\r\n    vars: {},\r\n    ans: newFloat()\r\n  }\r\n}\r\n\r\nexport function newFloat (value = 0) {\r\n  return { type: types.NUMBER, float: value }\r\n}\r\n\r\nexport const ONE = newFloat(1)\r\n\r\nexport const MINUSONE = newFloat(-1)\r\n","// parser\r\n// ======\r\n\r\nimport * as types from '../common/types'\r\nimport pegJsParser from './tibasic.pegjs'\r\n\r\nexport function parse (source, options = {}) {\r\n  if (source === undefined) {\r\n    throw new Error('Undefined source!')\r\n  }\r\n\r\n  const sourceMap = options.sourceMap || 'inline'\r\n\r\n  // TODO:\r\n  // * Allow multiple statements per line with ':'\r\n  const sourceLines = source.split(/\\r?\\n/)\r\n  const parsedLines = sourceLines.map(s => {\r\n    let parsedLine\r\n    try {\r\n      parsedLine = pegJsParser.parse(s)\r\n    } catch (error) {\r\n      if (error.name === 'SyntaxError') {\r\n        parsedLine = { type: 'SyntaxError' }\r\n      } else {\r\n        throw error\r\n      }\r\n    }\r\n    if (sourceMap === 'inline') {\r\n      parsedLine.source = s\r\n    }\r\n    return parsedLine\r\n  })\r\n\r\n  return parsedLines\r\n}\r\n\r\nexport function parseExpression (source) {\r\n  if (source === undefined) {\r\n    throw new Error('Undefined source!')\r\n  }\r\n\r\n  const sourceLines = source.split(/\\r?\\n/)\r\n  if (sourceLines.Length > 1) {\r\n    throw new Error('Too many lines for an expression')\r\n  }\r\n  const sourceLine = sourceLines[0]\r\n  let parsedLine\r\n  try {\r\n    parsedLine = pegJsParser.parse(sourceLine)\r\n  } catch (error) {\r\n    if (error.name !== 'SyntaxError') {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  return parsedLine !== undefined && parsedLine.type === types.ValueStatement ? parsedLine.value : { type: 'SyntaxError' }\r\n}\r\n","// operation\r\n// =========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\n\r\nexport function isTruthy (value) {\r\n  if (value.type === types.NUMBER) {\r\n    return value.float !== 0\r\n  }\r\n  throw core.DataTypeError\r\n}\r\n\r\nexport function assignVariable (mem, variable, value) {\r\n  if (variable.type === types.STRINGVARIABLE) {\r\n    if (value.type !== types.STRING) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else if (variable.type === types.VARIABLE) {\r\n    if (value.type !== types.NUMBER) {\r\n      return\r\n    }\r\n  } else if (variable.type === types.LISTVARIABLE) {\r\n    if (value.type !== types.LIST) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else if (variable.type === types.LISTINDEX) {\r\n    if (value.type !== types.LIST) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else {\r\n    throw core.libError('unexpected variable type')\r\n  }\r\n  mem.vars[variable.name] = value\r\n}\r\n\r\nexport function deleteVariable (mem, variable) {\r\n  delete mem.vars[variable.name]\r\n}\r\n\r\nexport function hasVariable (mem, variable) {\r\n  return variable.name in mem.vars\r\n}\r\n\r\nexport function assignAns (mem, value) {\r\n  mem.ans = value\r\n}\r\n\r\nexport function binaryOperation (left, operator, right) {\r\n  return {\r\n    type: types.BINARY,\r\n    operator,\r\n    left,\r\n    right\r\n  }\r\n}\r\n\r\nexport function resolveNumber (value) {\r\n  let str = ''\r\n  if (value.integer !== undefined && value.integer !== null) {\r\n    str += value.integer\r\n  }\r\n  if (value.fraction !== undefined && value.fraction !== null) {\r\n    str += '.' + value.fraction\r\n  }\r\n  if (value.exponent !== undefined && value.exponent !== null) {\r\n    str += 'e' + value.exponent\r\n  }\r\n  return parseFloat(str)\r\n}\r\n\r\nexport function variableToString (variable) {\r\n  let str = variable.name\r\n  switch (variable.type) {\r\n    case types.VARIABLE:\r\n    case types.STRINGVARIABLE:\r\n      break\r\n    case types.LISTVARIABLE:\r\n      str = str.substring(4)\r\n      if (!variable.custom) {\r\n        str = `&L${str}`\r\n      }\r\n      break\r\n    default:\r\n      throw core.libError('unexpected variable tostring')\r\n  }\r\n  return str\r\n}\r\n\r\nexport function valueToString (value, strict = false) {\r\n  if (strict && value.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  let str = ''\r\n  switch (value.type) {\r\n    case types.NUMBER:\r\n      str = value.float.toString()\r\n      if (str.startsWith('0.')) {\r\n        str = str.substring(1)\r\n      }\r\n      break\r\n    case types.STRING:\r\n      str = value.chars\r\n      break\r\n    case types.LIST:\r\n      str = '{' + value.elements.map(e => valueToString(e)).join(' ') + '}'\r\n      break\r\n    default:\r\n      throw core.libError('unexpected value tostring')\r\n  }\r\n  return str\r\n}\r\n\r\nexport function parseDigit (str) {\r\n  if (str === undefined || str === null || str === '' || str.length > 1) {\r\n    return\r\n  }\r\n  const digit = str.charCodeAt(0) - '0'.charCodeAt(0)\r\n  if (digit < 0 || digit > 9) {\r\n    return\r\n  }\r\n  return digit\r\n}\r\n","// expression\r\n// ==========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\nimport * as operation from './operation'\r\n\r\nexport function evaluate (value, mem) {\r\n  const behavior = expressionOf[value.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected value')\r\n  }\r\n  return behavior(value, mem)\r\n}\r\n\r\nconst expressionOf = {}\r\n\r\n// ----- Expressions -----\r\n\r\nexpressionOf[types.SyntaxError] = (value, mem) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\n// ----- Values -----\r\n\r\nexpressionOf[types.NUMBER] = (value, mem) => {\r\n  if (value.float !== undefined) {\r\n    return value\r\n  }\r\n  return {\r\n    type: types.NUMBER,\r\n    float: operation.resolveNumber(value)\r\n  }\r\n}\r\n\r\nexpressionOf[types.STRING] = (value, mem) => {\r\n  return value\r\n}\r\n\r\nexpressionOf[types.LIST] = (value, mem) => {\r\n  if (value.resolved === true) {\r\n    return value\r\n  }\r\n  return {\r\n    type: types.LIST,\r\n    elements: value.elements.map(function (element) {\r\n      const result = evaluate(element, mem)\r\n      if (result.type !== types.NUMBER) {\r\n        // TODO: a list of lists should be a syntax error\r\n        // However, a list of list variables should still be a data type error\r\n        // Distinguishing them here is hard - should be done in grammar?\r\n        throw core.DataTypeError\r\n      }\r\n      return result\r\n    }),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Variables -----\r\n\r\nexpressionOf[types.VARIABLE] = (value, mem) => {\r\n  let result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    result = mem.vars[value.name] = core.newFloat()\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.STRINGVARIABLE] = (value, mem) => {\r\n  const result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    throw core.UndefinedError\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.LISTVARIABLE] = (value, mem) => {\r\n  const result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    throw core.UndefinedError\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.LISTINDEX] = (value, mem) => {\r\n  const list = evaluate(value.list, mem)\r\n  const index = evaluate(value.index, mem)\r\n  if (index.type !== types.NUMBER) {\r\n    throw core.InvalidDimError\r\n  }\r\n  if (index.float < 1 || index.float > list.elements.length) {\r\n    throw core.InvalidDimError\r\n  }\r\n  return {\r\n    type: types.NUMBER,\r\n    float: list.elements[index.float - 1].float\r\n  }\r\n}\r\n\r\n// ----- Tokens -----\r\n\r\nexpressionOf[types.ANS] = (value, mem) => {\r\n  return mem.ans\r\n}\r\n\r\nexpressionOf[types.GetKey] = (value, mem) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- Operators -----\r\n\r\nexpressionOf[types.UNARY] = (value, mem) => {\r\n  const argument = evaluate(value.argument, mem)\r\n  const behavior = unaryOf[argument.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected unary argument')\r\n  }\r\n  return behavior(value.operator, argument)\r\n}\r\n\r\nexpressionOf[types.BINARY] = (value, mem) => {\r\n  const left = evaluate(value.left, mem)\r\n  const right = evaluate(value.right, mem)\r\n  const behavior = binaryOf[left.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected binary left')\r\n  }\r\n  return behavior(value.operator, left, right)\r\n}\r\n\r\n// ----- Unary -----\r\n\r\nconst unaryOf = {}\r\n\r\nunaryOf[types.NUMBER] = (operator, argument) => {\r\n  return { type: types.NUMBER, float: applyUnaryOperation(operator, argument.float) }\r\n}\r\n\r\nunaryOf[types.STRING] = (operator, argument) => {\r\n  throw core.DataTypeError\r\n}\r\n\r\nunaryOf[types.LIST] = (operator, argument) => {\r\n  return {\r\n    type: types.LIST,\r\n    elements: argument.elements.map(e => ({ type: types.NUMBER, float: applyUnaryOperation(operator, e.float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Binary -----\r\n\r\nconst binaryOf = {}\r\n\r\nbinaryOf[types.NUMBER] = (operator, left, right) => {\r\n  if (right.type !== types.NUMBER) {\r\n    if (right.type === types.LIST) {\r\n      return applyBinaryOperationListAndNumber(operator, right, left)\r\n    }\r\n    throw core.DataTypeError\r\n  }\r\n  return { type: types.NUMBER, float: applyBinaryOperation(operator, left.float, right.float) }\r\n}\r\n\r\nbinaryOf[types.STRING] = (operator, left, right) => {\r\n  if (right.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (['+'].includes(operator)) {\r\n    return { type: types.STRING, chars: applyBinaryOperation(operator, left.chars, right.chars) }\r\n  }\r\n  if (['=', '!='].includes(operator)) {\r\n    return { type: types.NUMBER, float: applyBinaryOperation(operator, left.chars, right.chars) }\r\n  }\r\n  throw core.DataTypeError\r\n}\r\n\r\nbinaryOf[types.LIST] = (operator, left, right) => {\r\n  if (right.type !== types.LIST) {\r\n    if (right.type === types.NUMBER) {\r\n      return applyBinaryOperationListAndNumber(operator, left, right)\r\n    }\r\n    throw core.DataTypeError\r\n  }\r\n  if (left.elements.length !== right.elements.length) {\r\n    throw core.DimMismatchError\r\n  }\r\n  return {\r\n    type: types.LIST,\r\n    elements: left.elements.map((e, i) => ({ type: types.NUMBER, float: applyBinaryOperation(operator, e.float, right.elements[i].float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Helper -----\r\n\r\nfunction applyBinaryOperationListAndNumber (operator, list, number) {\r\n  return {\r\n    type: types.LIST,\r\n    elements: list.elements.map((e, i) => ({ type: types.NUMBER, float: applyBinaryOperation(operator, e.float, number.float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\nfunction applyUnaryOperation (operator, x) {\r\n  switch (operator) {\r\n    case '&-': return x * -1\r\n    default: throw core.libError('unexpected unary operator')\r\n  }\r\n}\r\n\r\nfunction applyBinaryOperation (operator, x, y) {\r\n  if (operator === '/' && y === 0) {\r\n    throw core.DivideByZeroError\r\n  }\r\n  switch (operator) {\r\n    case '+': return x + y\r\n    case '-': return x - y\r\n    case '*': return x * y\r\n    case '/': return x / y\r\n    case '=': return x === y ? 1 : 0\r\n    case '!=': return x !== y ? 1 : 0\r\n    case '>=': return x >= y ? 1 : 0\r\n    case '>': return x > y ? 1 : 0\r\n    case '<=': return x <= y ? 1 : 0\r\n    case '<': return x < y ? 1 : 0\r\n    case ' and ': return x && y ? 1 : 0\r\n    case ' or ': return x || y ? 1 : 0\r\n    case ' xor ': return (!x && y) || (x && !y) ? 1:0\r\n    default: throw core.libError('unexpected binary operator')\r\n  }\r\n}\r\n","// assignment\r\n// ==========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\nimport * as expression from './expression'\r\n\r\nexport function evaluate (assignable, value, mem) {\r\n  const behavior = assignmentOf[assignable.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected assignable type')\r\n  }\r\n  return behavior(assignable, value, mem)\r\n}\r\n\r\nconst assignmentOf = {}\r\n\r\n// ----- Statements -----\r\n\r\nassignmentOf[types.VARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.NUMBER) {\r\n    return\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.STRINGVARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.LISTVARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.LIST) {\r\n    throw core.DataTypeError\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.LISTINDEX] = (assignable, value, mem) => {\r\n  const list = expression.evaluate(assignable.list, mem)\r\n  const index = expression.evaluate(assignable.index, mem)\r\n  if (index.type !== types.NUMBER) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (index.float < 1 || index.float > list.elements.length) {\r\n    throw core.InvalidDimError\r\n  }\r\n  mem.vars[assignable.list.name].elements[index.float - 1] = value\r\n}\r\n","// iolib\r\n// =====\r\n\r\nimport * as types from '../common/types'\r\n\r\nconst enterkey = 13\r\n\r\nexport function elemOutput(elem) {\r\n  return (value, newline) => {\r\n    setTimeout(() => {\r\n      let result = elem.val() + value\r\n      if (newline) {\r\n        result += '\\n'\r\n      }\r\n      elem.val(result)\r\n    }, 0)\r\n  }\r\n}\r\n\r\nexport function stdout (value, options = {}, newline = true) {\r\n  if (options.output === undefined) {\r\n    console.log(value)\r\n    return\r\n  }\r\n  options.output(value, newline);\r\n}\r\n\r\nexport function stderr (ex, options = {}) {\r\n  if ((ex.type === types.ti && !options.includeErrors) ||\r\n      (ex.type === types.lib && !options.includeLibErrors)) {\r\n    console.log(ex)\r\n    return\r\n  }\r\n  let value = ''\r\n  if (ex.type === types.ti) {\r\n    value += 'ERR:'\r\n  } else if (ex.type === types.lib) {\r\n    value += 'Error: '\r\n  } else {\r\n    value += 'Unexpected: '\r\n  }\r\n  value += ex.code\r\n  if (options.includeLineNumbers && ex.source !== undefined && ex.source.index !== undefined) {\r\n    value += ` on line ${ex.source.index}`\r\n  }\r\n  if (options.includeSource && ex.source !== undefined && ex.source.line !== undefined) {\r\n    value += ` :${ex.source.line}`\r\n  }\r\n  stdout(value, options)\r\n}\r\n\r\nexport function onStdin (callback, options = {}) {\r\n  if (options.stdin !== undefined && options.stdin !== '' && options.stdinQueue === undefined) {\r\n    options.stdinQueue = options.stdin.split('\\n').reverse()\r\n  }\r\n  if (options.stdinQueue !== undefined) {\r\n    setTimeout(() => {\r\n      const result = options.stdinQueue.pop()\r\n      if (callback(result) === true) {\r\n        onStdin(callback, options)\r\n      }\r\n    }, 0)\r\n    return\r\n  }\r\n  if (options.input === undefined) {\r\n    setTimeout(() => {\r\n      if (callback(prompt('Input?')) === true) {\r\n        onStdin(callback, options)\r\n      }\r\n    }, 100)\r\n    return\r\n  }\r\n  setTimeout(() => options.input.val(''), 0)\r\n  options.input.on('keypress', e => {\r\n    if (e.keyCode === enterkey) {\r\n      const result = options.input.val()\r\n      setTimeout(() => options.input.val(''), 0)\r\n      if (callback(result) !== true) {\r\n        options.input.off('keypress')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport function cleanup (options = {}) {\r\n  if (options.input !== undefined) {\r\n    options.input.off('keypress')\r\n  }\r\n}\r\n","// statement\r\n// =========\r\n\r\nimport * as core from '../common/core'\r\nimport * as signal from '../common/signal'\r\nimport * as types from '../common/types'\r\nimport * as parser from '../parse/parser'\r\nimport * as operation from './operation'\r\nimport * as expression from './expression'\r\nimport * as assignment from './assignment'\r\nimport * as iolib from './iolib'\r\n\r\nexport function evaluate (line, state) {\r\n  const behavior = statementOf[line.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected')\r\n  }\r\n  return behavior(line, state)\r\n}\r\n\r\nconst statementOf = {}\r\n\r\n// ----- Statements -----\r\n\r\nstatementOf[types.EmptyStatement] = (line, state) => {\r\n  // do nothing\r\n}\r\n\r\nstatementOf[types.AssignmentStatement] = (line, state) => {\r\n  const value = expression.evaluate(line.value, state.mem)\r\n  assignment.evaluate(line.assignable, value, state.mem)\r\n  operation.assignAns(state.mem, value)\r\n}\r\n\r\nstatementOf[types.ValueStatement] = (line, state) => {\r\n  operation.assignAns(state.mem, expression.evaluate(line.value, state.mem))\r\n}\r\n\r\nstatementOf[types.SyntaxError] = (line, state) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\n// ----- CTL -----\r\n\r\nstatementOf[types.IfStatement] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.ifResult = operation.isTruthy(expression.evaluate(line.value, state.mem))\r\n}\r\n\r\nstatementOf[types.ThenStatement] = (line, state) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\nstatementOf[types.ElseStatement] = (line, state) => {\r\n  if (state.blockStack.length === 0) {\r\n    throw core.SyntaxError\r\n  }\r\n  if (state.lines[state.blockStack.pop()].type === types.ThenStatement) {\r\n    state.blockStack.push(state.i)\r\n    state.falsyStackHeight = state.blockStack.length\r\n  } else {\r\n    throw core.SyntaxError\r\n  }\r\n}\r\n\r\nstatementOf[types.ForLoop] = (line, state) => {\r\n  if (line.variable === null || line.start === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  operation.assignVariable(state.mem, line.variable, expression.evaluate(line.start, state.mem))\r\n  state.blockStack.push(state.i)\r\n  if (!operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '<=', line.end), state.mem))) {\r\n    state.falsyStackHeight = state.blockStack.length\r\n  }\r\n}\r\n\r\nstatementOf[types.WhileLoop] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.blockStack.push(state.i)\r\n  if (!operation.isTruthy(expression.evaluate(line.value, state.mem))) {\r\n    state.falsyStackHeight = state.blockStack.length\r\n  }\r\n}\r\n\r\nstatementOf[types.RepeatLoop] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.blockStack.push(state.i)\r\n}\r\n\r\nstatementOf[types.EndStatement] = (line, state) => {\r\n  if (state.blockStack.length === 0) {\r\n    throw core.SyntaxError\r\n  }\r\n  const source = state.blockStack.pop()\r\n  const sourceLine = state.lines[source]\r\n  if (sourceLine.type === types.ForLoop ||\r\n              sourceLine.type === types.WhileLoop ||\r\n              sourceLine.type === types.RepeatLoop) {\r\n    if (sourceLine.type === types.ForLoop) {\r\n      increment(state.mem, sourceLine.variable, sourceLine.step !== null ? sourceLine.step : core.ONE)\r\n      if (operation.isTruthy(expression.evaluate(operation.binaryOperation(sourceLine.variable, '<=', sourceLine.end), state.mem))) {\r\n        state.blockStack.push(source)\r\n        state.i = source\r\n      }\r\n    } else if (operation.isTruthy(expression.evaluate(sourceLine.value, state.mem))) {\r\n      state.blockStack.push(source)\r\n      state.i = source\r\n    }\r\n  } else if (sourceLine.type === types.ThenStatement ||\r\n                  sourceLine.type === types.ElseStatement) {\r\n    // empty\r\n  } else {\r\n    throw core.libError(`impossibleEndFrom'${sourceLine.type}`)\r\n  }\r\n}\r\n\r\nstatementOf[types.PauseStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.LabelStatement] = (line, state) => {\r\n}\r\n\r\nstatementOf[types.GotoStatement] = (line, state) => {\r\n  state.searchLabel = line.location\r\n  state.i = -1\r\n}\r\n\r\nstatementOf[types.IncrementSkip] = (line, state) => {\r\n  if (line.variable === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  increment(state.mem, line.variable, core.ONE)\r\n  state.incrementDecrementResult = operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '<=', line.end), state.mem))\r\n}\r\n\r\nstatementOf[types.DecrementSkip] = (line, state) => {\r\n  if (line.variable === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  increment(state.mem, line.variable, core.MINUSONE)\r\n  state.incrementDecrementResult = operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '>=', line.end), state.mem))\r\n}\r\n\r\nstatementOf[types.MenuStatement] = (line, state) => {\r\n  if (line.title === null || line.choices.length === 0 || line.choices.length > 7) {\r\n    throw core.ArgumentError\r\n  }\r\n  iolib.stdout(operation.valueToString(expression.evaluate(line.title, state.mem), true), state.io)\r\n  line.choices.forEach((choice, idx) => {\r\n    iolib.stdout(`${idx + 1}:${operation.valueToString(choice.option)}`, state.io)\r\n  })\r\n  iolib.onStdin(input => {\r\n    const digit = operation.parseDigit(input)\r\n    if (digit === undefined || digit === 0 || digit > line.choices.length) {\r\n      return true\r\n    }\r\n    state.searchLabel = line.choices[digit - 1].location\r\n    state.i = 0\r\n    state.resume()\r\n  }, state.io)\r\n  return signal.SUSPEND\r\n}\r\n\r\nstatementOf[types.ProgramStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ReturnStatement] = (line, state) => {\r\n  // TODO interaction with subprograms\r\n  return signal.DONE\r\n}\r\n\r\nstatementOf[types.StopStatement] = (line, state) => {\r\n  return signal.DONE\r\n}\r\n\r\nstatementOf[types.DelVarStatement] = (line, state) => {\r\n  if (line.variable === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  operation.deleteVariable(state.mem, line.variable)\r\n}\r\n\r\nstatementOf[types.GraphStyleStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.OpenLibStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ExecLibStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- I/O -----\r\n\r\nstatementOf[types.Display] = (line, state) => {\r\n  if (line.value !== null) {\r\n    iolib.stdout(operation.valueToString(expression.evaluate(line.value, state.mem)), state.io)\r\n  }\r\n}\r\n\r\nstatementOf[types.Input] = (line, state) => {\r\n  if (line.variable === null) {\r\n    if (line.text !== null) {\r\n      throw core.ArgumentError\r\n    }\r\n    throw core.UnimplementedError\r\n  }\r\n  let text = '?'\r\n  if (line.text !== null) {\r\n    text = operation.valueToString(expression.evaluate(line.text, state.mem), true)\r\n  }\r\n  return getInput(text, line.variable, state, true)\r\n}\r\n\r\nstatementOf[types.Prompt] = (line, state) => {\r\n  if (line.variable === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  const text = operation.variableToString(line.variable)\r\n  return getInput(`${text}=?`, line.variable, state, false)\r\n}\r\n\r\nstatementOf[types.DispGraph] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.DispTable] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Output] = (line, state) => {\r\n  if (line.row === null || line.column === null || line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  const row = expression.evaluate(line.row, state.mem)\r\n  const column = expression.evaluate(line.column, state.mem)\r\n  if (row.type !== types.NUMBER || column.type !== types.NUMBER) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (row.float < 1 || row.float > state.rows || column.float < 1 || column.float > state.columns) {\r\n    throw core.DomainError\r\n  }\r\n  // TODO: respect rows and columns\r\n  iolib.stdout(operation.valueToString(expression.evaluate(line.value, state.mem)), state.io)\r\n}\r\n\r\nstatementOf[types.ClrHome] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ClrTable] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.GetCalc] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Get] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Send] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- Helpers -----\r\n\r\nfunction increment (mem, variable, step) {\r\n  if (!operation.hasVariable(mem, variable)) {\r\n    throw core.UndefinedError\r\n  }\r\n  operation.assignVariable(mem, variable, expression.evaluate({\r\n    type: types.BINARY,\r\n    operator: '+',\r\n    left: variable,\r\n    right: step\r\n  }, mem), mem)\r\n}\r\n\r\nfunction getInput (text, variable, state, allowStringLiterals) {\r\n  iolib.stdout(text, state.io, false)\r\n  iolib.onStdin(input => {\r\n    if (input === null || input === undefined || input === '') {\r\n      return true\r\n    }\r\n    state.resume(() => {\r\n      iolib.stdout(input, state.io)\r\n\r\n      let value\r\n      if (variable.type === types.STRINGVARIABLE && allowStringLiterals) {\r\n        value = { type: types.STRING, chars: input }\r\n      } else {\r\n        value = expression.evaluate(parser.parseExpression(input), state.mem)\r\n      }\r\n\r\n      // special case where a prompt for a numerical variable is interpreted as a list variable\r\n      if (variable.type === types.VARIABLE && value.type === types.LIST) {\r\n        variable = { type: types.LISTVARIABLE, name: `List${variable.name}`, custom: true }\r\n      }\r\n\r\n      operation.assignVariable(state.mem, variable, value)\r\n    })\r\n  }, state.io)\r\n  return signal.SUSPEND\r\n}\r\n","// signal\r\n// ======\r\n\r\nexport const YIELD = 'yield'\r\nexport const DONE = 'done'\r\nexport const FAULTED = 'faulted'\r\nexport const SUSPEND = 'suspend'\r\n","// daemon\r\n// ======\r\n\r\nimport * as signal from '../common/signal'\r\n\r\nconst loopMessageName = 'daemon-loop'\r\nconst exceptionName = 'daemon-exception'\r\nconst minimumDelay = 0.001 // 1 microsecond\r\nconst tasks = {}\r\nconst exceptions = []\r\nlet running = false\r\nlet nextTaskId = 0\r\nconst maxExceptions = 1000\r\n\r\nconst eventTarget = document.createTextNode(null)\r\n\r\nfunction fireEvent (name) {\r\n  const event = new Event(name)\r\n  eventTarget.dispatchEvent(event)\r\n}\r\n\r\nfunction startIfNeeded () {\r\n  if (running === false) {\r\n    running = true\r\n    fireEvent('start')\r\n    window.postMessage(loopMessageName, '*')\r\n  }\r\n}\r\n\r\nfunction createTask (func, delay, runOnce) {\r\n  const taskId = nextTaskId++\r\n\r\n  console.debug(`[Task ${taskId}] Start`)\r\n\r\n  tasks[taskId] = {\r\n    func: func,\r\n    delay: Math.max(delay, minimumDelay),\r\n    lastRun: undefined,\r\n    runOnce: runOnce,\r\n    stopOnException: true,\r\n    suspended: false\r\n  }\r\n\r\n  startIfNeeded()\r\n  return taskId\r\n}\r\n\r\nfunction resumeTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Resume`)\r\n\r\n  if (!(taskId in tasks)) {\r\n    console.debug(tasks)\r\n    throw new Error(`Error resuming: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = false\r\n  startIfNeeded()\r\n};\r\n\r\nfunction suspendTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Suspend`)\r\n\r\n  if (!(taskId in tasks)) {\r\n    throw new Error(`Error suspending: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = true\r\n};\r\n\r\nfunction deleteTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Stop`)\r\n  delete tasks[taskId]\r\n};\r\n\r\nfunction handleMessage (event) {\r\n  if (!(event.source === window && event.data === loopMessageName)) {\r\n    return\r\n  }\r\n\r\n  event.stopPropagation()\r\n\r\n  const time = performance.now()\r\n  const taskIds = Object.keys(tasks)\r\n  let runningTaskCount = 0\r\n  let suspendedTaskCount = 0\r\n\r\n  taskIds.forEach(taskId => {\r\n    const task = tasks[taskId]\r\n\r\n    let runs\r\n    if (task.suspended === true) {\r\n      runs = 0\r\n      suspendedTaskCount += 1\r\n    } else {\r\n      runningTaskCount += 1\r\n\r\n      if (task.lastRun === undefined || task.runOnce) {\r\n        runs = 1\r\n      } else {\r\n        const timeSinceRun = time - task.lastRun\r\n        runs = Math.floor(timeSinceRun / task.delay)\r\n      }\r\n    }\r\n\r\n    if (runs > 0) {\r\n      task.lastRun = time\r\n    }\r\n\r\n    for (let i = 0; i < runs; i++) {\r\n      let result\r\n\r\n      try {\r\n        result = task.func()\r\n      } catch (ex) {\r\n        result = signal.FAULTED\r\n\r\n        if (exceptions.length < maxExceptions) {\r\n          exceptions.push(ex)\r\n          window.postMessage(exceptionName, '*')\r\n        }\r\n      }\r\n\r\n      if (result === signal.DONE ||\r\n                task.runOnce ||\r\n                (task.stopOnException && result === signal.FAULTED)) {\r\n        deleteTask(taskId)\r\n        runningTaskCount -= 1\r\n        break\r\n      }\r\n\r\n      if (result === signal.SUSPEND) {\r\n        suspendTask(taskId)\r\n        runningTaskCount -= 1\r\n        suspendedTaskCount += 1\r\n        break\r\n      }\r\n\r\n      if (result === signal.YIELD) {\r\n        break\r\n      }\r\n    }\r\n  })\r\n\r\n  if (runningTaskCount === 0) {\r\n    running = false\r\n    if (suspendedTaskCount > 0) {\r\n      fireEvent('suspend')\r\n    } else {\r\n      fireEvent('stop')\r\n    }\r\n  } else {\r\n    window.postMessage(loopMessageName, '*')\r\n  }\r\n};\r\n\r\nfunction handleException (event) {\r\n  if (!(event.source === window && event.data === exceptionName)) {\r\n    return\r\n  }\r\n\r\n  if (exceptions.length > 0) {\r\n    throw exceptions.pop()\r\n  }\r\n}\r\n\r\nwindow.addEventListener('message', handleMessage, true)\r\nwindow.addEventListener('message', handleException, true)\r\n\r\nexport function setTinyInterval (func, delay) {\r\n  return createTask(func, delay)\r\n}\r\n\r\nexport function clearTinyInterval (tinyIntervalID) {\r\n  deleteTask(tinyIntervalID)\r\n}\r\n\r\nexport function resumeTinyInterval (tinyIntervalID) {\r\n  resumeTask(tinyIntervalID)\r\n}\r\n\r\nexport function setTinyTimeout (func, delay) {\r\n  return createTask(func, delay, true)\r\n}\r\n\r\nexport function clearTinyTimeout (tinyTimeoutID) {\r\n  deleteTask(tinyTimeoutID)\r\n}\r\n\r\nexport const on = eventTarget.addEventListener.bind(eventTarget)\r\nexport const off = eventTarget.removeEventListener.bind(eventTarget)\r\n// export const dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget)\r\n","// runtime\r\n// =======\r\n\r\nimport * as core from '../common/core'\r\nimport * as signal from '../common/signal'\r\nimport * as types from '../common/types'\r\nimport * as statement from '../evaluate/statement'\r\nimport * as iolib from '../evaluate/iolib'\r\nimport * as daemon from './daemon'\r\n\r\nexport function run (lines, options = {}) {\r\n  let sourceLines = []\r\n  if (options.source !== undefined) {\r\n    if (Array.isArray(options.source)) {\r\n      sourceLines = options.source\r\n    } else {\r\n      sourceLines = options.source.split(/\\r?\\n/)\r\n    }\r\n  }\r\n\r\n  let frequencyMs = 1\r\n  if (options.frequencyMs !== undefined) {\r\n    frequencyMs = options.frequencyMs\r\n  }\r\n\r\n  let outputCallback = options.outputCallback\r\n  if (options.elem !== undefined) {\r\n    outputCallback = iolib.elemOutput(options.elem)\r\n  }\r\n\r\n  const state = {\r\n    mem: core.newMem(),\r\n\r\n    resume: undefined,\r\n    resumeCallback: undefined,\r\n\r\n    debug: options.debug === true,\r\n    sourceLines: sourceLines,\r\n\r\n    searchLabel: undefined,\r\n    ifResult: undefined,\r\n    incrementDecrementResult: undefined,\r\n\r\n    maximumLines: 50,\r\n    linesRun: 0,\r\n\r\n    blockStack: [],\r\n    falsyStackHeight: undefined,\r\n    falsyBlockPreviousIf: undefined,\r\n\r\n    i: 0,\r\n    lines: lines,\r\n\r\n    callback: options.callback,\r\n    frequencyMs: frequencyMs,\r\n\r\n    status: 'pending',\r\n\r\n    rows: 8,\r\n    columns: 16,\r\n\r\n    io: {\r\n      output: outputCallback,\r\n      input: options.input,\r\n      stdin: options.stdin,\r\n      includeErrors: options.includeErrors === undefined || options.includeErrors === true,\r\n      includeLibErrors: options.includeLibErrors === undefined || options.includeLibErrors === true,\r\n      includeLineNumbers: options.includeLineNumbers === undefined || options.includeLineNumbers === true,\r\n      includeSource: options.includeSource === undefined || options.includeSource === true\r\n    }\r\n  }\r\n\r\n  const taskId = daemon.setTinyInterval(() => runLoop(state), state.frequencyMs)\r\n  state.resume = (callback) => {\r\n    state.resumeCallback = callback\r\n    daemon.resumeTinyInterval(taskId)\r\n  }\r\n\r\n  return {\r\n    getStatus: () => state.status,\r\n    isActive: () => state.status === 'pending' || state.status === 'running',\r\n    stop: () => {\r\n      iolib.cleanup(state.io)\r\n      daemon.clearTinyInterval(taskId)\r\n    }\r\n  }\r\n}\r\n\r\nfunction runLoop (state) {\r\n  let result\r\n\r\n  try {\r\n    state.status = 'running'\r\n    result = runLine(state)\r\n  } catch (ex) {\r\n    state.status = 'faulted'\r\n\r\n    if (ex.type === undefined) {\r\n      throw ex\r\n    }\r\n\r\n    if (state.i < state.lines.length && ex.hideSource !== true) {\r\n      let source = state.lines[state.i].source\r\n      if (state.sourceLines !== undefined) {\r\n        source = state.sourceLines[state.i]\r\n      }\r\n      ex.source = {\r\n        index: state.i,\r\n        line: source\r\n      }\r\n    }\r\n\r\n    iolib.stderr(ex, state.io)\r\n    result = signal.DONE\r\n  }\r\n\r\n  if (result === signal.DONE) {\r\n    if (state.status !== 'faulted') {\r\n      state.status = 'done'\r\n    }\r\n\r\n    if (state.callback !== undefined) {\r\n      setTimeout(state.callback, 0)\r\n    }\r\n  } else {\r\n    state.i += 1\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction runLine (state) {\r\n  if (state.debug) {\r\n    console.debug({\r\n      Line: state.i,\r\n      searchLabel: state.searchLabel,\r\n      ifResult: state.ifResult,\r\n      blockStack: state.blockStack,\r\n      falsyStackHeight: state.falsyStackHeight,\r\n      falsyBlockPreviousIf: state.falsyBlockPreviousIf,\r\n      source: state.source,\r\n      mem: state.mem\r\n    })\r\n  }\r\n\r\n  if (state.resumeCallback !== undefined) {\r\n    state.resumeCallback()\r\n    state.resumeCallback = undefined\r\n  }\r\n\r\n  if (state.i >= state.lines.length) {\r\n    if (state.searchLabel !== undefined) {\r\n      throw core.LabelError\r\n    }\r\n\r\n    if (state.ifResult !== undefined || state.incrementDecrementResult !== undefined) {\r\n      throw core.SyntaxError\r\n    }\r\n\r\n    if (state.debug) {\r\n      console.debug(state.mem)\r\n    }\r\n\r\n    return signal.DONE\r\n  }\r\n\r\n  state.linesRun++\r\n\r\n  if (state.linesRun >= state.maximumLines) {\r\n    throw core.libError('maxlines')\r\n  }\r\n\r\n  const line = state.lines[state.i]\r\n  const type = line.type\r\n\r\n  // ----- scan for end -----\r\n\r\n  if (state.falsyStackHeight !== undefined) {\r\n    const lastBlockIndex = state.blockStack[state.blockStack.length - 1]\r\n    const lastBlock = state.lines[lastBlockIndex]\r\n\r\n    if (type === types.EndStatement ||\r\n      (type === types.ElseStatement && lastBlock.type === types.ThenStatement)) {\r\n      state.blockStack.pop()\r\n\r\n      if (state.blockStack.length < state.falsyStackHeight) {\r\n        state.falsyStackHeight = undefined\r\n      }\r\n    }\r\n\r\n    if (type === types.ForLoop ||\r\n      type === types.RepeatLoop ||\r\n      type === types.WhileLoop ||\r\n      (type === types.ThenStatement && state.falsyBlockPreviousIf === true) ||\r\n      (type === types.ElseStatement && lastBlock.type === types.ThenStatement)) {\r\n      state.blockStack.push(state.i)\r\n    }\r\n\r\n    state.falsyBlockPreviousIf = type === types.IfStatement\r\n    return\r\n  }\r\n\r\n  state.falsyBlockPreviousIf = undefined\r\n\r\n  // ----- search for label -----\r\n\r\n  if (state.searchLabel !== undefined) {\r\n    if (type === types.LabelStatement && line.location === state.searchLabel) {\r\n      state.searchLabel = undefined\r\n    }\r\n\r\n    return\r\n  }\r\n\r\n  // ----- check if result -----\r\n\r\n  if (state.ifResult !== undefined) {\r\n    const ifResultFalse = state.ifResult !== true\r\n    state.ifResult = undefined\r\n\r\n    if (type === types.ThenStatement) {\r\n      state.blockStack.push(state.i)\r\n\r\n      if (ifResultFalse) {\r\n        state.falsyStackHeight = state.blockStack.length\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    if (ifResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- check incrementDecrementResult -----\r\n\r\n  if (state.incrementDecrementResult !== undefined) {\r\n    const incrementDecrementResultFalse = state.incrementDecrementResult !== true\r\n    state.incrementDecrementResult = undefined\r\n\r\n    if (incrementDecrementResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- normal execution -----\r\n\r\n  if (line.extra === true) {\r\n    throw core.SyntaxError\r\n  }\r\n  if (line.args === true) {\r\n    throw core.ArgumentError\r\n  }\r\n\r\n  return statement.evaluate(line, state)\r\n}\r\n","// entry point\r\n// ==================\r\n\r\nexport { run } from './run/runtime'\r\nexport { on } from './run/daemon'\r\nexport { parse } from './parse/parser'\r\n\r\nexport function exec (source, callback) {\r\n    const lines = ti.parse(source)\r\n    const program = ti.run(lines, {\r\n        outputCallback: callback,\r\n    })\r\n}"],"sourceRoot":""}