{"version":3,"file":"ti.js","mappings":"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","sources":["webpack://ti/./src/parse/tibasic.pegjs","webpack://ti/./src/common/types.js","webpack://ti/./src/parse/pegutil.js","webpack://ti/webpack/bootstrap","webpack://ti/webpack/runtime/compat get default export","webpack://ti/webpack/runtime/define property getters","webpack://ti/webpack/runtime/hasOwnProperty shorthand","webpack://ti/webpack/runtime/make namespace object","webpack://ti/./src/common/core.js","webpack://ti/./src/common/signal.js","webpack://ti/./src/parse/parser.js","webpack://ti/./src/evaluate/operation.js","webpack://ti/./src/evaluate/expression.js","webpack://ti/./src/evaluate/assignment.js","webpack://ti/./src/evaluate/iolib.js","webpack://ti/./src/evaluate/statement.js","webpack://ti/./src/run/daemon.js","webpack://ti/./src/run/runtime.js","webpack://ti/./src/index.js"],"sourcesContent":["// Generated by PEG.js v0.11.0-master.0b102d2, https://pegjs.org/\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = \"SyntaxError\";\n\n  // istanbul ignore next\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    },\n\n    not: function(expectation) {\n      return \"not \" + describeExpectation(expectation.expected);\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n\n  var peg$startRuleFunctions = { Start: peg$parseStart };\n  var peg$startRuleFunction = peg$parseStart;\n\n  var peg$c0 = \")\";\n  var peg$c1 = \"&theta\";\n  var peg$c2 = \"Str\";\n  var peg$c3 = \"&L\";\n  var peg$c4 = \"&list\";\n  var peg$c5 = \"(\";\n  var peg$c6 = \"&E\";\n  var peg$c7 = \".\";\n  var peg$c8 = \"\\\"\";\n  var peg$c9 = \"Ans\";\n  var peg$c10 = \"getKey\";\n  var peg$c11 = \"{\";\n  var peg$c12 = \"}\";\n  var peg$c13 = \"&-\";\n  var peg$c14 = \"*\";\n  var peg$c15 = \"/\";\n  var peg$c16 = \"+\";\n  var peg$c17 = \"-\";\n  var peg$c18 = \"=\";\n  var peg$c19 = \"!=\";\n  var peg$c20 = \">=\";\n  var peg$c21 = \">\";\n  var peg$c22 = \"<=\";\n  var peg$c23 = \"<\";\n  var peg$c24 = \" and \";\n  var peg$c25 = \" or \";\n  var peg$c26 = \" xor \";\n  var peg$c27 = \",\";\n  var peg$c28 = \"->\";\n  var peg$c29 = \"If \";\n  var peg$c30 = \"Then\";\n  var peg$c31 = \"Else\";\n  var peg$c32 = \"For(\";\n  var peg$c33 = \"While \";\n  var peg$c34 = \"Repeat \";\n  var peg$c35 = \"End\";\n  var peg$c36 = \"Pause\";\n  var peg$c37 = \"Lbl \";\n  var peg$c38 = \"Goto \";\n  var peg$c39 = \"IS>(\";\n  var peg$c40 = \"DS<(\";\n  var peg$c41 = \"Menu(\";\n  var peg$c42 = \"prgm\";\n  var peg$c43 = \"Return\";\n  var peg$c44 = \"Stop\";\n  var peg$c45 = \"DelVar \";\n  var peg$c46 = \"GraphStyle(\";\n  var peg$c47 = \"OpenLib(\";\n  var peg$c48 = \"ExecLib(\";\n  var peg$c49 = \"Input \";\n  var peg$c50 = \"Prompt \";\n  var peg$c51 = \"Disp \";\n  var peg$c52 = \"DispGraph\";\n  var peg$c53 = \"DispTable\";\n  var peg$c54 = \"Output(\";\n  var peg$c55 = \"ClrHome\";\n  var peg$c56 = \"ClrTable\";\n  var peg$c57 = \"GetCalc(\";\n  var peg$c58 = \"Get(\";\n  var peg$c59 = \"Send(\";\n\n  var peg$r0 = /^[A-Z]/;\n  var peg$r1 = /^[A-Z0-9]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[1-6]/;\n  var peg$r4 = /^[+\\-]/;\n  var peg$r5 = /^[^\"]/;\n\n  var peg$e0 = peg$anyExpectation();\n  var peg$e1 = peg$classExpectation([[\"A\", \"Z\"]], false, false);\n  var peg$e2 = peg$classExpectation([[\"A\", \"Z\"], [\"0\", \"9\"]], false, false);\n  var peg$e3 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e4 = peg$literalExpectation(\")\", false);\n  var peg$e5 = peg$literalExpectation(\"&theta\", false);\n  var peg$e6 = peg$literalExpectation(\"Str\", false);\n  var peg$e7 = peg$literalExpectation(\"&L\", false);\n  var peg$e8 = peg$classExpectation([[\"1\", \"6\"]], false, false);\n  var peg$e9 = peg$literalExpectation(\"&list\", false);\n  var peg$e10 = peg$literalExpectation(\"(\", false);\n  var peg$e11 = peg$classExpectation([\"+\", \"-\"], false, false);\n  var peg$e12 = peg$literalExpectation(\"&E\", false);\n  var peg$e13 = peg$literalExpectation(\".\", false);\n  var peg$e14 = peg$classExpectation([\"\\\"\"], true, false);\n  var peg$e15 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e16 = peg$literalExpectation(\"Ans\", false);\n  var peg$e17 = peg$literalExpectation(\"getKey\", false);\n  var peg$e18 = peg$literalExpectation(\"{\", false);\n  var peg$e19 = peg$literalExpectation(\"}\", false);\n  var peg$e20 = peg$literalExpectation(\"&-\", false);\n  var peg$e21 = peg$literalExpectation(\"*\", false);\n  var peg$e22 = peg$literalExpectation(\"/\", false);\n  var peg$e23 = peg$literalExpectation(\"+\", false);\n  var peg$e24 = peg$literalExpectation(\"-\", false);\n  var peg$e25 = peg$literalExpectation(\"=\", false);\n  var peg$e26 = peg$literalExpectation(\"!=\", false);\n  var peg$e27 = peg$literalExpectation(\">=\", false);\n  var peg$e28 = peg$literalExpectation(\">\", false);\n  var peg$e29 = peg$literalExpectation(\"<=\", false);\n  var peg$e30 = peg$literalExpectation(\"<\", false);\n  var peg$e31 = peg$literalExpectation(\" and \", false);\n  var peg$e32 = peg$literalExpectation(\" or \", false);\n  var peg$e33 = peg$literalExpectation(\" xor \", false);\n  var peg$e34 = peg$literalExpectation(\",\", false);\n  var peg$e35 = peg$literalExpectation(\"->\", false);\n  var peg$e36 = peg$literalExpectation(\"If \", false);\n  var peg$e37 = peg$literalExpectation(\"Then\", false);\n  var peg$e38 = peg$literalExpectation(\"Else\", false);\n  var peg$e39 = peg$literalExpectation(\"For(\", false);\n  var peg$e40 = peg$literalExpectation(\"While \", false);\n  var peg$e41 = peg$literalExpectation(\"Repeat \", false);\n  var peg$e42 = peg$literalExpectation(\"End\", false);\n  var peg$e43 = peg$literalExpectation(\"Pause\", false);\n  var peg$e44 = peg$literalExpectation(\"Lbl \", false);\n  var peg$e45 = peg$literalExpectation(\"Goto \", false);\n  var peg$e46 = peg$literalExpectation(\"IS>(\", false);\n  var peg$e47 = peg$literalExpectation(\"DS<(\", false);\n  var peg$e48 = peg$literalExpectation(\"Menu(\", false);\n  var peg$e49 = peg$literalExpectation(\"prgm\", false);\n  var peg$e50 = peg$literalExpectation(\"Return\", false);\n  var peg$e51 = peg$literalExpectation(\"Stop\", false);\n  var peg$e52 = peg$literalExpectation(\"DelVar \", false);\n  var peg$e53 = peg$literalExpectation(\"GraphStyle(\", false);\n  var peg$e54 = peg$literalExpectation(\"OpenLib(\", false);\n  var peg$e55 = peg$literalExpectation(\"ExecLib(\", false);\n  var peg$e56 = peg$literalExpectation(\"Input \", false);\n  var peg$e57 = peg$literalExpectation(\"Prompt \", false);\n  var peg$e58 = peg$literalExpectation(\"Disp \", false);\n  var peg$e59 = peg$literalExpectation(\"DispGraph\", false);\n  var peg$e60 = peg$literalExpectation(\"DispTable\", false);\n  var peg$e61 = peg$literalExpectation(\"Output(\", false);\n  var peg$e62 = peg$literalExpectation(\"ClrHome\", false);\n  var peg$e63 = peg$literalExpectation(\"ClrTable\", false);\n  var peg$e64 = peg$literalExpectation(\"GetCalc(\", false);\n  var peg$e65 = peg$literalExpectation(\"Get(\", false);\n  var peg$e66 = peg$literalExpectation(\"Send(\", false);\n\n  var peg$f0 = function() { return true };\n  var peg$f1 = function() { return text(); };\n  var peg$f2 = function() { return 'THETA' };\n  var peg$f3 = function(number) { return 'List' + number; };\n  var peg$f4 = function() { return 'List' + text().substring(5); };\n  var peg$f5 = function(name) { return { type: types.VARIABLE, name } };\n  var peg$f6 = function(name) { return { type: types.STRINGVARIABLE, name } };\n  var peg$f7 = function(name) { return { type: types.LISTVARIABLE, name, custom: false } };\n  var peg$f8 = function(name) { return { type: types.LISTVARIABLE, name, custom: true } };\n  var peg$f9 = function(list, index) { return { type: types.LISTINDEX, list, index } };\n  var peg$f10 = function(integer, fraction, exponent) { \r\n      return { type: types.NUMBER, integer, fraction, exponent }\r\n    };\n  var peg$f11 = function(fraction, exponent) { \r\n      return { type: types.NUMBER, fraction, exponent }\r\n    };\n  var peg$f12 = function(integer, exponent) { \r\n      return { type: types.NUMBER, integer, exponent }\r\n    };\n  var peg$f13 = function(chars) { return { type: types.STRING, chars } };\n  var peg$f14 = function() { return { type: types.ANS } };\n  var peg$f15 = function() { return { type: types.GetKey } };\n  var peg$f16 = function(head, tail) { return util.buildList(head, tail); };\n  var peg$f17 = function(operator, argument) { return { type: types.UNARY, operator, argument } };\n  var peg$f18 = function(head, tail, end) { return util.buildImplicitBinaryExpression(head, tail, end); };\n  var peg$f19 = function(head, tail) { return util.buildBinaryExpression(head, tail); };\n  var peg$f20 = function() { return { type: types.EmptyStatement } };\n  var peg$f21 = function(value) { return { type: types.ValueStatement, value }};\n  var peg$f22 = function(value, assignable) { return { type: types.AssignmentStatement, value, assignable }};\n  var peg$f23 = function(value, extra) { return { type: types.IfStatement, value, extra }};\n  var peg$f24 = function(extra) { return { type: types.ThenStatement, extra }};\n  var peg$f25 = function(extra) { return { type: types.ElseStatement, extra }};\n  var peg$f26 = function(variable, start, end, step, args, extra) { return { type: types.ForLoop, variable, start, end, step, args, extra }};\n  var peg$f27 = function(value, extra) { return { type: types.WhileLoop, value, extra }};\n  var peg$f28 = function(value, extra) { return { type: types.RepeatLoop, value, extra }};\n  var peg$f29 = function(extra) { return { type: types.EndStatement, extra }};\n  var peg$f30 = function() { return { type: types.PauseStatement }};\n  var peg$f31 = function(location) { return { type: types.LabelStatement, location }};\n  var peg$f32 = function(location) { return { type: types.GotoStatement, location }};\n  var peg$f33 = function(variable, end) { return { type: types.IncrementSkip, variable, end }};\n  var peg$f34 = function(variable, end) { return { type: types.DecrementSkip, variable, end }};\n  var peg$f35 = function(title, options) { return util.buildMenuStatement(title, options); };\n  var peg$f36 = function(name) { return { type: types.ProgramStatement, name }};\n  var peg$f37 = function() { return { type: types.ReturnStatement }};\n  var peg$f38 = function() { return { type: types.StopStatement }};\n  var peg$f39 = function(variable) { return { type: types.DelVarStatement, variable }};\n  var peg$f40 = function(equation, style) { return { type: types.GraphStyleStatement, equation, style }};\n  var peg$f41 = function(name) { return { type: types.OpenLibStatement, name }};\n  var peg$f42 = function(name) { return { type: types.ExecLibStatement, name }};\n  var peg$f43 = function(text, variable) { return { type: types.Input, text, variable } };\n  var peg$f44 = function(variable) { return { type: types.Prompt, variable } };\n  var peg$f45 = function(value) { return { type: types.Display, value } };\n  var peg$f46 = function() { return { type: types.DispGraph } };\n  var peg$f47 = function() { return { type: types.DispTable } };\n  var peg$f48 = function(row, column, value) { return { type: types.Output, row, column, value } };\n  var peg$f49 = function() { return { type: types.ClrHome } };\n  var peg$f50 = function() { return { type: types.ClrTable } };\n  var peg$f51 = function(variable, portflag) { return { type: types.GetCalc, variable, portflag } };\n  var peg$f52 = function(variable) { return { type: types.Get, variable } };\n  var peg$f53 = function(variable) { return { type: types.Send, variable } };\n\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$expected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return [peg$savedPos, peg$currPos];\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  var peg$VALIDFILENAME = typeof options.filename === \"string\" && options.filename.length > 0;\n  function peg$computeLocation(startPos, endPos) {\n    var loc = {};\n\n    if ( peg$VALIDFILENAME ) loc.filename = options.filename;\n\n    var startPosDetails = peg$computePosDetails(startPos);\n    loc.start = {\n      offset: startPos,\n      line: startPosDetails.line,\n      column: startPosDetails.column\n    };\n\n    var endPosDetails = peg$computePosDetails(endPos);\n    loc.end = {\n      offset: endPos,\n      line: endPosDetails.line,\n      column: endPosDetails.column\n    };\n\n    return loc;\n  }\n\n  function peg$begin() {\n    peg$expected.push({ pos: peg$currPos, variants: [] });\n  }\n\n  function peg$expect(expected) {\n    var top = peg$expected[peg$expected.length - 1];\n\n    if (peg$currPos < top.pos) { return; }\n\n    if (peg$currPos > top.pos) {\n      top.pos = peg$currPos;\n      top.variants = [];\n    }\n\n    top.variants.push(expected);\n  }\n\n  function peg$end(invert) {\n    var expected = peg$expected.pop();\n    var top = peg$expected[peg$expected.length - 1];\n    var variants = expected.variants;\n\n    if (top.pos !== expected.pos) { return; }\n\n    if (invert) {\n      variants = variants.map(function(e) {\n        return e.type === \"not\" ? e.expected : { type: \"not\", expected: e };\n      });\n    }\n\n    Array.prototype.push.apply(top.variants, variants);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$buildError() {\n    var expected = peg$expected[0];\n    var failPos = expected.pos;\n\n    return peg$buildStructuredError(\n      expected.variants,\n      failPos < input.length ? input.charAt(failPos) : null,\n      failPos < input.length\n        ? peg$computeLocation(failPos, failPos + 1)\n        : peg$computeLocation(failPos, failPos)\n    );\n  }\n\n  function peg$parseStart() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseStatement();\n\n    return s0;\n  }\n\n  function peg$parseSourceCharacter() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e0);\n    if (input.length > peg$currPos) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAlpha() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e1);\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAlphaNum() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e2);\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDigit() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e3);\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExtraCharacters() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseSourceCharacter();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseSourceCharacter();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f0();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOptionalEndParen() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e4);\n    if (input.charCodeAt(peg$currPos) === 41) {\n      s0 = peg$c0;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = null;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLocation() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAlphaNum();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlphaNum();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f1();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseProgramName() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAlpha();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlphaNum();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseAlphaNum();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseAlphaNum();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseAlphaNum();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = peg$parseAlphaNum();\n      if (s6 === peg$FAILED) {\n        s6 = null;\n      }\n      s7 = peg$parseAlphaNum();\n      if (s7 === peg$FAILED) {\n        s7 = null;\n      }\n      s8 = peg$parseAlphaNum();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f1();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericVariableIdentifier() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseAlpha();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e5);\n      if (input.substr(peg$currPos, 6) === peg$c1) {\n        s1 = peg$c1;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f2();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseStringVariableIdentifier() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e6);\n    if (input.substr(peg$currPos, 3) === peg$c2) {\n      s1 = peg$c2;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseDigit();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f1();\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseListVariableIdentifier() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e7);\n    if (input.substr(peg$currPos, 2) === peg$c3) {\n      s1 = peg$c3;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e8);\n      if (peg$r3.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f3(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCustomListVariableIdentifier() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e9);\n    if (input.substr(peg$currPos, 5) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlpha();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAlphaNum();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$parseAlphaNum();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        s5 = peg$parseAlphaNum();\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s6 = peg$parseAlphaNum();\n        if (s6 === peg$FAILED) {\n          s6 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f4();\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseNumericVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f5(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseStringVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseStringVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f6(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseListVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseListVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f7(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseCustomListVariableIdentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f8(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVariable() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseStringVariable();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNumericVariable();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseListVariable();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseListIndex() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseListVariable();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e10);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c5;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseLogicalExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOptionalEndParen();\n          peg$savedPos = s0;\n          s0 = peg$f9(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAssignable() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseListIndex();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseVariable();\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseDigit();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseDigit();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSignedInteger() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    rule$expects(peg$e11);\n    if (peg$r4.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parseInteger();\n    if (s3 !== peg$FAILED) {\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentIndicator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e12);\n    if (input.substr(peg$currPos, 2) === peg$c6) {\n      s0 = peg$c6;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentPart() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponentIndicator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseSignedInteger();\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericLiteral() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseInteger();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e13);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c7;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseInteger();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$parseExponentPart();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f10(s1, s3, s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e13);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseInteger();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExponentPart();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f11(s2, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseInteger();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseExponentPart();\n          if (s2 === peg$FAILED) {\n            s2 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f12(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacter() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e14);\n    if (peg$r5.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacterString() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseCharacter();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseCharacter();\n    }\n    s0 = input.substring(s0, peg$currPos);\n\n    return s0;\n  }\n\n  function peg$parseStringLiteral() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e15);\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseCharacterString();\n      rule$expects(peg$e15);\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s3 = peg$c8;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f13(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnswer() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e16);\n    if (input.substr(peg$currPos, 3) === peg$c9) {\n      s1 = peg$c9;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f14();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseGetKey() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e17);\n    if (input.substr(peg$currPos, 6) === peg$c10) {\n      s1 = peg$c10;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f15();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseToken() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseAnswer();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseGetKey();\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenLiteral() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseToken();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAssignable();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseStringLiteral();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseListExpression() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e18);\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c11;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseArgumentExpression();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseArgumentExpression();\n        }\n        rule$expects(peg$e19);\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s4 = peg$c12;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f16(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenExpression() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenLiteral();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e10);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c5;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseLogicalExpression();\n        if (s2 !== peg$FAILED) {\n          rule$expects(peg$e4);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c0;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s0 = s2;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseListExpression();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e20);\n    if (input.substr(peg$currPos, 2) === peg$c13) {\n      s0 = peg$c13;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenUnaryExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryOperator();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseTokenUnaryExpression();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f17(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenUnaryExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNumericLiteral();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseUnaryOperator();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseUnaryExpression();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f17(s1, s2);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseImplicitMultiplicativeExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTokenUnaryExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseUnaryExpression();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseTokenUnaryExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseUnaryExpression();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseTokenUnaryExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      s3 = peg$parseUnaryExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f18(s1, s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryExpression();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseTokenUnaryExpression();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseUnaryExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseTokenUnaryExpression();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseUnaryExpression();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        s3 = peg$parseTokenUnaryExpression();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f18(s1, s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseUnaryExpression();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e21);\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s0 = peg$c14;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e22);\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s0 = peg$c15;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseImplicitMultiplicativeExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseMultiplicativeOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseImplicitMultiplicativeExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseMultiplicativeOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseImplicitMultiplicativeExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e23);\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c16;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e24);\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c17;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseMultiplicativeExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseAdditiveOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseMultiplicativeExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseAdditiveOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseMultiplicativeExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e25);\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s0 = peg$c18;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e26);\n      if (input.substr(peg$currPos, 2) === peg$c19) {\n        s0 = peg$c19;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        rule$expects(peg$e27);\n        if (input.substr(peg$currPos, 2) === peg$c20) {\n          s0 = peg$c20;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          rule$expects(peg$e28);\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s0 = peg$c21;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            rule$expects(peg$e29);\n            if (input.substr(peg$currPos, 2) === peg$c22) {\n              s0 = peg$c22;\n              peg$currPos += 2;\n            } else {\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              rule$expects(peg$e30);\n              if (input.charCodeAt(peg$currPos) === 60) {\n                s0 = peg$c23;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAdditiveExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseTestOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseAdditiveExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseTestOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseAdditiveExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLogicalOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e31);\n    if (input.substr(peg$currPos, 5) === peg$c24) {\n      s0 = peg$c24;\n      peg$currPos += 5;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e32);\n      if (input.substr(peg$currPos, 4) === peg$c25) {\n        s0 = peg$c25;\n        peg$currPos += 4;\n      } else {\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        rule$expects(peg$e33);\n        if (input.substr(peg$currPos, 5) === peg$c26) {\n          s0 = peg$c26;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLogicalExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseLogicalOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseTestExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseLogicalOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseTestExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseArgumentExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e34);\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s1 = peg$c27;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrefixArgumentExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseLogicalExpression();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e34);\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s2 = peg$c27;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExtraArguments() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseArgumentExpression();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseArgumentExpression();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f0();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseEmptyStatement() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$begin();\n    s2 = peg$parseSourceCharacter();\n    peg$end(true);\n    if (s2 === peg$FAILED) {\n      s1 = undefined;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f20();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseValueStatement() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseLogicalExpression();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f21(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseAssignment() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseLogicalExpression();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e35);\n      if (input.substr(peg$currPos, 2) === peg$c28) {\n        s2 = peg$c28;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAssignable();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f22(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIfStatement() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e36);\n    if (input.substr(peg$currPos, 3) === peg$c29) {\n      s1 = peg$c29;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f23(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseThen() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e37);\n    if (input.substr(peg$currPos, 4) === peg$c30) {\n      s1 = peg$c30;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f24(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseElse() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e38);\n    if (input.substr(peg$currPos, 4) === peg$c31) {\n      s1 = peg$c31;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f25(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFor() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e39);\n    if (input.substr(peg$currPos, 4) === peg$c32) {\n      s1 = peg$c32;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseArgumentExpression();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseArgumentExpression();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = peg$parseExtraArguments();\n      if (s6 === peg$FAILED) {\n        s6 = null;\n      }\n      s7 = peg$parseOptionalEndParen();\n      s8 = peg$parseExtraCharacters();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f26(s2, s3, s4, s5, s6, s8);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseWhile() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e40);\n    if (input.substr(peg$currPos, 6) === peg$c33) {\n      s1 = peg$c33;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f27(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseRepeat() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e41);\n    if (input.substr(peg$currPos, 7) === peg$c34) {\n      s1 = peg$c34;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f28(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEnd() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e42);\n    if (input.substr(peg$currPos, 3) === peg$c35) {\n      s1 = peg$c35;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f29(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePause() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e43);\n    if (input.substr(peg$currPos, 5) === peg$c36) {\n      s1 = peg$c36;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f30();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseLabel() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e44);\n    if (input.substr(peg$currPos, 4) === peg$c37) {\n      s1 = peg$c37;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f31(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGoto() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e45);\n    if (input.substr(peg$currPos, 5) === peg$c38) {\n      s1 = peg$c38;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f32(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIncrementSkip() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e46);\n    if (input.substr(peg$currPos, 4) === peg$c39) {\n      s1 = peg$c39;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f33(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDecrementSkip() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e47);\n    if (input.substr(peg$currPos, 4) === peg$c40) {\n      s1 = peg$c40;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f34(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMenu() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e48);\n    if (input.substr(peg$currPos, 5) === peg$c41) {\n      s1 = peg$c41;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$currPos;\n      rule$expects(peg$e34);\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s5 = peg$c27;\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$parseStringLiteral();\n        if (s6 !== peg$FAILED) {\n          rule$expects(peg$e34);\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s7 = peg$c27;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parseLocation();\n            if (s8 !== peg$FAILED) {\n              s5 = [s5, s6, s7, s8];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$currPos;\n        rule$expects(peg$e34);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c27;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseStringLiteral();\n          if (s6 !== peg$FAILED) {\n            rule$expects(peg$e34);\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s7 = peg$c27;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseLocation();\n              if (s8 !== peg$FAILED) {\n                s5 = [s5, s6, s7, s8];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f35(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseProgram() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e49);\n    if (input.substr(peg$currPos, 4) === peg$c42) {\n      s1 = peg$c42;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f36(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseReturn() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e50);\n    if (input.substr(peg$currPos, 6) === peg$c43) {\n      s1 = peg$c43;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f37();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseStop() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e51);\n    if (input.substr(peg$currPos, 4) === peg$c44) {\n      s1 = peg$c44;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f38();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDelVar() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e52);\n    if (input.substr(peg$currPos, 7) === peg$c45) {\n      s1 = peg$c45;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f39(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGraphStyle() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e53);\n    if (input.substr(peg$currPos, 11) === peg$c46) {\n      s1 = peg$c46;\n      peg$currPos += 11;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f40(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOpenLib() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e54);\n    if (input.substr(peg$currPos, 8) === peg$c47) {\n      s1 = peg$c47;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOptionalEndParen();\n        peg$savedPos = s0;\n        s0 = peg$f41(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExecLib() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e55);\n    if (input.substr(peg$currPos, 8) === peg$c48) {\n      s1 = peg$c48;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOptionalEndParen();\n        peg$savedPos = s0;\n        s0 = peg$f42(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCtlStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseIfStatement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseThen();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseElse();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFor();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseWhile();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseRepeat();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseEnd();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsePause();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseLabel();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseGoto();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseIncrementSkip();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parseDecrementSkip();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parseMenu();\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parseProgram();\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$parseReturn();\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$parseStop();\n                                  if (s0 === peg$FAILED) {\n                                    s0 = peg$parseDelVar();\n                                    if (s0 === peg$FAILED) {\n                                      s0 = peg$parseGraphStyle();\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$parseOpenLib();\n                                        if (s0 === peg$FAILED) {\n                                          s0 = peg$parseExecLib();\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInput() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e56);\n    if (input.substr(peg$currPos, 6) === peg$c49) {\n      s1 = peg$c49;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsePrefixArgumentExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseVariable();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f43(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrompt() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e57);\n    if (input.substr(peg$currPos, 7) === peg$c50) {\n      s1 = peg$c50;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f44(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDisplay() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e58);\n    if (input.substr(peg$currPos, 5) === peg$c51) {\n      s1 = peg$c51;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f45(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDispGraph() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e59);\n    if (input.substr(peg$currPos, 9) === peg$c52) {\n      s1 = peg$c52;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f46();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDispTable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e60);\n    if (input.substr(peg$currPos, 9) === peg$c53) {\n      s1 = peg$c53;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f47();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOutput() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e61);\n    if (input.substr(peg$currPos, 7) === peg$c54) {\n      s1 = peg$c54;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicalExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseArgumentExpression();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f48(s2, s3, s4);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseClrHome() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e62);\n    if (input.substr(peg$currPos, 7) === peg$c55) {\n      s1 = peg$c55;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f49();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseClrTable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e63);\n    if (input.substr(peg$currPos, 8) === peg$c56) {\n      s1 = peg$c56;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f50();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseGetCalc() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e64);\n    if (input.substr(peg$currPos, 8) === peg$c57) {\n      s1 = peg$c57;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f51(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGet() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e65);\n    if (input.substr(peg$currPos, 4) === peg$c58) {\n      s1 = peg$c58;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f52(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSend() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e66);\n    if (input.substr(peg$currPos, 5) === peg$c59) {\n      s1 = peg$c59;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f53(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIoStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseInput();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePrompt();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseDisplay();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseDispGraph();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseDispTable();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseOutput();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseClrHome();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseClrTable();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseGetCalc();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseGet();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseSend();\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseEmptyStatement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAssignment();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseCtlStatement();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseIoStatement();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseValueStatement();\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n\r\n    const types = require ('../common/types');\r\n    const util = require ('./pegutil');\r\n\n\n  peg$begin();\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$expect(peg$endExpectation());\n    }\n\n    throw peg$buildError();\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n","// types\r\n// =====\r\n\r\n// ----- Errors -----\r\n\r\nexport const ti = 'ti'\r\nexport const lib = 'lib'\r\nexport const SyntaxError = 'SyntaxError'\r\n\r\n// ----- Values -----\r\n\r\nexport const NUMBER = 'number'\r\nexport const LIST = 'list'\r\nexport const STRING = 'string'\r\n\r\n// ----- Tokens -----\r\n\r\nexport const ANS = 'ans'\r\nexport const GetKey = 'GetKey'\r\n\r\n// ----- Variables -----\r\n\r\nexport const VARIABLE = 'variable'\r\nexport const STRINGVARIABLE = 'stringVariable'\r\nexport const LISTVARIABLE = 'listVariable'\r\nexport const LISTINDEX = 'listIndex'\r\n\r\n// ----- Expressions -----\r\n\r\nexport const BINARY = 'binary'\r\nexport const UNARY = 'unary'\r\n\r\n// ----- Statements -----\r\n\r\nexport const EmptyStatement = 'empty'\r\nexport const ValueStatement = 'value'\r\nexport const AssignmentStatement = 'assign'\r\n\r\n// ----- CTL -----\r\n\r\nexport const IfStatement = 'IfStatement'\r\nexport const ThenStatement = 'ThenStatement'\r\nexport const ElseStatement = 'ElseStatement'\r\nexport const ForLoop = 'ForLoop'\r\nexport const WhileLoop = 'WhileLoop'\r\nexport const RepeatLoop = 'RepeatLoop'\r\nexport const EndStatement = 'EndStatement'\r\nexport const PauseStatement = 'PauseStatement'\r\nexport const LabelStatement = 'LabelStatement'\r\nexport const GotoStatement = 'GotoStatement'\r\nexport const IncrementSkip = 'IncrementSkip'\r\nexport const DecrementSkip = 'DecrementSkip'\r\nexport const MenuStatement = 'MenuStatement'\r\nexport const ProgramStatement = 'ProgramStatement'\r\nexport const ReturnStatement = 'ReturnStatement'\r\nexport const StopStatement = 'StopStatement'\r\nexport const DelVarStatement = 'DelVarStatement'\r\nexport const GraphStyleStatement = 'GraphStyleStatement'\r\nexport const OpenLibStatement = 'OpenLibStatement'\r\nexport const ExecLibStatement = 'ExecLibStatement'\r\n\r\n// ----- I/O -----\r\n\r\nexport const Input = 'Input'\r\nexport const Prompt = 'Prompt'\r\nexport const Display = 'display'\r\nexport const DispGraph = 'DispGraph'\r\nexport const DispTable = 'DispTable'\r\nexport const Output = 'Output'\r\nexport const ClrHome = 'ClrHome'\r\nexport const ClrTable = 'ClrTable'\r\nexport const GetCalc = 'GetCalc'\r\nexport const Get = 'Get'\r\nexport const Send = 'Send'\r\n","// pegutil\r\n// =======\r\n\r\nimport * as types from '../common/types'\r\n\r\nexport function buildBinaryExpression (head, tail) {\r\n  return tail.reduce(function (result, element) {\r\n\r\n    return {\r\n      type: types.BINARY,\r\n      operator: element[0],\r\n      left: result,\r\n      right: element[1]\r\n    }\r\n  }, head)\r\n}\r\n\r\nexport function buildImplicitBinaryExpression (head, tail, end) {\r\n  \r\n  const list = tail.flat()\r\n  if (end !== null) {\r\n    list.push(end)\r\n  }\r\n  return list.reduce(function (result, element) {\r\n    return {\r\n      type: types.BINARY,\r\n      operator: '*',\r\n      left: result,\r\n      right: element\r\n    }\r\n  }, head)\r\n}\r\n\r\nexport function buildMenuStatement (title, options) {\r\n  const choices = options.map(function (element) {\r\n    return {\r\n      option: element[1],\r\n      location: element[3]\r\n    }\r\n  })\r\n  return {\r\n    type: types.MenuStatement,\r\n    title,\r\n    choices\r\n  }\r\n}\r\n\r\nexport function buildList (head, tail) {\r\n  return {\r\n    type: types.LIST,\r\n    elements: [head].concat(tail)\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// core\r\n// ====\r\n\r\nimport * as types from './types'\r\n\r\nfunction error (type, code, hideSource = false) {\r\n  return {\r\n    type: type,\r\n    code: code,\r\n    hideSource: hideSource\r\n  }\r\n}\r\n\r\nfunction tiError (code, hideSource = false) {\r\n  return error(types.ti, code, hideSource)\r\n}\r\n\r\nexport const DataTypeError = tiError('DATA TYPE')\r\nexport const SyntaxError = tiError('SYNTAX')\r\nexport const UndefinedError = tiError('UNDEFINED')\r\nexport const LabelError = tiError('LABEL')\r\nexport const ArgumentError = tiError('ARGUMENT')\r\nexport const DimMismatchError = tiError('DIM MISMATCH')\r\nexport const DivideByZeroError = tiError('DIVIDE BY 0')\r\nexport const InvalidDimError = tiError('INVALID DIM')\r\nexport const DomainError = tiError('DOMAIN')\r\n\r\nexport function libError (code, hideSource = false) {\r\n  return error(types.lib, code, hideSource)\r\n}\r\n\r\nexport const UnimplementedError = libError('unimplemented')\r\n\r\nexport function newMem () {\r\n  return {\r\n    vars: {},\r\n    ans: newFloat()\r\n  }\r\n}\r\n\r\nexport function newFloat (value = 0) {\r\n  return { type: types.NUMBER, float: value }\r\n}\r\n\r\nexport const ONE = newFloat(1)\r\n\r\nexport const MINUSONE = newFloat(-1)\r\n","// signal\r\n// ======\r\n\r\nexport const YIELD = 'yield'\r\nexport const DONE = 'done'\r\nexport const FAULTED = 'faulted'\r\nexport const SUSPEND = 'suspend'\r\n","// parser\r\n// ======\r\n\r\nimport * as types from '../common/types'\r\nimport pegJsParser from './tibasic.pegjs'\r\n\r\nexport function parse (source, options = {}) {\r\n  if (source === undefined) {\r\n    throw new Error('Undefined source!')\r\n  }\r\n\r\n  const sourceMap = options.sourceMap || 'inline'\r\n\r\n  // TODO:\r\n  // * Allow multiple statements per line with ':'\r\n  const sourceLines = source.split(/\\r?\\n/)\r\n  const parsedLines = sourceLines.map(s => {\r\n    let parsedLine\r\n    try {\r\n      parsedLine = pegJsParser.parse(s)\r\n    } catch (error) {\r\n      if (error.name === 'SyntaxError') {\r\n        parsedLine = { type: 'SyntaxError' }\r\n      } else {\r\n        throw error\r\n      }\r\n    }\r\n    if (sourceMap === 'inline') {\r\n      parsedLine.source = s\r\n    }\r\n    return parsedLine\r\n  })\r\n\r\n  return parsedLines\r\n}\r\n\r\nexport function parseExpression (source) {\r\n  if (source === undefined) {\r\n    throw new Error('Undefined source!')\r\n  }\r\n\r\n  const sourceLines = source.split(/\\r?\\n/)\r\n  if (sourceLines.Length > 1) {\r\n    throw new Error('Too many lines for an expression')\r\n  }\r\n  const sourceLine = sourceLines[0]\r\n  let parsedLine\r\n  try {\r\n    parsedLine = pegJsParser.parse(sourceLine)\r\n  } catch (error) {\r\n    if (error.name !== 'SyntaxError') {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  return parsedLine !== undefined && parsedLine.type === types.ValueStatement ? parsedLine.value : { type: 'SyntaxError' }\r\n}\r\n","// operation\r\n// =========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\n\r\nexport function isTruthy (value) {\r\n  if (value.type === types.NUMBER) {\r\n    return value.float !== 0\r\n  }\r\n  throw core.DataTypeError\r\n}\r\n\r\nexport function assignVariable (mem, variable, value) {\r\n  if (variable.type === types.STRINGVARIABLE) {\r\n    if (value.type !== types.STRING) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else if (variable.type === types.VARIABLE) {\r\n    if (value.type !== types.NUMBER) {\r\n      return\r\n    }\r\n  } else if (variable.type === types.LISTVARIABLE) {\r\n    if (value.type !== types.LIST) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else if (variable.type === types.LISTINDEX) {\r\n    if (value.type !== types.LIST) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else {\r\n    throw core.libError('unexpected variable type')\r\n  }\r\n  mem.vars[variable.name] = value\r\n}\r\n\r\nexport function deleteVariable (mem, variable) {\r\n  delete mem.vars[variable.name]\r\n}\r\n\r\nexport function hasVariable (mem, variable) {\r\n  return variable.name in mem.vars\r\n}\r\n\r\nexport function assignAns (mem, value) {\r\n  mem.ans = value\r\n}\r\n\r\nexport function binaryOperation (left, operator, right) {\r\n  return {\r\n    type: types.BINARY,\r\n    operator,\r\n    left,\r\n    right\r\n  }\r\n}\r\n\r\nexport function resolveNumber (value) {\r\n  let str = ''\r\n  if (value.integer !== undefined && value.integer !== null) {\r\n    str += value.integer\r\n  }\r\n  if (value.fraction !== undefined && value.fraction !== null) {\r\n    str += '.' + value.fraction\r\n  }\r\n  if (value.exponent !== undefined && value.exponent !== null) {\r\n    str += 'e' + value.exponent\r\n  }\r\n  return parseFloat(str)\r\n}\r\n\r\nexport function variableToString (variable) {\r\n  let str = variable.name\r\n  switch (variable.type) {\r\n    case types.VARIABLE:\r\n    case types.STRINGVARIABLE:\r\n      break\r\n    case types.LISTVARIABLE:\r\n      str = str.substring(4)\r\n      if (!variable.custom) {\r\n        str = `&L${str}`\r\n      }\r\n      break\r\n    default:\r\n      throw core.libError('unexpected variable tostring')\r\n  }\r\n  return str\r\n}\r\n\r\nexport function valueToString (value, strict = false) {\r\n  if (strict && value.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  let str = ''\r\n  switch (value.type) {\r\n    case types.NUMBER:\r\n      str = value.float.toString()\r\n      if (str.startsWith('0.')) {\r\n        str = str.substring(1)\r\n      }\r\n      break\r\n    case types.STRING:\r\n      str = value.chars\r\n      break\r\n    case types.LIST:\r\n      str = '{' + value.elements.map(e => valueToString(e)).join(' ') + '}'\r\n      break\r\n    default:\r\n      throw core.libError('unexpected value tostring')\r\n  }\r\n  return str\r\n}\r\n\r\nexport function parseDigit (str) {\r\n  if (str === undefined || str === null || str === '' || str.length > 1) {\r\n    return\r\n  }\r\n  const digit = str.charCodeAt(0) - '0'.charCodeAt(0)\r\n  if (digit < 0 || digit > 9) {\r\n    return\r\n  }\r\n  return digit\r\n}\r\n","// expression\r\n// ==========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\nimport * as operation from './operation'\r\n\r\nexport function evaluate (value, mem) {\r\n  const behavior = expressionOf[value.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected value')\r\n  }\r\n  return behavior(value, mem)\r\n}\r\n\r\nconst expressionOf = {}\r\n\r\n// ----- Expressions -----\r\n\r\nexpressionOf[types.SyntaxError] = (value, mem) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\n// ----- Values -----\r\n\r\nexpressionOf[types.NUMBER] = (value, mem) => {\r\n  if (value.float !== undefined) {\r\n    return value\r\n  }\r\n  return {\r\n    type: types.NUMBER,\r\n    float: operation.resolveNumber(value)\r\n  }\r\n}\r\n\r\nexpressionOf[types.STRING] = (value, mem) => {\r\n  return value\r\n}\r\n\r\nexpressionOf[types.LIST] = (value, mem) => {\r\n  if (value.resolved === true) {\r\n    return value\r\n  }\r\n  return {\r\n    type: types.LIST,\r\n    elements: value.elements.map(function (element) {\r\n      const result = evaluate(element, mem)\r\n      if (result.type !== types.NUMBER) {\r\n        // TODO: a list of lists should be a syntax error\r\n        // However, a list of list variables should still be a data type error\r\n        // Distinguishing them here is hard - should be done in grammar?\r\n        throw core.DataTypeError\r\n      }\r\n      return result\r\n    }),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Variables -----\r\n\r\nexpressionOf[types.VARIABLE] = (value, mem) => {\r\n  let result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    result = mem.vars[value.name] = core.newFloat()\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.STRINGVARIABLE] = (value, mem) => {\r\n  const result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    throw core.UndefinedError\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.LISTVARIABLE] = (value, mem) => {\r\n  const result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    throw core.UndefinedError\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.LISTINDEX] = (value, mem) => {\r\n  const list = evaluate(value.list, mem)\r\n  const index = evaluate(value.index, mem)\r\n  if (index.type !== types.NUMBER) {\r\n    throw core.InvalidDimError\r\n  }\r\n  if (index.float < 1 || index.float > list.elements.length) {\r\n    throw core.InvalidDimError\r\n  }\r\n  return {\r\n    type: types.NUMBER,\r\n    float: list.elements[index.float - 1].float\r\n  }\r\n}\r\n\r\n// ----- Tokens -----\r\n\r\nexpressionOf[types.ANS] = (value, mem) => {\r\n  return mem.ans\r\n}\r\n\r\nexpressionOf[types.GetKey] = (value, mem) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- Operators -----\r\n\r\nexpressionOf[types.UNARY] = (value, mem) => {\r\n  const argument = evaluate(value.argument, mem)\r\n  const behavior = unaryOf[argument.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected unary argument')\r\n  }\r\n  return behavior(value.operator, argument)\r\n}\r\n\r\nexpressionOf[types.BINARY] = (value, mem) => {\r\n  const left = evaluate(value.left, mem)\r\n  const right = evaluate(value.right, mem)\r\n  const behavior = binaryOf[left.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected binary left')\r\n  }\r\n  return behavior(value.operator, left, right)\r\n}\r\n\r\n// ----- Unary -----\r\n\r\nconst unaryOf = {}\r\n\r\nunaryOf[types.NUMBER] = (operator, argument) => {\r\n  return { type: types.NUMBER, float: applyUnaryOperation(operator, argument.float) }\r\n}\r\n\r\nunaryOf[types.STRING] = (operator, argument) => {\r\n  throw core.DataTypeError\r\n}\r\n\r\nunaryOf[types.LIST] = (operator, argument) => {\r\n  return {\r\n    type: types.LIST,\r\n    elements: argument.elements.map(e => ({ type: types.NUMBER, float: applyUnaryOperation(operator, e.float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Binary -----\r\n\r\nconst binaryOf = {}\r\n\r\nbinaryOf[types.NUMBER] = (operator, left, right) => {\r\n  if (right.type !== types.NUMBER) {\r\n    if (right.type === types.LIST) {\r\n      return applyBinaryOperationListAndNumber(operator, right, left)\r\n    }\r\n    throw core.DataTypeError\r\n  }\r\n  return { type: types.NUMBER, float: applyBinaryOperation(operator, left.float, right.float) }\r\n}\r\n\r\nbinaryOf[types.STRING] = (operator, left, right) => {\r\n  if (right.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (['+'].includes(operator)) {\r\n    return { type: types.STRING, chars: applyBinaryOperation(operator, left.chars, right.chars) }\r\n  }\r\n  if (['=', '!='].includes(operator)) {\r\n    return { type: types.NUMBER, float: applyBinaryOperation(operator, left.chars, right.chars) }\r\n  }\r\n  throw core.DataTypeError\r\n}\r\n\r\nbinaryOf[types.LIST] = (operator, left, right) => {\r\n  if (right.type !== types.LIST) {\r\n    if (right.type === types.NUMBER) {\r\n      return applyBinaryOperationListAndNumber(operator, left, right)\r\n    }\r\n    throw core.DataTypeError\r\n  }\r\n  if (left.elements.length !== right.elements.length) {\r\n    throw core.DimMismatchError\r\n  }\r\n  return {\r\n    type: types.LIST,\r\n    elements: left.elements.map((e, i) => ({ type: types.NUMBER, float: applyBinaryOperation(operator, e.float, right.elements[i].float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Helper -----\r\n\r\nfunction applyBinaryOperationListAndNumber (operator, list, number) {\r\n  return {\r\n    type: types.LIST,\r\n    elements: list.elements.map((e, i) => ({ type: types.NUMBER, float: applyBinaryOperation(operator, e.float, number.float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\nfunction applyUnaryOperation (operator, x) {\r\n  switch (operator) {\r\n    case '&-': return x * -1\r\n    default: throw core.libError('unexpected unary operator')\r\n  }\r\n}\r\n\r\nfunction applyBinaryOperation (operator, x, y) {\r\n  if (operator === '/' && y === 0) {\r\n    throw core.DivideByZeroError\r\n  }\r\n  switch (operator) {\r\n    case '+': return x + y\r\n    case '-': return x - y\r\n    case '*': return x * y\r\n    case '/': return x / y\r\n    case '=': return x === y ? 1 : 0\r\n    case '!=': return x !== y ? 1 : 0\r\n    case '>=': return x >= y ? 1 : 0\r\n    case '>': return x > y ? 1 : 0\r\n    case '<=': return x <= y ? 1 : 0\r\n    case '<': return x < y ? 1 : 0\r\n    case ' and ': return x && y ? 1 : 0\r\n    case ' or ': return x || y ? 1 : 0\r\n    case ' xor ': return (!x && y) || (x && !y) ? 1:0\r\n    default: throw core.libError('unexpected binary operator')\r\n  }\r\n}\r\n","// assignment\r\n// ==========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\nimport * as expression from './expression'\r\n\r\nexport function evaluate (assignable, value, mem) {\r\n  const behavior = assignmentOf[assignable.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected assignable type')\r\n  }\r\n  return behavior(assignable, value, mem)\r\n}\r\n\r\nconst assignmentOf = {}\r\n\r\n// ----- Statements -----\r\n\r\nassignmentOf[types.VARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.NUMBER) {\r\n    return\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.STRINGVARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.LISTVARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.LIST) {\r\n    throw core.DataTypeError\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.LISTINDEX] = (assignable, value, mem) => {\r\n  const list = expression.evaluate(assignable.list, mem)\r\n  const index = expression.evaluate(assignable.index, mem)\r\n  if (index.type !== types.NUMBER) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (index.float < 1 || index.float > list.elements.length) {\r\n    throw core.InvalidDimError\r\n  }\r\n  mem.vars[assignable.list.name].elements[index.float - 1] = value\r\n}\r\n","// iolib\r\n// =====\r\n\r\nimport * as types from '../common/types'\r\n\r\nconst enterkey = 13\r\n\r\nexport function elemOutput(elem) {\r\n  return (value, newline) => {\r\n    setTimeout(() => {\r\n      let result = elem.val() + value\r\n      if (newline) {\r\n        result += '\\n'\r\n      }\r\n      elem.val(result)\r\n    }, 0)\r\n  }\r\n}\r\n\r\nexport function stdout (value, options = {}, newline = true) {\r\n  if (options.output === undefined) {\r\n    console.log(value)\r\n    return\r\n  }\r\n  options.output(value, newline);\r\n}\r\n\r\nexport function stderr (ex, options = {}) {\r\n  if ((ex.type === types.ti && !options.includeErrors) ||\r\n      (ex.type === types.lib && !options.includeLibErrors)) {\r\n    console.log(ex)\r\n    return\r\n  }\r\n  let value = ''\r\n  if (ex.type === types.ti) {\r\n    value += 'ERR:'\r\n  } else if (ex.type === types.lib) {\r\n    value += 'Error: '\r\n  } else {\r\n    value += 'Unexpected: '\r\n  }\r\n  value += ex.code\r\n  if (options.includeLineNumbers && ex.source !== undefined && ex.source.index !== undefined) {\r\n    value += ` on line ${ex.source.index}`\r\n  }\r\n  if (options.includeSource && ex.source !== undefined && ex.source.line !== undefined) {\r\n    value += ` :${ex.source.line}`\r\n  }\r\n  stdout(value, options)\r\n}\r\n\r\nexport function onStdin (callback, options = {}) {\r\n  if (options.stdin !== undefined && options.stdin !== '' && options.stdinQueue === undefined) {\r\n    options.stdinQueue = options.stdin.split('\\n').reverse()\r\n  }\r\n  if (options.stdinQueue !== undefined) {\r\n    setTimeout(() => {\r\n      const result = options.stdinQueue.pop()\r\n      if (callback(result) === true) {\r\n        onStdin(callback, options)\r\n      }\r\n    }, 0)\r\n    return\r\n  }\r\n  if (options.input === undefined) {\r\n    setTimeout(() => {\r\n      if (callback(prompt('Input?')) === true) {\r\n        onStdin(callback, options)\r\n      }\r\n    }, 100)\r\n    return\r\n  }\r\n  setTimeout(() => options.input.val(''), 0)\r\n  options.input.on('keypress', e => {\r\n    if (e.keyCode === enterkey) {\r\n      const result = options.input.val()\r\n      setTimeout(() => options.input.val(''), 0)\r\n      if (callback(result) !== true) {\r\n        options.input.off('keypress')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport function cleanup (options = {}) {\r\n  if (options.input !== undefined) {\r\n    options.input.off('keypress')\r\n  }\r\n}\r\n","// statement\r\n// =========\r\n\r\nimport * as core from '../common/core'\r\nimport * as signal from '../common/signal'\r\nimport * as types from '../common/types'\r\nimport * as parser from '../parse/parser'\r\nimport * as operation from './operation'\r\nimport * as expression from './expression'\r\nimport * as assignment from './assignment'\r\nimport * as iolib from './iolib'\r\n\r\nexport function evaluate (line, state) {\r\n  const behavior = statementOf[line.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected')\r\n  }\r\n  return behavior(line, state)\r\n}\r\n\r\nconst statementOf = {}\r\n\r\n// ----- Statements -----\r\n\r\nstatementOf[types.EmptyStatement] = (line, state) => {\r\n  // do nothing\r\n}\r\n\r\nstatementOf[types.AssignmentStatement] = (line, state) => {\r\n  const value = expression.evaluate(line.value, state.mem)\r\n  assignment.evaluate(line.assignable, value, state.mem)\r\n  operation.assignAns(state.mem, value)\r\n}\r\n\r\nstatementOf[types.ValueStatement] = (line, state) => {\r\n  operation.assignAns(state.mem, expression.evaluate(line.value, state.mem))\r\n}\r\n\r\nstatementOf[types.SyntaxError] = (line, state) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\n// ----- CTL -----\r\n\r\nstatementOf[types.IfStatement] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.ifResult = operation.isTruthy(expression.evaluate(line.value, state.mem))\r\n}\r\n\r\nstatementOf[types.ThenStatement] = (line, state) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\nstatementOf[types.ElseStatement] = (line, state) => {\r\n  if (state.blockStack.length === 0) {\r\n    throw core.SyntaxError\r\n  }\r\n  if (state.lines[state.blockStack.pop()].type === types.ThenStatement) {\r\n    state.blockStack.push(state.i)\r\n    state.falsyStackHeight = state.blockStack.length\r\n  } else {\r\n    throw core.SyntaxError\r\n  }\r\n}\r\n\r\nstatementOf[types.ForLoop] = (line, state) => {\r\n  if (line.variable === null || line.start === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  operation.assignVariable(state.mem, line.variable, expression.evaluate(line.start, state.mem))\r\n  state.blockStack.push(state.i)\r\n  if (!operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '<=', line.end), state.mem))) {\r\n    state.falsyStackHeight = state.blockStack.length\r\n  }\r\n}\r\n\r\nstatementOf[types.WhileLoop] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.blockStack.push(state.i)\r\n  if (!operation.isTruthy(expression.evaluate(line.value, state.mem))) {\r\n    state.falsyStackHeight = state.blockStack.length\r\n  }\r\n}\r\n\r\nstatementOf[types.RepeatLoop] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.blockStack.push(state.i)\r\n}\r\n\r\nstatementOf[types.EndStatement] = (line, state) => {\r\n  if (state.blockStack.length === 0) {\r\n    throw core.SyntaxError\r\n  }\r\n  const source = state.blockStack.pop()\r\n  const sourceLine = state.lines[source]\r\n  if (sourceLine.type === types.ForLoop ||\r\n              sourceLine.type === types.WhileLoop ||\r\n              sourceLine.type === types.RepeatLoop) {\r\n    if (sourceLine.type === types.ForLoop) {\r\n      increment(state.mem, sourceLine.variable, sourceLine.step !== null ? sourceLine.step : core.ONE)\r\n      if (operation.isTruthy(expression.evaluate(operation.binaryOperation(sourceLine.variable, '<=', sourceLine.end), state.mem))) {\r\n        state.blockStack.push(source)\r\n        state.i = source\r\n      }\r\n    } else if (operation.isTruthy(expression.evaluate(sourceLine.value, state.mem))) {\r\n      state.blockStack.push(source)\r\n      state.i = source\r\n    }\r\n  } else if (sourceLine.type === types.ThenStatement ||\r\n                  sourceLine.type === types.ElseStatement) {\r\n    // empty\r\n  } else {\r\n    throw core.libError(`impossibleEndFrom'${sourceLine.type}`)\r\n  }\r\n}\r\n\r\nstatementOf[types.PauseStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.LabelStatement] = (line, state) => {\r\n}\r\n\r\nstatementOf[types.GotoStatement] = (line, state) => {\r\n  state.searchLabel = line.location\r\n  state.i = -1\r\n}\r\n\r\nstatementOf[types.IncrementSkip] = (line, state) => {\r\n  if (line.variable === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  increment(state.mem, line.variable, core.ONE)\r\n  state.incrementDecrementResult = operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '<=', line.end), state.mem))\r\n}\r\n\r\nstatementOf[types.DecrementSkip] = (line, state) => {\r\n  if (line.variable === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  increment(state.mem, line.variable, core.MINUSONE)\r\n  state.incrementDecrementResult = operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '>=', line.end), state.mem))\r\n}\r\n\r\nstatementOf[types.MenuStatement] = (line, state) => {\r\n  if (line.title === null || line.choices.length === 0 || line.choices.length > 7) {\r\n    throw core.ArgumentError\r\n  }\r\n  iolib.stdout(operation.valueToString(expression.evaluate(line.title, state.mem), true), state.io)\r\n  line.choices.forEach((choice, idx) => {\r\n    iolib.stdout(`${idx + 1}:${operation.valueToString(choice.option)}`, state.io)\r\n  })\r\n  iolib.onStdin(input => {\r\n    const digit = operation.parseDigit(input)\r\n    if (digit === undefined || digit === 0 || digit > line.choices.length) {\r\n      return true\r\n    }\r\n    state.searchLabel = line.choices[digit - 1].location\r\n    state.i = 0\r\n    state.resume()\r\n  }, state.io)\r\n  return signal.SUSPEND\r\n}\r\n\r\nstatementOf[types.ProgramStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ReturnStatement] = (line, state) => {\r\n  // TODO interaction with subprograms\r\n  return signal.DONE\r\n}\r\n\r\nstatementOf[types.StopStatement] = (line, state) => {\r\n  return signal.DONE\r\n}\r\n\r\nstatementOf[types.DelVarStatement] = (line, state) => {\r\n  if (line.variable === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  operation.deleteVariable(state.mem, line.variable)\r\n}\r\n\r\nstatementOf[types.GraphStyleStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.OpenLibStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ExecLibStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- I/O -----\r\n\r\nstatementOf[types.Display] = (line, state) => {\r\n  if (line.value !== null) {\r\n    iolib.stdout(operation.valueToString(expression.evaluate(line.value, state.mem)), state.io)\r\n  }\r\n}\r\n\r\nstatementOf[types.Input] = (line, state) => {\r\n  if (line.variable === null) {\r\n    if (line.text !== null) {\r\n      throw core.ArgumentError\r\n    }\r\n    throw core.UnimplementedError\r\n  }\r\n  let text = '?'\r\n  if (line.text !== null) {\r\n    text = operation.valueToString(expression.evaluate(line.text, state.mem), true)\r\n  }\r\n  return getInput(text, line.variable, state, true)\r\n}\r\n\r\nstatementOf[types.Prompt] = (line, state) => {\r\n  if (line.variable === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  const text = operation.variableToString(line.variable)\r\n  return getInput(`${text}=?`, line.variable, state, false)\r\n}\r\n\r\nstatementOf[types.DispGraph] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.DispTable] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Output] = (line, state) => {\r\n  if (line.row === null || line.column === null || line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  const row = expression.evaluate(line.row, state.mem)\r\n  const column = expression.evaluate(line.column, state.mem)\r\n  if (row.type !== types.NUMBER || column.type !== types.NUMBER) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (row.float < 1 || row.float > state.rows || column.float < 1 || column.float > state.columns) {\r\n    throw core.DomainError\r\n  }\r\n  // TODO: respect rows and columns\r\n  iolib.stdout(operation.valueToString(expression.evaluate(line.value, state.mem)), state.io)\r\n}\r\n\r\nstatementOf[types.ClrHome] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ClrTable] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.GetCalc] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Get] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Send] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- Helpers -----\r\n\r\nfunction increment (mem, variable, step) {\r\n  if (!operation.hasVariable(mem, variable)) {\r\n    throw core.UndefinedError\r\n  }\r\n  operation.assignVariable(mem, variable, expression.evaluate({\r\n    type: types.BINARY,\r\n    operator: '+',\r\n    left: variable,\r\n    right: step\r\n  }, mem), mem)\r\n}\r\n\r\nfunction getInput (text, variable, state, allowStringLiterals) {\r\n  iolib.stdout(text, state.io, false)\r\n  iolib.onStdin(input => {\r\n    if (input === null || input === undefined || input === '') {\r\n      return true\r\n    }\r\n    state.resume(() => {\r\n      iolib.stdout(input, state.io)\r\n\r\n      let value\r\n      if (variable.type === types.STRINGVARIABLE && allowStringLiterals) {\r\n        value = { type: types.STRING, chars: input }\r\n      } else {\r\n        value = expression.evaluate(parser.parseExpression(input), state.mem)\r\n      }\r\n\r\n      // special case where a prompt for a numerical variable is interpreted as a list variable\r\n      if (variable.type === types.VARIABLE && value.type === types.LIST) {\r\n        variable = { type: types.LISTVARIABLE, name: `List${variable.name}`, custom: true }\r\n      }\r\n\r\n      operation.assignVariable(state.mem, variable, value)\r\n    })\r\n  }, state.io)\r\n  return signal.SUSPEND\r\n}\r\n","// daemon\r\n// ======\r\n\r\nimport * as signal from '../common/signal'\r\n\r\nconst loopMessageName = 'daemon-loop'\r\nconst exceptionName = 'daemon-exception'\r\nconst minimumDelay = 0.001 // 1 microsecond\r\nconst tasks = {}\r\nconst exceptions = []\r\nlet running = false\r\nlet nextTaskId = 0\r\nconst maxExceptions = 1000\r\n\r\nconst eventTarget = document.createTextNode(null)\r\n\r\nfunction fireEvent (name) {\r\n  const event = new Event(name)\r\n  eventTarget.dispatchEvent(event)\r\n}\r\n\r\nfunction startIfNeeded () {\r\n  if (running === false) {\r\n    running = true\r\n    fireEvent('start')\r\n    window.postMessage(loopMessageName, '*')\r\n  }\r\n}\r\n\r\nfunction createTask (func, delay, runOnce) {\r\n  const taskId = nextTaskId++\r\n\r\n  console.debug(`[Task ${taskId}] Start`)\r\n\r\n  tasks[taskId] = {\r\n    func: func,\r\n    delay: Math.max(delay, minimumDelay),\r\n    lastRun: undefined,\r\n    runOnce: runOnce,\r\n    stopOnException: true,\r\n    suspended: false\r\n  }\r\n\r\n  startIfNeeded()\r\n  return taskId\r\n}\r\n\r\nfunction resumeTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Resume`)\r\n\r\n  if (!(taskId in tasks)) {\r\n    console.debug(tasks)\r\n    throw new Error(`Error resuming: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = false\r\n  startIfNeeded()\r\n};\r\n\r\nfunction suspendTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Suspend`)\r\n\r\n  if (!(taskId in tasks)) {\r\n    throw new Error(`Error suspending: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = true\r\n};\r\n\r\nfunction deleteTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Stop`)\r\n  delete tasks[taskId]\r\n};\r\n\r\nfunction handleMessage (event) {\r\n  if (!(event.source === window && event.data === loopMessageName)) {\r\n    return\r\n  }\r\n\r\n  event.stopPropagation()\r\n\r\n  const time = performance.now()\r\n  const taskIds = Object.keys(tasks)\r\n  let runningTaskCount = 0\r\n  let suspendedTaskCount = 0\r\n\r\n  taskIds.forEach(taskId => {\r\n    const task = tasks[taskId]\r\n\r\n    let runs\r\n    if (task.suspended === true) {\r\n      runs = 0\r\n      suspendedTaskCount += 1\r\n    } else {\r\n      runningTaskCount += 1\r\n\r\n      if (task.lastRun === undefined || task.runOnce) {\r\n        runs = 1\r\n      } else {\r\n        const timeSinceRun = time - task.lastRun\r\n        runs = Math.floor(timeSinceRun / task.delay)\r\n      }\r\n    }\r\n\r\n    if (runs > 0) {\r\n      task.lastRun = time\r\n    }\r\n\r\n    for (let i = 0; i < runs; i++) {\r\n      let result\r\n\r\n      try {\r\n        result = task.func()\r\n      } catch (ex) {\r\n        result = signal.FAULTED\r\n\r\n        if (exceptions.length < maxExceptions) {\r\n          exceptions.push(ex)\r\n          window.postMessage(exceptionName, '*')\r\n        }\r\n      }\r\n\r\n      if (result === signal.DONE ||\r\n                task.runOnce ||\r\n                (task.stopOnException && result === signal.FAULTED)) {\r\n        deleteTask(taskId)\r\n        runningTaskCount -= 1\r\n        break\r\n      }\r\n\r\n      if (result === signal.SUSPEND) {\r\n        suspendTask(taskId)\r\n        runningTaskCount -= 1\r\n        suspendedTaskCount += 1\r\n        break\r\n      }\r\n\r\n      if (result === signal.YIELD) {\r\n        break\r\n      }\r\n    }\r\n  })\r\n\r\n  if (runningTaskCount === 0) {\r\n    running = false\r\n    if (suspendedTaskCount > 0) {\r\n      fireEvent('suspend')\r\n    } else {\r\n      fireEvent('stop')\r\n    }\r\n  } else {\r\n    window.postMessage(loopMessageName, '*')\r\n  }\r\n};\r\n\r\nfunction handleException (event) {\r\n  if (!(event.source === window && event.data === exceptionName)) {\r\n    return\r\n  }\r\n\r\n  if (exceptions.length > 0) {\r\n    throw exceptions.pop()\r\n  }\r\n}\r\n\r\nwindow.addEventListener('message', handleMessage, true)\r\nwindow.addEventListener('message', handleException, true)\r\n\r\nexport function setTinyInterval (func, delay) {\r\n  return createTask(func, delay)\r\n}\r\n\r\nexport function clearTinyInterval (tinyIntervalID) {\r\n  deleteTask(tinyIntervalID)\r\n}\r\n\r\nexport function resumeTinyInterval (tinyIntervalID) {\r\n  resumeTask(tinyIntervalID)\r\n}\r\n\r\nexport function setTinyTimeout (func, delay) {\r\n  return createTask(func, delay, true)\r\n}\r\n\r\nexport function clearTinyTimeout (tinyTimeoutID) {\r\n  deleteTask(tinyTimeoutID)\r\n}\r\n\r\nexport const on = eventTarget.addEventListener.bind(eventTarget)\r\nexport const off = eventTarget.removeEventListener.bind(eventTarget)\r\n// export const dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget)\r\n","// runtime\r\n// =======\r\n\r\nimport * as core from '../common/core'\r\nimport * as signal from '../common/signal'\r\nimport * as types from '../common/types'\r\nimport * as statement from '../evaluate/statement'\r\nimport * as iolib from '../evaluate/iolib'\r\nimport * as daemon from './daemon'\r\n\r\nexport function run (lines, options = {}) {\r\n  let sourceLines = []\r\n  if (options.source !== undefined) {\r\n    if (Array.isArray(options.source)) {\r\n      sourceLines = options.source\r\n    } else {\r\n      sourceLines = options.source.split(/\\r?\\n/)\r\n    }\r\n  }\r\n\r\n  let frequencyMs = 1\r\n  if (options.frequencyMs !== undefined) {\r\n    frequencyMs = options.frequencyMs\r\n  }\r\n\r\n  let outputCallback = options.outputCallback\r\n  if (options.elem !== undefined) {\r\n    outputCallback = iolib.elemOutput(options.elem)\r\n  }\r\n\r\n  const state = {\r\n    mem: core.newMem(),\r\n\r\n    resume: undefined,\r\n    resumeCallback: undefined,\r\n\r\n    debug: options.debug === true,\r\n    sourceLines: sourceLines,\r\n\r\n    searchLabel: undefined,\r\n    ifResult: undefined,\r\n    incrementDecrementResult: undefined,\r\n\r\n    maximumLines: 50,\r\n    linesRun: 0,\r\n\r\n    blockStack: [],\r\n    falsyStackHeight: undefined,\r\n    falsyBlockPreviousIf: undefined,\r\n\r\n    i: 0,\r\n    lines: lines,\r\n\r\n    callback: options.callback,\r\n    frequencyMs: frequencyMs,\r\n\r\n    status: 'pending',\r\n\r\n    rows: 8,\r\n    columns: 16,\r\n\r\n    io: {\r\n      output: outputCallback,\r\n      input: options.input,\r\n      stdin: options.stdin,\r\n      includeErrors: options.includeErrors === undefined || options.includeErrors === true,\r\n      includeLibErrors: options.includeLibErrors === undefined || options.includeLibErrors === true,\r\n      includeLineNumbers: options.includeLineNumbers === undefined || options.includeLineNumbers === true,\r\n      includeSource: options.includeSource === undefined || options.includeSource === true\r\n    }\r\n  }\r\n\r\n  const taskId = daemon.setTinyInterval(() => runLoop(state), state.frequencyMs)\r\n  state.resume = (callback) => {\r\n    state.resumeCallback = callback\r\n    daemon.resumeTinyInterval(taskId)\r\n  }\r\n\r\n  return {\r\n    getStatus: () => state.status,\r\n    isActive: () => state.status === 'pending' || state.status === 'running',\r\n    stop: () => {\r\n      iolib.cleanup(state.io)\r\n      daemon.clearTinyInterval(taskId)\r\n    }\r\n  }\r\n}\r\n\r\nfunction runLoop (state) {\r\n  let result\r\n\r\n  try {\r\n    state.status = 'running'\r\n    result = runLine(state)\r\n  } catch (ex) {\r\n    state.status = 'faulted'\r\n\r\n    if (ex.type === undefined) {\r\n      throw ex\r\n    }\r\n\r\n    if (state.i < state.lines.length && ex.hideSource !== true) {\r\n      let source = state.lines[state.i].source\r\n      if (state.sourceLines !== undefined) {\r\n        source = state.sourceLines[state.i]\r\n      }\r\n      ex.source = {\r\n        index: state.i,\r\n        line: source\r\n      }\r\n    }\r\n\r\n    iolib.stderr(ex, state.io)\r\n    result = signal.DONE\r\n  }\r\n\r\n  if (result === signal.DONE) {\r\n    if (state.status !== 'faulted') {\r\n      state.status = 'done'\r\n    }\r\n\r\n    if (state.callback !== undefined) {\r\n      setTimeout(state.callback, 0)\r\n    }\r\n  } else {\r\n    state.i += 1\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction runLine (state) {\r\n  if (state.debug) {\r\n    console.debug({\r\n      Line: state.i,\r\n      searchLabel: state.searchLabel,\r\n      ifResult: state.ifResult,\r\n      blockStack: state.blockStack,\r\n      falsyStackHeight: state.falsyStackHeight,\r\n      falsyBlockPreviousIf: state.falsyBlockPreviousIf,\r\n      source: state.source,\r\n      mem: state.mem\r\n    })\r\n  }\r\n\r\n  if (state.resumeCallback !== undefined) {\r\n    state.resumeCallback()\r\n    state.resumeCallback = undefined\r\n  }\r\n\r\n  if (state.i >= state.lines.length) {\r\n    if (state.searchLabel !== undefined) {\r\n      throw core.LabelError\r\n    }\r\n\r\n    if (state.ifResult !== undefined || state.incrementDecrementResult !== undefined) {\r\n      throw core.SyntaxError\r\n    }\r\n\r\n    if (state.debug) {\r\n      console.debug(state.mem)\r\n    }\r\n\r\n    return signal.DONE\r\n  }\r\n\r\n  state.linesRun++\r\n\r\n  if (state.linesRun >= state.maximumLines) {\r\n    throw core.libError('maxlines')\r\n  }\r\n\r\n  const line = state.lines[state.i]\r\n  const type = line.type\r\n\r\n  // ----- scan for end -----\r\n\r\n  if (state.falsyStackHeight !== undefined) {\r\n    const lastBlockIndex = state.blockStack[state.blockStack.length - 1]\r\n    const lastBlock = state.lines[lastBlockIndex]\r\n\r\n    if (type === types.EndStatement ||\r\n      (type === types.ElseStatement && lastBlock.type === types.ThenStatement)) {\r\n      state.blockStack.pop()\r\n\r\n      if (state.blockStack.length < state.falsyStackHeight) {\r\n        state.falsyStackHeight = undefined\r\n      }\r\n    }\r\n\r\n    if (type === types.ForLoop ||\r\n      type === types.RepeatLoop ||\r\n      type === types.WhileLoop ||\r\n      (type === types.ThenStatement && state.falsyBlockPreviousIf === true) ||\r\n      (type === types.ElseStatement && lastBlock.type === types.ThenStatement)) {\r\n      state.blockStack.push(state.i)\r\n    }\r\n\r\n    state.falsyBlockPreviousIf = type === types.IfStatement\r\n    return\r\n  }\r\n\r\n  state.falsyBlockPreviousIf = undefined\r\n\r\n  // ----- search for label -----\r\n\r\n  if (state.searchLabel !== undefined) {\r\n    if (type === types.LabelStatement && line.location === state.searchLabel) {\r\n      state.searchLabel = undefined\r\n    }\r\n\r\n    return\r\n  }\r\n\r\n  // ----- check if result -----\r\n\r\n  if (state.ifResult !== undefined) {\r\n    const ifResultFalse = state.ifResult !== true\r\n    state.ifResult = undefined\r\n\r\n    if (type === types.ThenStatement) {\r\n      state.blockStack.push(state.i)\r\n\r\n      if (ifResultFalse) {\r\n        state.falsyStackHeight = state.blockStack.length\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    if (ifResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- check incrementDecrementResult -----\r\n\r\n  if (state.incrementDecrementResult !== undefined) {\r\n    const incrementDecrementResultFalse = state.incrementDecrementResult !== true\r\n    state.incrementDecrementResult = undefined\r\n\r\n    if (incrementDecrementResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- normal execution -----\r\n\r\n  if (line.extra === true) {\r\n    throw core.SyntaxError\r\n  }\r\n  if (line.args === true) {\r\n    throw core.ArgumentError\r\n  }\r\n\r\n  return statement.evaluate(line, state)\r\n}\r\n","// entry point\r\n// ==================\r\n\r\nexport { run } from './run/runtime'\r\nexport { on } from './run/daemon'\r\nexport { parse } from './parse/parser'\r\n\r\nexport function exec (source, callback) {\r\n    const lines = ti.parse(source)\r\n    const program = ti.run(lines, {\r\n        outputCallback: callback,\r\n    })\r\n}"],"names":["peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","C","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","escapedParts","parts","map","part","Array","isArray","classEscape","inverted","any","end","other","description","not","describeExpectation","hex","ch","charCodeAt","toString","toUpperCase","s","replace","type","i","j","descriptions","sort","length","slice","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","undefined","peg$result","peg$FAILED","peg$startRuleFunctions","Start","peg$parseStart","peg$startRuleFunction","peg$c1","peg$c4","peg$c10","peg$c24","peg$c25","peg$c26","peg$c27","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$r5","peg$e0","peg$e1","peg$classExpectation","peg$e2","peg$e3","peg$e4","peg$literalExpectation","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$e40","peg$e41","peg$e42","peg$e43","peg$e44","peg$e45","peg$e46","peg$e47","peg$e48","peg$e49","peg$e50","peg$e51","peg$e52","peg$e53","peg$e54","peg$e55","peg$e56","peg$e57","peg$e58","peg$e59","peg$e60","peg$e61","peg$e62","peg$e63","peg$e64","peg$e65","peg$e66","peg$f1","peg$f17","operator","argument","types","UNARY","peg$f18","head","tail","util","buildImplicitBinaryExpression","peg$f19","buildBinaryExpression","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$expected","startRule","substring","ignoreCase","peg$computePosDetails","pos","p","details","peg$VALIDFILENAME","filename","peg$computeLocation","startPos","endPos","loc","startPosDetails","start","offset","endPosDetails","peg$begin","push","variants","peg$expect","top","s0","s1","s2","peg$parseSourceCharacter","pop","e","apply","EmptyStatement","peg$parseEmptyStatement","s3","value","assignable","peg$parseLogicalExpression","substr","peg$parseAssignable","AssignmentStatement","peg$parseAssignment","extra","peg$parseExtraCharacters","IfStatement","peg$parseIfStatement","ThenStatement","peg$parseThen","ElseStatement","peg$parseElse","s4","s5","s6","s8","variable","step","args","peg$parseVariable","peg$parseArgumentExpression","peg$parseExtraArguments","peg$parseOptionalEndParen","ForLoop","peg$parseFor","WhileLoop","peg$parseWhile","RepeatLoop","peg$parseRepeat","EndStatement","peg$parseEnd","PauseStatement","peg$parsePause","peg$parseLocation","LabelStatement","peg$parseLabel","GotoStatement","peg$parseGoto","IncrementSkip","peg$parseIncrementSkip","DecrementSkip","peg$parseDecrementSkip","s7","rule$expects","peg$parseStringLiteral","title","buildMenuStatement","peg$f35","peg$parseMenu","peg$parseProgramName","ProgramStatement","peg$parseProgram","ReturnStatement","peg$parseReturn","StopStatement","peg$parseStop","DelVarStatement","peg$parseDelVar","equation","style","GraphStyleStatement","peg$parseGraphStyle","OpenLibStatement","peg$parseOpenLib","ExecLibStatement","peg$parseExecLib","peg$parseCtlStatement","peg$parsePrefixArgumentExpression","Input","peg$f43","peg$parseInput","Prompt","peg$parsePrompt","Display","peg$parseDisplay","DispGraph","peg$parseDispGraph","DispTable","peg$parseDispTable","row","Output","peg$parseOutput","ClrHome","peg$parseClrHome","ClrTable","peg$parseClrTable","portflag","GetCalc","peg$parseGetCalc","Get","peg$parseGet","Send","peg$parseSend","peg$parseIoStatement","ValueStatement","peg$parseValueStatement","peg$parseStatement","charAt","peg$parseAlpha","test","peg$parseAlphaNum","peg$parseDigit","peg$parseListVariable","peg$parseListVariableIdentifier","LISTVARIABLE","custom","peg$parseCustomListVariableIdentifier","peg$f8","peg$parseStringVariableIdentifier","STRINGVARIABLE","peg$parseStringVariable","peg$parseNumericVariableIdentifier","VARIABLE","peg$parseNumericVariable","list","index","LISTINDEX","peg$parseListIndex","peg$parseInteger","peg$parseExponentPart","peg$parseExponentIndicator","peg$parseSignedInteger","peg$parseCharacter","chars","peg$parseCharacterString","STRING","peg$parseTokenLiteral","ANS","peg$parseAnswer","GetKey","peg$parseGetKey","peg$parseToken","peg$parseUnaryOperator","peg$parseTokenUnaryExpression","buildList","peg$parseListExpression","peg$parseTokenExpression","peg$parseUnaryExpression","integer","fraction","exponent","NUMBER","peg$f11","peg$f12","peg$parseNumericLiteral","peg$parseImplicitMultiplicativeExpression","peg$parseMultiplicativeOperator","peg$parseMultiplicativeExpression","peg$parseAdditiveOperator","peg$parseAdditiveExpression","peg$parseTestOperator","peg$parseTestExpression","peg$parseLogicalOperator","failPos","peg$buildStructuredError","ti","lib","LIST","BINARY","MenuStatement","reduce","result","element","left","right","flat","choices","option","elements","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","hasOwnProperty","call","r","Symbol","toStringTag","error","code","hideSource","tiError","DataTypeError","UndefinedError","LabelError","ArgumentError","DimMismatchError","DivideByZeroError","InvalidDimError","DomainError","libError","UnimplementedError","newFloat","float","ONE","MINUSONE","DONE","FAULTED","SUSPEND","source","sourceMap","parsedLines","split","parsedLine","isTruthy","assignVariable","mem","vars","assignAns","ans","binaryOperation","resolveNumber","str","parseFloat","valueToString","strict","startsWith","evaluate","behavior","expressionOf","resolved","unaryOf","binaryOf","applyUnaryOperation","applyBinaryOperationListAndNumber","number","applyBinaryOperation","x","y","includes","assignmentOf","stdout","newline","output","console","log","onStdin","callback","stdin","stdinQueue","reverse","setTimeout","val","on","keyCode","off","prompt","statementOf","increment","getInput","state","allowStringLiterals","io","resume","sourceLines","Length","sourceLine","ifResult","blockStack","lines","falsyStackHeight","searchLabel","incrementDecrementResult","forEach","choice","idx","digit","rows","columns","loopMessageName","exceptionName","tasks","exceptions","running","nextTaskId","eventTarget","document","createTextNode","fireEvent","event","Event","dispatchEvent","startIfNeeded","window","postMessage","suspendTask","taskId","debug","suspended","deleteTask","addEventListener","data","stopPropagation","time","performance","now","taskIds","keys","runningTaskCount","suspendedTaskCount","task","runs","lastRun","runOnce","timeSinceRun","Math","floor","delay","func","ex","stopOnException","bind","run","frequencyMs","outputCallback","elem","resumeCallback","maximumLines","linesRun","falsyBlockPreviousIf","status","includeErrors","includeLibErrors","includeLineNumbers","includeSource","Line","lastBlockIndex","lastBlock","ifResultFalse","incrementDecrementResultFalse","runLine","runLoop","max","createTask","resumeTask","getStatus","isActive","stop","exec","removeEventListener"],"sourceRoot":""}